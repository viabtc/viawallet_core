// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Binance.proto

package wallet.core.jni.proto;

public final class Binance {
  private Binance() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.Transaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @return A list containing the msgs.
     */
    java.util.List<com.google.protobuf.ByteString> getMsgsList();
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @return The count of msgs.
     */
    int getMsgsCount();
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @param index The index of the element to return.
     * @return The msgs at the given index.
     */
    com.google.protobuf.ByteString getMsgs(int index);

    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return A list containing the signatures.
     */
    java.util.List<com.google.protobuf.ByteString> getSignaturesList();
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return The count of signatures.
     */
    int getSignaturesCount();
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index of the element to return.
     * @return The signatures at the given index.
     */
    com.google.protobuf.ByteString getSignatures(int index);

    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     * @return The memo.
     */
    java.lang.String getMemo();
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     * @return The bytes for memo.
     */
    com.google.protobuf.ByteString
        getMemoBytes();

    /**
     * <pre>
     * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>int64 source = 4;</code>
     * @return The source.
     */
    long getSource();

    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>bytes data = 5;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Transaction structure, used internally
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.Transaction}
   */
  public  static final class Transaction extends
      com.google.protobuf.GeneratedMessageLite<
          Transaction, Transaction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.Transaction)
      TransactionOrBuilder {
    private Transaction() {
      msgs_ = emptyProtobufList();
      signatures_ = emptyProtobufList();
      memo_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int MSGS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> msgs_;
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @return A list containing the msgs.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getMsgsList() {
      return msgs_;
    }
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @return The count of msgs.
     */
    @java.lang.Override
    public int getMsgsCount() {
      return msgs_.size();
    }
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @param index The index of the element to return.
     * @return The msgs at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMsgs(int index) {
      return msgs_.get(index);
    }
    private void ensureMsgsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = msgs_;
      if (!tmp.isModifiable()) {
        msgs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @param index The index to set the value at.
     * @param value The msgs to set.
     */
    private void setMsgs(
        int index, com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureMsgsIsMutable();
      msgs_.set(index, value);
    }
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @param value The msgs to add.
     */
    private void addMsgs(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureMsgsIsMutable();
      msgs_.add(value);
    }
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     * @param values The msgs to add.
     */
    private void addAllMsgs(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureMsgsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, msgs_);
    }
    /**
     * <pre>
     * array of size 1, containing the transaction message, which are one of the transaction type below
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    private void clearMsgs() {
      msgs_ = emptyProtobufList();
    }

    public static final int SIGNATURES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> signatures_;
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return A list containing the signatures.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return The count of signatures.
     */
    @java.lang.Override
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index of the element to return.
     * @return The signatures at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignatures(int index) {
      return signatures_.get(index);
    }
    private void ensureSignaturesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = signatures_;
      if (!tmp.isModifiable()) {
        signatures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index to set the value at.
     * @param value The signatures to set.
     */
    private void setSignatures(
        int index, com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureSignaturesIsMutable();
      signatures_.set(index, value);
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param value The signatures to add.
     */
    private void addSignatures(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureSignaturesIsMutable();
      signatures_.add(value);
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param values The signatures to add.
     */
    private void addAllSignatures(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureSignaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, signatures_);
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void clearSignatures() {
      signatures_ = emptyProtobufList();
    }

    public static final int MEMO_FIELD_NUMBER = 3;
    private java.lang.String memo_;
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     * @return The memo.
     */
    @java.lang.Override
    public java.lang.String getMemo() {
      return memo_;
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     * @return The bytes for memo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMemoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(memo_);
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     * @param value The memo to set.
     */
    private void setMemo(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      memo_ = value;
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     */
    private void clearMemo() {
      
      memo_ = getDefaultInstance().getMemo();
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>string memo = 3;</code>
     * @param value The bytes for memo to set.
     */
    private void setMemoBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      memo_ = value.toStringUtf8();
      
    }

    public static final int SOURCE_FIELD_NUMBER = 4;
    private long source_;
    /**
     * <pre>
     * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>int64 source = 4;</code>
     * @return The source.
     */
    @java.lang.Override
    public long getSource() {
      return source_;
    }
    /**
     * <pre>
     * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>int64 source = 4;</code>
     * @param value The source to set.
     */
    private void setSource(long value) {
      
      source_ = value;
    }
    /**
     * <pre>
     * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>int64 source = 4;</code>
     */
    private void clearSource() {
      
      source_ = 0L;
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>bytes data = 5;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>bytes data = 5;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      data_ = value;
    }
    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>bytes data = 5;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.Transaction prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Transaction structure, used internally
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.Transaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.Transaction)
        wallet.core.jni.proto.Binance.TransactionOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.Transaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @return A list containing the msgs.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getMsgsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMsgsList());
      }
      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @return The count of msgs.
       */
      @java.lang.Override
      public int getMsgsCount() {
        return instance.getMsgsCount();
      }
      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @param index The index of the element to return.
       * @return The msgs at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMsgs(int index) {
        return instance.getMsgs(index);
      }
      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @param value The msgs to set.
       * @return This builder for chaining.
       */
      public Builder setMsgs(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMsgs(index, value);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @param value The msgs to add.
       * @return This builder for chaining.
       */
      public Builder addMsgs(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addMsgs(value);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @param values The msgs to add.
       * @return This builder for chaining.
       */
      public Builder addAllMsgs(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllMsgs(values);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the transaction message, which are one of the transaction type below
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgs() {
        copyOnWrite();
        instance.clearMsgs();
        return this;
      }

      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return A list containing the signatures.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getSignaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getSignaturesList());
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return The count of signatures.
       */
      @java.lang.Override
      public int getSignaturesCount() {
        return instance.getSignaturesCount();
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param index The index of the element to return.
       * @return The signatures at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignatures(int index) {
        return instance.getSignatures(index);
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param value The signatures to set.
       * @return This builder for chaining.
       */
      public Builder setSignatures(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignatures(index, value);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param value The signatures to add.
       * @return This builder for chaining.
       */
      public Builder addSignatures(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addSignatures(value);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param values The signatures to add.
       * @return This builder for chaining.
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllSignatures(values);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignatures() {
        copyOnWrite();
        instance.clearSignatures();
        return this;
      }

      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>string memo = 3;</code>
       * @return The memo.
       */
      @java.lang.Override
      public java.lang.String getMemo() {
        return instance.getMemo();
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>string memo = 3;</code>
       * @return The bytes for memo.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMemoBytes() {
        return instance.getMemoBytes();
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>string memo = 3;</code>
       * @param value The memo to set.
       * @return This builder for chaining.
       */
      public Builder setMemo(
          java.lang.String value) {
        copyOnWrite();
        instance.setMemo(value);
        return this;
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>string memo = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemo() {
        copyOnWrite();
        instance.clearMemo();
        return this;
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>string memo = 3;</code>
       * @param value The bytes for memo to set.
       * @return This builder for chaining.
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMemoBytes(value);
        return this;
      }

      /**
       * <pre>
       * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
       * </pre>
       *
       * <code>int64 source = 4;</code>
       * @return The source.
       */
      @java.lang.Override
      public long getSource() {
        return instance.getSource();
      }
      /**
       * <pre>
       * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
       * </pre>
       *
       * <code>int64 source = 4;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(long value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <pre>
       * an identifier for tools triggering this transaction, set to zero if unwilling to disclose.
       * </pre>
       *
       * <code>int64 source = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }

      /**
       * <pre>
       * reserved for future use
       * </pre>
       *
       * <code>bytes data = 5;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * reserved for future use
       * </pre>
       *
       * <code>bytes data = 5;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * reserved for future use
       * </pre>
       *
       * <code>bytes data = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.Transaction)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.Transaction();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "msgs_",
              "signatures_",
              "memo_",
              "source_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0002\u0000\u0001\u001c\u0002\u001c" +
                "\u0003\u0208\u0004\u0002\u0005\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.Transaction> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.Transaction.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.Transaction>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.Transaction)
    private static final wallet.core.jni.proto.Binance.Transaction DEFAULT_INSTANCE;
    static {
      Transaction defaultInstance = new Transaction();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Transaction.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Transaction> PARSER;

    public static com.google.protobuf.Parser<Transaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.Signature)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>bytes pub_key = 1;</code>
     * @return The pubKey.
     */
    com.google.protobuf.ByteString getPubKey();

    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>int64 account_number = 3;</code>
     * @return The accountNumber.
     */
    long getAccountNumber();

    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>int64 sequence = 4;</code>
     * @return The sequence.
     */
    long getSequence();
  }
  /**
   * <pre>
   * Signature structure, used internally
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.Signature}
   */
  public  static final class Signature extends
      com.google.protobuf.GeneratedMessageLite<
          Signature, Signature.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.Signature)
      SignatureOrBuilder {
    private Signature() {
      pubKey_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int PUB_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pubKey_;
    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>bytes pub_key = 1;</code>
     * @return The pubKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPubKey() {
      return pubKey_;
    }
    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>bytes pub_key = 1;</code>
     * @param value The pubKey to set.
     */
    private void setPubKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      pubKey_ = value;
    }
    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>bytes pub_key = 1;</code>
     */
    private void clearPubKey() {
      
      pubKey_ = getDefaultInstance().getPubKey();
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }
    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @param value The signature to set.
     */
    private void setSignature(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      signature_ = value;
    }
    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     */
    private void clearSignature() {
      
      signature_ = getDefaultInstance().getSignature();
    }

    public static final int ACCOUNT_NUMBER_FIELD_NUMBER = 3;
    private long accountNumber_;
    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>int64 account_number = 3;</code>
     * @return The accountNumber.
     */
    @java.lang.Override
    public long getAccountNumber() {
      return accountNumber_;
    }
    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>int64 account_number = 3;</code>
     * @param value The accountNumber to set.
     */
    private void setAccountNumber(long value) {
      
      accountNumber_ = value;
    }
    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>int64 account_number = 3;</code>
     */
    private void clearAccountNumber() {
      
      accountNumber_ = 0L;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 4;
    private long sequence_;
    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>int64 sequence = 4;</code>
     * @return The sequence.
     */
    @java.lang.Override
    public long getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>int64 sequence = 4;</code>
     * @param value The sequence to set.
     */
    private void setSequence(long value) {
      
      sequence_ = value;
    }
    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>int64 sequence = 4;</code>
     */
    private void clearSequence() {
      
      sequence_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Signature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.Signature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.Signature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.Signature prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Signature structure, used internally
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.Signature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.Signature, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.Signature)
        wallet.core.jni.proto.Binance.SignatureOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.Signature.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * public key bytes of the signer address
       * </pre>
       *
       * <code>bytes pub_key = 1;</code>
       * @return The pubKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPubKey() {
        return instance.getPubKey();
      }
      /**
       * <pre>
       * public key bytes of the signer address
       * </pre>
       *
       * <code>bytes pub_key = 1;</code>
       * @param value The pubKey to set.
       * @return This builder for chaining.
       */
      public Builder setPubKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPubKey(value);
        return this;
      }
      /**
       * <pre>
       * public key bytes of the signer address
       * </pre>
       *
       * <code>bytes pub_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPubKey() {
        copyOnWrite();
        instance.clearPubKey();
        return this;
      }

      /**
       * <pre>
       * signature bytes, please check chain access section for signature generation
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return instance.getSignature();
      }
      /**
       * <pre>
       * signature bytes, please check chain access section for signature generation
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignature(value);
        return this;
      }
      /**
       * <pre>
       * signature bytes, please check chain access section for signature generation
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        copyOnWrite();
        instance.clearSignature();
        return this;
      }

      /**
       * <pre>
       * another identifier of signer, which can be read from chain by account REST API or RPC
       * </pre>
       *
       * <code>int64 account_number = 3;</code>
       * @return The accountNumber.
       */
      @java.lang.Override
      public long getAccountNumber() {
        return instance.getAccountNumber();
      }
      /**
       * <pre>
       * another identifier of signer, which can be read from chain by account REST API or RPC
       * </pre>
       *
       * <code>int64 account_number = 3;</code>
       * @param value The accountNumber to set.
       * @return This builder for chaining.
       */
      public Builder setAccountNumber(long value) {
        copyOnWrite();
        instance.setAccountNumber(value);
        return this;
      }
      /**
       * <pre>
       * another identifier of signer, which can be read from chain by account REST API or RPC
       * </pre>
       *
       * <code>int64 account_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountNumber() {
        copyOnWrite();
        instance.clearAccountNumber();
        return this;
      }

      /**
       * <pre>
       * sequence number for the next transaction
       * </pre>
       *
       * <code>int64 sequence = 4;</code>
       * @return The sequence.
       */
      @java.lang.Override
      public long getSequence() {
        return instance.getSequence();
      }
      /**
       * <pre>
       * sequence number for the next transaction
       * </pre>
       *
       * <code>int64 sequence = 4;</code>
       * @param value The sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequence(long value) {
        copyOnWrite();
        instance.setSequence(value);
        return this;
      }
      /**
       * <pre>
       * sequence number for the next transaction
       * </pre>
       *
       * <code>int64 sequence = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequence() {
        copyOnWrite();
        instance.clearSequence();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.Signature)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.Signature();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "pubKey_",
              "signature_",
              "accountNumber_",
              "sequence_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\u0002\u0004\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.Signature> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.Signature.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.Signature>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.Signature)
    private static final wallet.core.jni.proto.Binance.Signature DEFAULT_INSTANCE;
    static {
      Signature defaultInstance = new Signature();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Signature.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.Signature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Signature> PARSER;

    public static com.google.protobuf.Parser<Signature> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TradeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TradeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     * @return The sender.
     */
    com.google.protobuf.ByteString getSender();

    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>int64 ordertype = 4;</code>
     * @return The ordertype.
     */
    long getOrdertype();

    /**
     * <pre>
     * 1 for buy and 2 for sell
     * </pre>
     *
     * <code>int64 side = 5;</code>
     * @return The side.
     */
    long getSide();

    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 price = 6;</code>
     * @return The price.
     */
    long getPrice();

    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 quantity = 7;</code>
     * @return The quantity.
     */
    long getQuantity();

    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>int64 timeinforce = 8;</code>
     * @return The timeinforce.
     */
    long getTimeinforce();
  }
  /**
   * <pre>
   * Message for Trade order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TradeOrder}
   */
  public  static final class TradeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TradeOrder, TradeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TradeOrder)
      TradeOrderOrBuilder {
    private TradeOrder() {
      sender_ = com.google.protobuf.ByteString.EMPTY;
      id_ = "";
      symbol_ = "";
    }
    public static final int SENDER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sender_;
    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     * @return The sender.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSender() {
      return sender_;
    }
    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     * @param value The sender to set.
     */
    private void setSender(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      sender_ = value;
    }
    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     */
    private void clearSender() {
      
      sender_ = getDefaultInstance().getSender();
    }

    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.String id_;
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return id_;
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     * @param value The id to set.
     */
    private void setId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      id_ = value;
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    private void clearId() {
      
      id_ = getDefaultInstance().getId();
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>string id = 2;</code>
     * @param value The bytes for id to set.
     */
    private void setIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      id_ = value.toStringUtf8();
      
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    private java.lang.String symbol_;
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int ORDERTYPE_FIELD_NUMBER = 4;
    private long ordertype_;
    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>int64 ordertype = 4;</code>
     * @return The ordertype.
     */
    @java.lang.Override
    public long getOrdertype() {
      return ordertype_;
    }
    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>int64 ordertype = 4;</code>
     * @param value The ordertype to set.
     */
    private void setOrdertype(long value) {
      
      ordertype_ = value;
    }
    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>int64 ordertype = 4;</code>
     */
    private void clearOrdertype() {
      
      ordertype_ = 0L;
    }

    public static final int SIDE_FIELD_NUMBER = 5;
    private long side_;
    /**
     * <pre>
     * 1 for buy and 2 for sell
     * </pre>
     *
     * <code>int64 side = 5;</code>
     * @return The side.
     */
    @java.lang.Override
    public long getSide() {
      return side_;
    }
    /**
     * <pre>
     * 1 for buy and 2 for sell
     * </pre>
     *
     * <code>int64 side = 5;</code>
     * @param value The side to set.
     */
    private void setSide(long value) {
      
      side_ = value;
    }
    /**
     * <pre>
     * 1 for buy and 2 for sell
     * </pre>
     *
     * <code>int64 side = 5;</code>
     */
    private void clearSide() {
      
      side_ = 0L;
    }

    public static final int PRICE_FIELD_NUMBER = 6;
    private long price_;
    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 price = 6;</code>
     * @return The price.
     */
    @java.lang.Override
    public long getPrice() {
      return price_;
    }
    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 price = 6;</code>
     * @param value The price to set.
     */
    private void setPrice(long value) {
      
      price_ = value;
    }
    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 price = 6;</code>
     */
    private void clearPrice() {
      
      price_ = 0L;
    }

    public static final int QUANTITY_FIELD_NUMBER = 7;
    private long quantity_;
    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 quantity = 7;</code>
     * @return The quantity.
     */
    @java.lang.Override
    public long getQuantity() {
      return quantity_;
    }
    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 quantity = 7;</code>
     * @param value The quantity to set.
     */
    private void setQuantity(long value) {
      
      quantity_ = value;
    }
    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>int64 quantity = 7;</code>
     */
    private void clearQuantity() {
      
      quantity_ = 0L;
    }

    public static final int TIMEINFORCE_FIELD_NUMBER = 8;
    private long timeinforce_;
    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>int64 timeinforce = 8;</code>
     * @return The timeinforce.
     */
    @java.lang.Override
    public long getTimeinforce() {
      return timeinforce_;
    }
    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>int64 timeinforce = 8;</code>
     * @param value The timeinforce to set.
     */
    private void setTimeinforce(long value) {
      
      timeinforce_ = value;
    }
    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>int64 timeinforce = 8;</code>
     */
    private void clearTimeinforce() {
      
      timeinforce_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TradeOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for Trade order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TradeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TradeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TradeOrder)
        wallet.core.jni.proto.Binance.TradeOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TradeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * originating address
       * </pre>
       *
       * <code>bytes sender = 1;</code>
       * @return The sender.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSender() {
        return instance.getSender();
      }
      /**
       * <pre>
       * originating address
       * </pre>
       *
       * <code>bytes sender = 1;</code>
       * @param value The sender to set.
       * @return This builder for chaining.
       */
      public Builder setSender(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSender(value);
        return this;
      }
      /**
       * <pre>
       * originating address
       * </pre>
       *
       * <code>bytes sender = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSender() {
        copyOnWrite();
        instance.clearSender();
        return this;
      }

      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * only accept 2 for now, meaning limit order
       * </pre>
       *
       * <code>int64 ordertype = 4;</code>
       * @return The ordertype.
       */
      @java.lang.Override
      public long getOrdertype() {
        return instance.getOrdertype();
      }
      /**
       * <pre>
       * only accept 2 for now, meaning limit order
       * </pre>
       *
       * <code>int64 ordertype = 4;</code>
       * @param value The ordertype to set.
       * @return This builder for chaining.
       */
      public Builder setOrdertype(long value) {
        copyOnWrite();
        instance.setOrdertype(value);
        return this;
      }
      /**
       * <pre>
       * only accept 2 for now, meaning limit order
       * </pre>
       *
       * <code>int64 ordertype = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrdertype() {
        copyOnWrite();
        instance.clearOrdertype();
        return this;
      }

      /**
       * <pre>
       * 1 for buy and 2 for sell
       * </pre>
       *
       * <code>int64 side = 5;</code>
       * @return The side.
       */
      @java.lang.Override
      public long getSide() {
        return instance.getSide();
      }
      /**
       * <pre>
       * 1 for buy and 2 for sell
       * </pre>
       *
       * <code>int64 side = 5;</code>
       * @param value The side to set.
       * @return This builder for chaining.
       */
      public Builder setSide(long value) {
        copyOnWrite();
        instance.setSide(value);
        return this;
      }
      /**
       * <pre>
       * 1 for buy and 2 for sell
       * </pre>
       *
       * <code>int64 side = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSide() {
        copyOnWrite();
        instance.clearSide();
        return this;
      }

      /**
       * <pre>
       * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>int64 price = 6;</code>
       * @return The price.
       */
      @java.lang.Override
      public long getPrice() {
        return instance.getPrice();
      }
      /**
       * <pre>
       * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>int64 price = 6;</code>
       * @param value The price to set.
       * @return This builder for chaining.
       */
      public Builder setPrice(long value) {
        copyOnWrite();
        instance.setPrice(value);
        return this;
      }
      /**
       * <pre>
       * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>int64 price = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrice() {
        copyOnWrite();
        instance.clearPrice();
        return this;
      }

      /**
       * <pre>
       * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>int64 quantity = 7;</code>
       * @return The quantity.
       */
      @java.lang.Override
      public long getQuantity() {
        return instance.getQuantity();
      }
      /**
       * <pre>
       * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>int64 quantity = 7;</code>
       * @param value The quantity to set.
       * @return This builder for chaining.
       */
      public Builder setQuantity(long value) {
        copyOnWrite();
        instance.setQuantity(value);
        return this;
      }
      /**
       * <pre>
       * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>int64 quantity = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuantity() {
        copyOnWrite();
        instance.clearQuantity();
        return this;
      }

      /**
       * <pre>
       * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
       * </pre>
       *
       * <code>int64 timeinforce = 8;</code>
       * @return The timeinforce.
       */
      @java.lang.Override
      public long getTimeinforce() {
        return instance.getTimeinforce();
      }
      /**
       * <pre>
       * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
       * </pre>
       *
       * <code>int64 timeinforce = 8;</code>
       * @param value The timeinforce to set.
       * @return This builder for chaining.
       */
      public Builder setTimeinforce(long value) {
        copyOnWrite();
        instance.setTimeinforce(value);
        return this;
      }
      /**
       * <pre>
       * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
       * </pre>
       *
       * <code>int64 timeinforce = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeinforce() {
        copyOnWrite();
        instance.clearTimeinforce();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TradeOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TradeOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "sender_",
              "id_",
              "symbol_",
              "ordertype_",
              "side_",
              "price_",
              "quantity_",
              "timeinforce_",
            };
            java.lang.String info =
                "\u0000\b\u0000\u0000\u0001\b\b\u0000\u0000\u0000\u0001\n\u0002\u0208\u0003\u0208" +
                "\u0004\u0002\u0005\u0002\u0006\u0002\u0007\u0002\b\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TradeOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TradeOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TradeOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TradeOrder)
    private static final wallet.core.jni.proto.Binance.TradeOrder DEFAULT_INSTANCE;
    static {
      TradeOrder defaultInstance = new TradeOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TradeOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TradeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TradeOrder> PARSER;

    public static com.google.protobuf.Parser<TradeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CancelTradeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.CancelTradeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     * @return The sender.
     */
    com.google.protobuf.ByteString getSender();

    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     * @return The refid.
     */
    java.lang.String getRefid();
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     * @return The bytes for refid.
     */
    com.google.protobuf.ByteString
        getRefidBytes();
  }
  /**
   * <pre>
   * Message for CancelTrade order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.CancelTradeOrder}
   */
  public  static final class CancelTradeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          CancelTradeOrder, CancelTradeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.CancelTradeOrder)
      CancelTradeOrderOrBuilder {
    private CancelTradeOrder() {
      sender_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
      refid_ = "";
    }
    public static final int SENDER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sender_;
    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     * @return The sender.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSender() {
      return sender_;
    }
    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     * @param value The sender to set.
     */
    private void setSender(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      sender_ = value;
    }
    /**
     * <pre>
     * originating address
     * </pre>
     *
     * <code>bytes sender = 1;</code>
     */
    private void clearSender() {
      
      sender_ = getDefaultInstance().getSender();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int REFID_FIELD_NUMBER = 3;
    private java.lang.String refid_;
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     * @return The refid.
     */
    @java.lang.Override
    public java.lang.String getRefid() {
      return refid_;
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     * @return The bytes for refid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRefidBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(refid_);
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     * @param value The refid to set.
     */
    private void setRefid(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      refid_ = value;
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     */
    private void clearRefid() {
      
      refid_ = getDefaultInstance().getRefid();
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>string refid = 3;</code>
     * @param value The bytes for refid to set.
     */
    private void setRefidBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      refid_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.CancelTradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.CancelTradeOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for CancelTrade order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.CancelTradeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.CancelTradeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.CancelTradeOrder)
        wallet.core.jni.proto.Binance.CancelTradeOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.CancelTradeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * originating address
       * </pre>
       *
       * <code>bytes sender = 1;</code>
       * @return The sender.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSender() {
        return instance.getSender();
      }
      /**
       * <pre>
       * originating address
       * </pre>
       *
       * <code>bytes sender = 1;</code>
       * @param value The sender to set.
       * @return This builder for chaining.
       */
      public Builder setSender(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSender(value);
        return this;
      }
      /**
       * <pre>
       * originating address
       * </pre>
       *
       * <code>bytes sender = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSender() {
        copyOnWrite();
        instance.clearSender();
        return this;
      }

      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>string refid = 3;</code>
       * @return The refid.
       */
      @java.lang.Override
      public java.lang.String getRefid() {
        return instance.getRefid();
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>string refid = 3;</code>
       * @return The bytes for refid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRefidBytes() {
        return instance.getRefidBytes();
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>string refid = 3;</code>
       * @param value The refid to set.
       * @return This builder for chaining.
       */
      public Builder setRefid(
          java.lang.String value) {
        copyOnWrite();
        instance.setRefid(value);
        return this;
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>string refid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefid() {
        copyOnWrite();
        instance.clearRefid();
        return this;
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>string refid = 3;</code>
       * @param value The bytes for refid to set.
       * @return This builder for chaining.
       */
      public Builder setRefidBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRefidBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.CancelTradeOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.CancelTradeOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "sender_",
              "symbol_",
              "refid_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "\u0003\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.CancelTradeOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.CancelTradeOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.CancelTradeOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.CancelTradeOrder)
    private static final wallet.core.jni.proto.Binance.CancelTradeOrder DEFAULT_INSTANCE;
    static {
      CancelTradeOrder defaultInstance = new CancelTradeOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CancelTradeOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.CancelTradeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CancelTradeOrder> PARSER;

    public static com.google.protobuf.Parser<CancelTradeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SendOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SendOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    java.util.List<wallet.core.jni.proto.Binance.SendOrder.Input> 
        getInputsList();
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    wallet.core.jni.proto.Binance.SendOrder.Input getInputs(int index);
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    int getInputsCount();

    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    java.util.List<wallet.core.jni.proto.Binance.SendOrder.Output> 
        getOutputsList();
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    wallet.core.jni.proto.Binance.SendOrder.Output getOutputs(int index);
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    int getOutputsCount();
  }
  /**
   * <pre>
   * Message for Send order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.SendOrder}
   */
  public  static final class SendOrder extends
      com.google.protobuf.GeneratedMessageLite<
          SendOrder, SendOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SendOrder)
      SendOrderOrBuilder {
    private SendOrder() {
      inputs_ = emptyProtobufList();
      outputs_ = emptyProtobufList();
    }
    public interface TokenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SendOrder.Token)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       * @return The denom.
       */
      java.lang.String getDenom();
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       * @return The bytes for denom.
       */
      com.google.protobuf.ByteString
          getDenomBytes();

      /**
       * <pre>
       * Amount
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       * @return The amount.
       */
      long getAmount();
    }
    /**
     * <pre>
     * A token amount, symbol-amount pair.  Could be moved out of SendOrder; kept here for backward compatibility.
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.SendOrder.Token}
     */
    public  static final class Token extends
        com.google.protobuf.GeneratedMessageLite<
            Token, Token.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SendOrder.Token)
        TokenOrBuilder {
      private Token() {
        denom_ = "";
      }
      public static final int DENOM_FIELD_NUMBER = 1;
      private java.lang.String denom_;
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       * @return The denom.
       */
      @java.lang.Override
      public java.lang.String getDenom() {
        return denom_;
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       * @return The bytes for denom.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDenomBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(denom_);
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       * @param value The denom to set.
       */
      private void setDenom(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        denom_ = value;
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       */
      private void clearDenom() {
        
        denom_ = getDefaultInstance().getDenom();
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string denom = 1;</code>
       * @param value The bytes for denom to set.
       */
      private void setDenomBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        denom_ = value.toStringUtf8();
        
      }

      public static final int AMOUNT_FIELD_NUMBER = 2;
      private long amount_;
      /**
       * <pre>
       * Amount
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       * @param value The amount to set.
       */
      private void setAmount(long value) {
        
        amount_ = value;
      }
      /**
       * <pre>
       * Amount
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       */
      private void clearAmount() {
        
        amount_ = 0L;
      }

      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Token parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Binance.SendOrder.Token prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * A token amount, symbol-amount pair.  Could be moved out of SendOrder; kept here for backward compatibility.
       * </pre>
       *
       * Protobuf type {@code TW.Binance.Proto.SendOrder.Token}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Binance.SendOrder.Token, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SendOrder.Token)
          wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder {
        // Construct using wallet.core.jni.proto.Binance.SendOrder.Token.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Token ID
         * </pre>
         *
         * <code>string denom = 1;</code>
         * @return The denom.
         */
        @java.lang.Override
        public java.lang.String getDenom() {
          return instance.getDenom();
        }
        /**
         * <pre>
         * Token ID
         * </pre>
         *
         * <code>string denom = 1;</code>
         * @return The bytes for denom.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDenomBytes() {
          return instance.getDenomBytes();
        }
        /**
         * <pre>
         * Token ID
         * </pre>
         *
         * <code>string denom = 1;</code>
         * @param value The denom to set.
         * @return This builder for chaining.
         */
        public Builder setDenom(
            java.lang.String value) {
          copyOnWrite();
          instance.setDenom(value);
          return this;
        }
        /**
         * <pre>
         * Token ID
         * </pre>
         *
         * <code>string denom = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDenom() {
          copyOnWrite();
          instance.clearDenom();
          return this;
        }
        /**
         * <pre>
         * Token ID
         * </pre>
         *
         * <code>string denom = 1;</code>
         * @param value The bytes for denom to set.
         * @return This builder for chaining.
         */
        public Builder setDenomBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setDenomBytes(value);
          return this;
        }

        /**
         * <pre>
         * Amount
         * </pre>
         *
         * <code>int64 amount = 2;</code>
         * @return The amount.
         */
        @java.lang.Override
        public long getAmount() {
          return instance.getAmount();
        }
        /**
         * <pre>
         * Amount
         * </pre>
         *
         * <code>int64 amount = 2;</code>
         * @param value The amount to set.
         * @return This builder for chaining.
         */
        public Builder setAmount(long value) {
          copyOnWrite();
          instance.setAmount(value);
          return this;
        }
        /**
         * <pre>
         * Amount
         * </pre>
         *
         * <code>int64 amount = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmount() {
          copyOnWrite();
          instance.clearAmount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SendOrder.Token)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Binance.SendOrder.Token();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "denom_",
                "amount_",
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0002" +
                  "";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SendOrder.Token> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Binance.SendOrder.Token.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SendOrder.Token>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SendOrder.Token)
      private static final wallet.core.jni.proto.Binance.SendOrder.Token DEFAULT_INSTANCE;
      static {
        Token defaultInstance = new Token();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Token.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Binance.SendOrder.Token getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Token> PARSER;

      public static com.google.protobuf.Parser<Token> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface InputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SendOrder.Input)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       * @return The address.
       */
      com.google.protobuf.ByteString getAddress();

      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> 
          getCoinsList();
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      wallet.core.jni.proto.Binance.SendOrder.Token getCoins(int index);
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      int getCoinsCount();
    }
    /**
     * <pre>
     * Transaction input
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.SendOrder.Input}
     */
    public  static final class Input extends
        com.google.protobuf.GeneratedMessageLite<
            Input, Input.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SendOrder.Input)
        InputOrBuilder {
      private Input() {
        address_ = com.google.protobuf.ByteString.EMPTY;
        coins_ = emptyProtobufList();
      }
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString address_;
      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       * @return The address.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       * @param value The address to set.
       */
      private void setAddress(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        address_ = value;
      }
      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       */
      private void clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
      }

      public static final int COINS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> coins_;
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getCoinsList() {
        return coins_;
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder> 
          getCoinsOrBuilderList() {
        return coins_;
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      @java.lang.Override
      public int getCoinsCount() {
        return coins_.size();
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getCoins(int index) {
        return coins_.get(index);
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      public wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder getCoinsOrBuilder(
          int index) {
        return coins_.get(index);
      }
      private void ensureCoinsIsMutable() {
        com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> tmp = coins_;
        if (!tmp.isModifiable()) {
          coins_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void setCoins(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        value.getClass();
  ensureCoinsIsMutable();
        coins_.set(index, value);
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void addCoins(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        value.getClass();
  ensureCoinsIsMutable();
        coins_.add(value);
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        value.getClass();
  ensureCoinsIsMutable();
        coins_.add(index, value);
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void addAllCoins(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
        ensureCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, coins_);
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void clearCoins() {
        coins_ = emptyProtobufList();
      }
      /**
       * <pre>
       * input coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void removeCoins(int index) {
        ensureCoinsIsMutable();
        coins_.remove(index);
      }

      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Input parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Binance.SendOrder.Input prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Transaction input
       * </pre>
       *
       * Protobuf type {@code TW.Binance.Proto.SendOrder.Input}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Binance.SendOrder.Input, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SendOrder.Input)
          wallet.core.jni.proto.Binance.SendOrder.InputOrBuilder {
        // Construct using wallet.core.jni.proto.Binance.SendOrder.Input.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * source address
         * </pre>
         *
         * <code>bytes address = 1;</code>
         * @return The address.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAddress() {
          return instance.getAddress();
        }
        /**
         * <pre>
         * source address
         * </pre>
         *
         * <code>bytes address = 1;</code>
         * @param value The address to set.
         * @return This builder for chaining.
         */
        public Builder setAddress(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAddress(value);
          return this;
        }
        /**
         * <pre>
         * source address
         * </pre>
         *
         * <code>bytes address = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAddress() {
          copyOnWrite();
          instance.clearAddress();
          return this;
        }

        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        @java.lang.Override
        public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getCoinsList() {
          return java.util.Collections.unmodifiableList(
              instance.getCoinsList());
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        @java.lang.Override
        public int getCoinsCount() {
          return instance.getCoinsCount();
        }/**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        @java.lang.Override
        public wallet.core.jni.proto.Binance.SendOrder.Token getCoins(int index) {
          return instance.getCoins(index);
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
          copyOnWrite();
          instance.setCoins(index, value);
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.setCoins(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(wallet.core.jni.proto.Binance.SendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(value);
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(index, value);
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addAllCoins(
            java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
          copyOnWrite();
          instance.addAllCoins(values);
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder clearCoins() {
          copyOnWrite();
          instance.clearCoins();
          return this;
        }
        /**
         * <pre>
         * input coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder removeCoins(int index) {
          copyOnWrite();
          instance.removeCoins(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SendOrder.Input)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Binance.SendOrder.Input();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "address_",
                "coins_",
                wallet.core.jni.proto.Binance.SendOrder.Token.class,
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\n\u0002\u001b" +
                  "";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SendOrder.Input> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Binance.SendOrder.Input.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SendOrder.Input>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SendOrder.Input)
      private static final wallet.core.jni.proto.Binance.SendOrder.Input DEFAULT_INSTANCE;
      static {
        Input defaultInstance = new Input();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Input.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Binance.SendOrder.Input getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Input> PARSER;

      public static com.google.protobuf.Parser<Input> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface OutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SendOrder.Output)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       * @return The address.
       */
      com.google.protobuf.ByteString getAddress();

      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> 
          getCoinsList();
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      wallet.core.jni.proto.Binance.SendOrder.Token getCoins(int index);
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      int getCoinsCount();
    }
    /**
     * <pre>
     * Transaction output
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.SendOrder.Output}
     */
    public  static final class Output extends
        com.google.protobuf.GeneratedMessageLite<
            Output, Output.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SendOrder.Output)
        OutputOrBuilder {
      private Output() {
        address_ = com.google.protobuf.ByteString.EMPTY;
        coins_ = emptyProtobufList();
      }
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString address_;
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       * @return The address.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       * @param value The address to set.
       */
      private void setAddress(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        address_ = value;
      }
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>bytes address = 1;</code>
       */
      private void clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
      }

      public static final int COINS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> coins_;
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getCoinsList() {
        return coins_;
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder> 
          getCoinsOrBuilderList() {
        return coins_;
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      @java.lang.Override
      public int getCoinsCount() {
        return coins_.size();
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getCoins(int index) {
        return coins_.get(index);
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      public wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder getCoinsOrBuilder(
          int index) {
        return coins_.get(index);
      }
      private void ensureCoinsIsMutable() {
        com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> tmp = coins_;
        if (!tmp.isModifiable()) {
          coins_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
         }
      }

      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void setCoins(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        value.getClass();
  ensureCoinsIsMutable();
        coins_.set(index, value);
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void addCoins(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        value.getClass();
  ensureCoinsIsMutable();
        coins_.add(value);
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        value.getClass();
  ensureCoinsIsMutable();
        coins_.add(index, value);
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void addAllCoins(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
        ensureCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, coins_);
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void clearCoins() {
        coins_ = emptyProtobufList();
      }
      /**
       * <pre>
       * output coin amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
       */
      private void removeCoins(int index) {
        ensureCoinsIsMutable();
        coins_.remove(index);
      }

      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Binance.SendOrder.Output parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Binance.SendOrder.Output prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Transaction output
       * </pre>
       *
       * Protobuf type {@code TW.Binance.Proto.SendOrder.Output}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Binance.SendOrder.Output, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SendOrder.Output)
          wallet.core.jni.proto.Binance.SendOrder.OutputOrBuilder {
        // Construct using wallet.core.jni.proto.Binance.SendOrder.Output.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * destination address
         * </pre>
         *
         * <code>bytes address = 1;</code>
         * @return The address.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAddress() {
          return instance.getAddress();
        }
        /**
         * <pre>
         * destination address
         * </pre>
         *
         * <code>bytes address = 1;</code>
         * @param value The address to set.
         * @return This builder for chaining.
         */
        public Builder setAddress(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAddress(value);
          return this;
        }
        /**
         * <pre>
         * destination address
         * </pre>
         *
         * <code>bytes address = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAddress() {
          copyOnWrite();
          instance.clearAddress();
          return this;
        }

        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        @java.lang.Override
        public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getCoinsList() {
          return java.util.Collections.unmodifiableList(
              instance.getCoinsList());
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        @java.lang.Override
        public int getCoinsCount() {
          return instance.getCoinsCount();
        }/**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        @java.lang.Override
        public wallet.core.jni.proto.Binance.SendOrder.Token getCoins(int index) {
          return instance.getCoins(index);
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
          copyOnWrite();
          instance.setCoins(index, value);
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.setCoins(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(wallet.core.jni.proto.Binance.SendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(value);
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(index, value);
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(index,
              builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder addAllCoins(
            java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
          copyOnWrite();
          instance.addAllCoins(values);
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder clearCoins() {
          copyOnWrite();
          instance.clearCoins();
          return this;
        }
        /**
         * <pre>
         * output coin amounts
         * </pre>
         *
         * <code>repeated .TW.Binance.Proto.SendOrder.Token coins = 2;</code>
         */
        public Builder removeCoins(int index) {
          copyOnWrite();
          instance.removeCoins(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SendOrder.Output)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Binance.SendOrder.Output();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "address_",
                "coins_",
                wallet.core.jni.proto.Binance.SendOrder.Token.class,
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\n\u0002\u001b" +
                  "";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SendOrder.Output> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Binance.SendOrder.Output.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SendOrder.Output>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SendOrder.Output)
      private static final wallet.core.jni.proto.Binance.SendOrder.Output DEFAULT_INSTANCE;
      static {
        Output defaultInstance = new Output();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Output.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Binance.SendOrder.Output getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Output> PARSER;

      public static com.google.protobuf.Parser<Output> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int INPUTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Input> inputs_;
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Input> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.InputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    @java.lang.Override
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Input getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    public wallet.core.jni.proto.Binance.SendOrder.InputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }
    private void ensureInputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Input> tmp = inputs_;
      if (!tmp.isModifiable()) {
        inputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    private void setInputs(
        int index, wallet.core.jni.proto.Binance.SendOrder.Input value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.set(index, value);
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    private void addInputs(wallet.core.jni.proto.Binance.SendOrder.Input value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(value);
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    private void addInputs(
        int index, wallet.core.jni.proto.Binance.SendOrder.Input value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(index, value);
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    private void addAllInputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Input> values) {
      ensureInputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inputs_);
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    private void clearInputs() {
      inputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Send inputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
     */
    private void removeInputs(int index) {
      ensureInputsIsMutable();
      inputs_.remove(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Output> outputs_;
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Output> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.OutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Output getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    public wallet.core.jni.proto.Binance.SendOrder.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }
    private void ensureOutputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Output> tmp = outputs_;
      if (!tmp.isModifiable()) {
        outputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    private void setOutputs(
        int index, wallet.core.jni.proto.Binance.SendOrder.Output value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.set(index, value);
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    private void addOutputs(wallet.core.jni.proto.Binance.SendOrder.Output value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(value);
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    private void addOutputs(
        int index, wallet.core.jni.proto.Binance.SendOrder.Output value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(index, value);
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    private void addAllOutputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Output> values) {
      ensureOutputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outputs_);
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    private void clearOutputs() {
      outputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Send outputs
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
     */
    private void removeOutputs(int index) {
      ensureOutputsIsMutable();
      outputs_.remove(index);
    }

    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SendOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.SendOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for Send order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.SendOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.SendOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SendOrder)
        wallet.core.jni.proto.Binance.SendOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.SendOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Input> getInputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getInputsList());
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      @java.lang.Override
      public int getInputsCount() {
        return instance.getInputsCount();
      }/**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Input getInputs(int index) {
        return instance.getInputs(index);
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Input value) {
        copyOnWrite();
        instance.setInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Input.Builder builderForValue) {
        copyOnWrite();
        instance.setInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(wallet.core.jni.proto.Binance.SendOrder.Input value) {
        copyOnWrite();
        instance.addInputs(value);
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Input value) {
        copyOnWrite();
        instance.addInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(
          wallet.core.jni.proto.Binance.SendOrder.Input.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Input.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Input> values) {
        copyOnWrite();
        instance.addAllInputs(values);
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder clearInputs() {
        copyOnWrite();
        instance.clearInputs();
        return this;
      }
      /**
       * <pre>
       * Send inputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Input inputs = 1;</code>
       */
      public Builder removeInputs(int index) {
        copyOnWrite();
        instance.removeInputs(index);
        return this;
      }

      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Output> getOutputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOutputsList());
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      @java.lang.Override
      public int getOutputsCount() {
        return instance.getOutputsCount();
      }/**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Output getOutputs(int index) {
        return instance.getOutputs(index);
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Output value) {
        copyOnWrite();
        instance.setOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Output.Builder builderForValue) {
        copyOnWrite();
        instance.setOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(wallet.core.jni.proto.Binance.SendOrder.Output value) {
        copyOnWrite();
        instance.addOutputs(value);
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Output value) {
        copyOnWrite();
        instance.addOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(
          wallet.core.jni.proto.Binance.SendOrder.Output.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.Binance.SendOrder.Output.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Output> values) {
        copyOnWrite();
        instance.addAllOutputs(values);
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder clearOutputs() {
        copyOnWrite();
        instance.clearOutputs();
        return this;
      }
      /**
       * <pre>
       * Send outputs
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Output outputs = 2;</code>
       */
      public Builder removeOutputs(int index) {
        copyOnWrite();
        instance.removeOutputs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SendOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.SendOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "inputs_",
              wallet.core.jni.proto.Binance.SendOrder.Input.class,
              "outputs_",
              wallet.core.jni.proto.Binance.SendOrder.Output.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0000\u0001\u001b\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SendOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.SendOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SendOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SendOrder)
    private static final wallet.core.jni.proto.Binance.SendOrder DEFAULT_INSTANCE;
    static {
      SendOrder defaultInstance = new SendOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SendOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.SendOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SendOrder> PARSER;

    public static com.google.protobuf.Parser<SendOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenIssueOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TokenIssueOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * total supply
     * </pre>
     *
     * <code>int64 total_supply = 4;</code>
     * @return The totalSupply.
     */
    long getTotalSupply();

    /**
     * <pre>
     * mintable
     * </pre>
     *
     * <code>bool mintable = 5;</code>
     * @return The mintable.
     */
    boolean getMintable();
  }
  /**
   * <pre>
   * Message for TokenIssue order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TokenIssueOrder}
   */
  public  static final class TokenIssueOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TokenIssueOrder, TokenIssueOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TokenIssueOrder)
      TokenIssueOrderOrBuilder {
    private TokenIssueOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      name_ = "";
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.String name_;
    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The name to set.
     */
    private void setName(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      name_ = value;
    }
    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * token name
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      name_ = value.toStringUtf8();
      
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int TOTAL_SUPPLY_FIELD_NUMBER = 4;
    private long totalSupply_;
    /**
     * <pre>
     * total supply
     * </pre>
     *
     * <code>int64 total_supply = 4;</code>
     * @return The totalSupply.
     */
    @java.lang.Override
    public long getTotalSupply() {
      return totalSupply_;
    }
    /**
     * <pre>
     * total supply
     * </pre>
     *
     * <code>int64 total_supply = 4;</code>
     * @param value The totalSupply to set.
     */
    private void setTotalSupply(long value) {
      
      totalSupply_ = value;
    }
    /**
     * <pre>
     * total supply
     * </pre>
     *
     * <code>int64 total_supply = 4;</code>
     */
    private void clearTotalSupply() {
      
      totalSupply_ = 0L;
    }

    public static final int MINTABLE_FIELD_NUMBER = 5;
    private boolean mintable_;
    /**
     * <pre>
     * mintable
     * </pre>
     *
     * <code>bool mintable = 5;</code>
     * @return The mintable.
     */
    @java.lang.Override
    public boolean getMintable() {
      return mintable_;
    }
    /**
     * <pre>
     * mintable
     * </pre>
     *
     * <code>bool mintable = 5;</code>
     * @param value The mintable to set.
     */
    private void setMintable(boolean value) {
      
      mintable_ = value;
    }
    /**
     * <pre>
     * mintable
     * </pre>
     *
     * <code>bool mintable = 5;</code>
     */
    private void clearMintable() {
      
      mintable_ = false;
    }

    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenIssueOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TokenIssueOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TokenIssue order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TokenIssueOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TokenIssueOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TokenIssueOrder)
        wallet.core.jni.proto.Binance.TokenIssueOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TokenIssueOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token name
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * token name
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * token name
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * token name
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * token name
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * total supply
       * </pre>
       *
       * <code>int64 total_supply = 4;</code>
       * @return The totalSupply.
       */
      @java.lang.Override
      public long getTotalSupply() {
        return instance.getTotalSupply();
      }
      /**
       * <pre>
       * total supply
       * </pre>
       *
       * <code>int64 total_supply = 4;</code>
       * @param value The totalSupply to set.
       * @return This builder for chaining.
       */
      public Builder setTotalSupply(long value) {
        copyOnWrite();
        instance.setTotalSupply(value);
        return this;
      }
      /**
       * <pre>
       * total supply
       * </pre>
       *
       * <code>int64 total_supply = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalSupply() {
        copyOnWrite();
        instance.clearTotalSupply();
        return this;
      }

      /**
       * <pre>
       * mintable
       * </pre>
       *
       * <code>bool mintable = 5;</code>
       * @return The mintable.
       */
      @java.lang.Override
      public boolean getMintable() {
        return instance.getMintable();
      }
      /**
       * <pre>
       * mintable
       * </pre>
       *
       * <code>bool mintable = 5;</code>
       * @param value The mintable to set.
       * @return This builder for chaining.
       */
      public Builder setMintable(boolean value) {
        copyOnWrite();
        instance.setMintable(value);
        return this;
      }
      /**
       * <pre>
       * mintable
       * </pre>
       *
       * <code>bool mintable = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMintable() {
        copyOnWrite();
        instance.clearMintable();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TokenIssueOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TokenIssueOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "name_",
              "symbol_",
              "totalSupply_",
              "mintable_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "\u0003\u0208\u0004\u0002\u0005\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TokenIssueOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TokenIssueOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TokenIssueOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TokenIssueOrder)
    private static final wallet.core.jni.proto.Binance.TokenIssueOrder DEFAULT_INSTANCE;
    static {
      TokenIssueOrder defaultInstance = new TokenIssueOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenIssueOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TokenIssueOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenIssueOrder> PARSER;

    public static com.google.protobuf.Parser<TokenIssueOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenMintOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TokenMintOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * amount to mint
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();
  }
  /**
   * <pre>
   * Message for TokenMint order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TokenMintOrder}
   */
  public  static final class TokenMintOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TokenMintOrder, TokenMintOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TokenMintOrder)
      TokenMintOrderOrBuilder {
    private TokenMintOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount to mint
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * amount to mint
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * amount to mint
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenMintOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TokenMintOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TokenMint order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TokenMintOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TokenMintOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TokenMintOrder)
        wallet.core.jni.proto.Binance.TokenMintOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TokenMintOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * amount to mint
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * amount to mint
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * amount to mint
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TokenMintOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TokenMintOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "symbol_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "\u0003\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TokenMintOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TokenMintOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TokenMintOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TokenMintOrder)
    private static final wallet.core.jni.proto.Binance.TokenMintOrder DEFAULT_INSTANCE;
    static {
      TokenMintOrder defaultInstance = new TokenMintOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenMintOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TokenMintOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenMintOrder> PARSER;

    public static com.google.protobuf.Parser<TokenMintOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenBurnOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TokenBurnOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * amount to burn
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();
  }
  /**
   * <pre>
   * Message for TokenBurn order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TokenBurnOrder}
   */
  public  static final class TokenBurnOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TokenBurnOrder, TokenBurnOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TokenBurnOrder)
      TokenBurnOrderOrBuilder {
    private TokenBurnOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount to burn
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * amount to burn
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * amount to burn
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenBurnOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TokenBurnOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TokenBurn order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TokenBurnOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TokenBurnOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TokenBurnOrder)
        wallet.core.jni.proto.Binance.TokenBurnOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TokenBurnOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * amount to burn
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * amount to burn
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * amount to burn
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TokenBurnOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TokenBurnOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "symbol_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "\u0003\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TokenBurnOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TokenBurnOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TokenBurnOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TokenBurnOrder)
    private static final wallet.core.jni.proto.Binance.TokenBurnOrder DEFAULT_INSTANCE;
    static {
      TokenBurnOrder defaultInstance = new TokenBurnOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenBurnOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TokenBurnOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenBurnOrder> PARSER;

    public static com.google.protobuf.Parser<TokenBurnOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenFreezeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TokenFreezeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();
  }
  /**
   * <pre>
   * Message for TokenFreeze order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TokenFreezeOrder}
   */
  public  static final class TokenFreezeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TokenFreezeOrder, TokenFreezeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TokenFreezeOrder)
      TokenFreezeOrderOrBuilder {
    private TokenFreezeOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenFreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TokenFreezeOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TokenFreeze order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TokenFreezeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TokenFreezeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TokenFreezeOrder)
        wallet.core.jni.proto.Binance.TokenFreezeOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TokenFreezeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * amount of token to freeze
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * amount of token to freeze
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * amount of token to freeze
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TokenFreezeOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TokenFreezeOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "symbol_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "\u0003\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TokenFreezeOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TokenFreezeOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TokenFreezeOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TokenFreezeOrder)
    private static final wallet.core.jni.proto.Binance.TokenFreezeOrder DEFAULT_INSTANCE;
    static {
      TokenFreezeOrder defaultInstance = new TokenFreezeOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenFreezeOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TokenFreezeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenFreezeOrder> PARSER;

    public static com.google.protobuf.Parser<TokenFreezeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenUnfreezeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TokenUnfreezeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();
  }
  /**
   * <pre>
   * Message for TokenUnfreeze order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TokenUnfreezeOrder}
   */
  public  static final class TokenUnfreezeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TokenUnfreezeOrder, TokenUnfreezeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TokenUnfreezeOrder)
      TokenUnfreezeOrderOrBuilder {
    private TokenUnfreezeOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TokenUnfreezeOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TokenUnfreeze order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TokenUnfreezeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TokenUnfreezeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TokenUnfreezeOrder)
        wallet.core.jni.proto.Binance.TokenUnfreezeOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TokenUnfreezeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * amount of token to unfreeze
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * amount of token to unfreeze
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * amount of token to unfreeze
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TokenUnfreezeOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TokenUnfreezeOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "symbol_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "\u0003\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TokenUnfreezeOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TokenUnfreezeOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TokenUnfreezeOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TokenUnfreezeOrder)
    private static final wallet.core.jni.proto.Binance.TokenUnfreezeOrder DEFAULT_INSTANCE;
    static {
      TokenUnfreezeOrder defaultInstance = new TokenUnfreezeOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenUnfreezeOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TokenUnfreezeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenUnfreezeOrder> PARSER;

    public static com.google.protobuf.Parser<TokenUnfreezeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HTLTOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.HTLTOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     * @return The to.
     */
    com.google.protobuf.ByteString getTo();

    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     * @return The recipientOtherChain.
     */
    java.lang.String getRecipientOtherChain();
    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     * @return The bytes for recipientOtherChain.
     */
    com.google.protobuf.ByteString
        getRecipientOtherChainBytes();

    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     * @return The senderOtherChain.
     */
    java.lang.String getSenderOtherChain();
    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     * @return The bytes for senderOtherChain.
     */
    com.google.protobuf.ByteString
        getSenderOtherChainBytes();

    /**
     * <pre>
     * hash of a random number and timestamp, based on SHA256
     * </pre>
     *
     * <code>bytes random_number_hash = 5;</code>
     * @return The randomNumberHash.
     */
    com.google.protobuf.ByteString getRandomNumberHash();

    /**
     * <pre>
     * timestamp
     * </pre>
     *
     * <code>int64 timestamp = 6;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> 
        getAmountList();
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index);
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    int getAmountCount();

    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     * @return The expectedIncome.
     */
    java.lang.String getExpectedIncome();
    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     * @return The bytes for expectedIncome.
     */
    com.google.protobuf.ByteString
        getExpectedIncomeBytes();

    /**
     * <pre>
     * period expressed in block heights
     * </pre>
     *
     * <code>int64 height_span = 9;</code>
     * @return The heightSpan.
     */
    long getHeightSpan();

    /**
     * <pre>
     * set for cross-chain send
     * </pre>
     *
     * <code>bool cross_chain = 10;</code>
     * @return The crossChain.
     */
    boolean getCrossChain();
  }
  /**
   * <pre>
   * Message for HashTimeLock order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.HTLTOrder}
   */
  public  static final class HTLTOrder extends
      com.google.protobuf.GeneratedMessageLite<
          HTLTOrder, HTLTOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.HTLTOrder)
      HTLTOrderOrBuilder {
    private HTLTOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      to_ = com.google.protobuf.ByteString.EMPTY;
      recipientOtherChain_ = "";
      senderOtherChain_ = "";
      randomNumberHash_ = com.google.protobuf.ByteString.EMPTY;
      amount_ = emptyProtobufList();
      expectedIncome_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int TO_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString to_;
    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     * @return The to.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTo() {
      return to_;
    }
    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     * @param value The to to set.
     */
    private void setTo(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      to_ = value;
    }
    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     */
    private void clearTo() {
      
      to_ = getDefaultInstance().getTo();
    }

    public static final int RECIPIENT_OTHER_CHAIN_FIELD_NUMBER = 3;
    private java.lang.String recipientOtherChain_;
    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     * @return The recipientOtherChain.
     */
    @java.lang.Override
    public java.lang.String getRecipientOtherChain() {
      return recipientOtherChain_;
    }
    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     * @return The bytes for recipientOtherChain.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRecipientOtherChainBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(recipientOtherChain_);
    }
    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     * @param value The recipientOtherChain to set.
     */
    private void setRecipientOtherChain(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      recipientOtherChain_ = value;
    }
    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     */
    private void clearRecipientOtherChain() {
      
      recipientOtherChain_ = getDefaultInstance().getRecipientOtherChain();
    }
    /**
     * <pre>
     * source on other chain, optional
     * </pre>
     *
     * <code>string recipient_other_chain = 3;</code>
     * @param value The bytes for recipientOtherChain to set.
     */
    private void setRecipientOtherChainBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      recipientOtherChain_ = value.toStringUtf8();
      
    }

    public static final int SENDER_OTHER_CHAIN_FIELD_NUMBER = 4;
    private java.lang.String senderOtherChain_;
    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     * @return The senderOtherChain.
     */
    @java.lang.Override
    public java.lang.String getSenderOtherChain() {
      return senderOtherChain_;
    }
    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     * @return The bytes for senderOtherChain.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSenderOtherChainBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(senderOtherChain_);
    }
    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     * @param value The senderOtherChain to set.
     */
    private void setSenderOtherChain(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      senderOtherChain_ = value;
    }
    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     */
    private void clearSenderOtherChain() {
      
      senderOtherChain_ = getDefaultInstance().getSenderOtherChain();
    }
    /**
     * <pre>
     * recipient on other chain, optional
     * </pre>
     *
     * <code>string sender_other_chain = 4;</code>
     * @param value The bytes for senderOtherChain to set.
     */
    private void setSenderOtherChainBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      senderOtherChain_ = value.toStringUtf8();
      
    }

    public static final int RANDOM_NUMBER_HASH_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString randomNumberHash_;
    /**
     * <pre>
     * hash of a random number and timestamp, based on SHA256
     * </pre>
     *
     * <code>bytes random_number_hash = 5;</code>
     * @return The randomNumberHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRandomNumberHash() {
      return randomNumberHash_;
    }
    /**
     * <pre>
     * hash of a random number and timestamp, based on SHA256
     * </pre>
     *
     * <code>bytes random_number_hash = 5;</code>
     * @param value The randomNumberHash to set.
     */
    private void setRandomNumberHash(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      randomNumberHash_ = value;
    }
    /**
     * <pre>
     * hash of a random number and timestamp, based on SHA256
     * </pre>
     *
     * <code>bytes random_number_hash = 5;</code>
     */
    private void clearRandomNumberHash() {
      
      randomNumberHash_ = getDefaultInstance().getRandomNumberHash();
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private long timestamp_;
    /**
     * <pre>
     * timestamp
     * </pre>
     *
     * <code>int64 timestamp = 6;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     * timestamp
     * </pre>
     *
     * <code>int64 timestamp = 6;</code>
     * @param value The timestamp to set.
     */
    private void setTimestamp(long value) {
      
      timestamp_ = value;
    }
    /**
     * <pre>
     * timestamp
     * </pre>
     *
     * <code>int64 timestamp = 6;</code>
     */
    private void clearTimestamp() {
      
      timestamp_ = 0L;
    }

    public static final int AMOUNT_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> amount_;
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
      return amount_;
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder> 
        getAmountOrBuilderList() {
      return amount_;
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    @java.lang.Override
    public int getAmountCount() {
      return amount_.size();
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
      return amount_.get(index);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    public wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder getAmountOrBuilder(
        int index) {
      return amount_.get(index);
    }
    private void ensureAmountIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> tmp = amount_;
      if (!tmp.isModifiable()) {
        amount_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    private void setAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.set(index, value);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    private void addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(value);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    private void addAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(index, value);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    private void addAllAmount(
        java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
      ensureAmountIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, amount_);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    private void clearAmount() {
      amount_ = emptyProtobufList();
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
     */
    private void removeAmount(int index) {
      ensureAmountIsMutable();
      amount_.remove(index);
    }

    public static final int EXPECTED_INCOME_FIELD_NUMBER = 8;
    private java.lang.String expectedIncome_;
    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     * @return The expectedIncome.
     */
    @java.lang.Override
    public java.lang.String getExpectedIncome() {
      return expectedIncome_;
    }
    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     * @return The bytes for expectedIncome.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExpectedIncomeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(expectedIncome_);
    }
    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     * @param value The expectedIncome to set.
     */
    private void setExpectedIncome(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      expectedIncome_ = value;
    }
    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     */
    private void clearExpectedIncome() {
      
      expectedIncome_ = getDefaultInstance().getExpectedIncome();
    }
    /**
     * <pre>
     * expected gained token on the other chain
     * </pre>
     *
     * <code>string expected_income = 8;</code>
     * @param value The bytes for expectedIncome to set.
     */
    private void setExpectedIncomeBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      expectedIncome_ = value.toStringUtf8();
      
    }

    public static final int HEIGHT_SPAN_FIELD_NUMBER = 9;
    private long heightSpan_;
    /**
     * <pre>
     * period expressed in block heights
     * </pre>
     *
     * <code>int64 height_span = 9;</code>
     * @return The heightSpan.
     */
    @java.lang.Override
    public long getHeightSpan() {
      return heightSpan_;
    }
    /**
     * <pre>
     * period expressed in block heights
     * </pre>
     *
     * <code>int64 height_span = 9;</code>
     * @param value The heightSpan to set.
     */
    private void setHeightSpan(long value) {
      
      heightSpan_ = value;
    }
    /**
     * <pre>
     * period expressed in block heights
     * </pre>
     *
     * <code>int64 height_span = 9;</code>
     */
    private void clearHeightSpan() {
      
      heightSpan_ = 0L;
    }

    public static final int CROSS_CHAIN_FIELD_NUMBER = 10;
    private boolean crossChain_;
    /**
     * <pre>
     * set for cross-chain send
     * </pre>
     *
     * <code>bool cross_chain = 10;</code>
     * @return The crossChain.
     */
    @java.lang.Override
    public boolean getCrossChain() {
      return crossChain_;
    }
    /**
     * <pre>
     * set for cross-chain send
     * </pre>
     *
     * <code>bool cross_chain = 10;</code>
     * @param value The crossChain to set.
     */
    private void setCrossChain(boolean value) {
      
      crossChain_ = value;
    }
    /**
     * <pre>
     * set for cross-chain send
     * </pre>
     *
     * <code>bool cross_chain = 10;</code>
     */
    private void clearCrossChain() {
      
      crossChain_ = false;
    }

    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.HTLTOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.HTLTOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for HashTimeLock order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.HTLTOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.HTLTOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.HTLTOrder)
        wallet.core.jni.proto.Binance.HTLTOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.HTLTOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * recipient address
       * </pre>
       *
       * <code>bytes to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTo() {
        return instance.getTo();
      }
      /**
       * <pre>
       * recipient address
       * </pre>
       *
       * <code>bytes to = 2;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTo(value);
        return this;
      }
      /**
       * <pre>
       * recipient address
       * </pre>
       *
       * <code>bytes to = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        copyOnWrite();
        instance.clearTo();
        return this;
      }

      /**
       * <pre>
       * source on other chain, optional
       * </pre>
       *
       * <code>string recipient_other_chain = 3;</code>
       * @return The recipientOtherChain.
       */
      @java.lang.Override
      public java.lang.String getRecipientOtherChain() {
        return instance.getRecipientOtherChain();
      }
      /**
       * <pre>
       * source on other chain, optional
       * </pre>
       *
       * <code>string recipient_other_chain = 3;</code>
       * @return The bytes for recipientOtherChain.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRecipientOtherChainBytes() {
        return instance.getRecipientOtherChainBytes();
      }
      /**
       * <pre>
       * source on other chain, optional
       * </pre>
       *
       * <code>string recipient_other_chain = 3;</code>
       * @param value The recipientOtherChain to set.
       * @return This builder for chaining.
       */
      public Builder setRecipientOtherChain(
          java.lang.String value) {
        copyOnWrite();
        instance.setRecipientOtherChain(value);
        return this;
      }
      /**
       * <pre>
       * source on other chain, optional
       * </pre>
       *
       * <code>string recipient_other_chain = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecipientOtherChain() {
        copyOnWrite();
        instance.clearRecipientOtherChain();
        return this;
      }
      /**
       * <pre>
       * source on other chain, optional
       * </pre>
       *
       * <code>string recipient_other_chain = 3;</code>
       * @param value The bytes for recipientOtherChain to set.
       * @return This builder for chaining.
       */
      public Builder setRecipientOtherChainBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRecipientOtherChainBytes(value);
        return this;
      }

      /**
       * <pre>
       * recipient on other chain, optional
       * </pre>
       *
       * <code>string sender_other_chain = 4;</code>
       * @return The senderOtherChain.
       */
      @java.lang.Override
      public java.lang.String getSenderOtherChain() {
        return instance.getSenderOtherChain();
      }
      /**
       * <pre>
       * recipient on other chain, optional
       * </pre>
       *
       * <code>string sender_other_chain = 4;</code>
       * @return The bytes for senderOtherChain.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSenderOtherChainBytes() {
        return instance.getSenderOtherChainBytes();
      }
      /**
       * <pre>
       * recipient on other chain, optional
       * </pre>
       *
       * <code>string sender_other_chain = 4;</code>
       * @param value The senderOtherChain to set.
       * @return This builder for chaining.
       */
      public Builder setSenderOtherChain(
          java.lang.String value) {
        copyOnWrite();
        instance.setSenderOtherChain(value);
        return this;
      }
      /**
       * <pre>
       * recipient on other chain, optional
       * </pre>
       *
       * <code>string sender_other_chain = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSenderOtherChain() {
        copyOnWrite();
        instance.clearSenderOtherChain();
        return this;
      }
      /**
       * <pre>
       * recipient on other chain, optional
       * </pre>
       *
       * <code>string sender_other_chain = 4;</code>
       * @param value The bytes for senderOtherChain to set.
       * @return This builder for chaining.
       */
      public Builder setSenderOtherChainBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSenderOtherChainBytes(value);
        return this;
      }

      /**
       * <pre>
       * hash of a random number and timestamp, based on SHA256
       * </pre>
       *
       * <code>bytes random_number_hash = 5;</code>
       * @return The randomNumberHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRandomNumberHash() {
        return instance.getRandomNumberHash();
      }
      /**
       * <pre>
       * hash of a random number and timestamp, based on SHA256
       * </pre>
       *
       * <code>bytes random_number_hash = 5;</code>
       * @param value The randomNumberHash to set.
       * @return This builder for chaining.
       */
      public Builder setRandomNumberHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRandomNumberHash(value);
        return this;
      }
      /**
       * <pre>
       * hash of a random number and timestamp, based on SHA256
       * </pre>
       *
       * <code>bytes random_number_hash = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomNumberHash() {
        copyOnWrite();
        instance.clearRandomNumberHash();
        return this;
      }

      /**
       * <pre>
       * timestamp
       * </pre>
       *
       * <code>int64 timestamp = 6;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <pre>
       * timestamp
       * </pre>
       *
       * <code>int64 timestamp = 6;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <pre>
       * timestamp
       * </pre>
       *
       * <code>int64 timestamp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
        return java.util.Collections.unmodifiableList(
            instance.getAmountList());
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      @java.lang.Override
      public int getAmountCount() {
        return instance.getAmountCount();
      }/**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
        return instance.getAmount(index);
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(value);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder addAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder addAllAmount(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
        copyOnWrite();
        instance.addAllAmount(values);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 7;</code>
       */
      public Builder removeAmount(int index) {
        copyOnWrite();
        instance.removeAmount(index);
        return this;
      }

      /**
       * <pre>
       * expected gained token on the other chain
       * </pre>
       *
       * <code>string expected_income = 8;</code>
       * @return The expectedIncome.
       */
      @java.lang.Override
      public java.lang.String getExpectedIncome() {
        return instance.getExpectedIncome();
      }
      /**
       * <pre>
       * expected gained token on the other chain
       * </pre>
       *
       * <code>string expected_income = 8;</code>
       * @return The bytes for expectedIncome.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getExpectedIncomeBytes() {
        return instance.getExpectedIncomeBytes();
      }
      /**
       * <pre>
       * expected gained token on the other chain
       * </pre>
       *
       * <code>string expected_income = 8;</code>
       * @param value The expectedIncome to set.
       * @return This builder for chaining.
       */
      public Builder setExpectedIncome(
          java.lang.String value) {
        copyOnWrite();
        instance.setExpectedIncome(value);
        return this;
      }
      /**
       * <pre>
       * expected gained token on the other chain
       * </pre>
       *
       * <code>string expected_income = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpectedIncome() {
        copyOnWrite();
        instance.clearExpectedIncome();
        return this;
      }
      /**
       * <pre>
       * expected gained token on the other chain
       * </pre>
       *
       * <code>string expected_income = 8;</code>
       * @param value The bytes for expectedIncome to set.
       * @return This builder for chaining.
       */
      public Builder setExpectedIncomeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setExpectedIncomeBytes(value);
        return this;
      }

      /**
       * <pre>
       * period expressed in block heights
       * </pre>
       *
       * <code>int64 height_span = 9;</code>
       * @return The heightSpan.
       */
      @java.lang.Override
      public long getHeightSpan() {
        return instance.getHeightSpan();
      }
      /**
       * <pre>
       * period expressed in block heights
       * </pre>
       *
       * <code>int64 height_span = 9;</code>
       * @param value The heightSpan to set.
       * @return This builder for chaining.
       */
      public Builder setHeightSpan(long value) {
        copyOnWrite();
        instance.setHeightSpan(value);
        return this;
      }
      /**
       * <pre>
       * period expressed in block heights
       * </pre>
       *
       * <code>int64 height_span = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeightSpan() {
        copyOnWrite();
        instance.clearHeightSpan();
        return this;
      }

      /**
       * <pre>
       * set for cross-chain send
       * </pre>
       *
       * <code>bool cross_chain = 10;</code>
       * @return The crossChain.
       */
      @java.lang.Override
      public boolean getCrossChain() {
        return instance.getCrossChain();
      }
      /**
       * <pre>
       * set for cross-chain send
       * </pre>
       *
       * <code>bool cross_chain = 10;</code>
       * @param value The crossChain to set.
       * @return This builder for chaining.
       */
      public Builder setCrossChain(boolean value) {
        copyOnWrite();
        instance.setCrossChain(value);
        return this;
      }
      /**
       * <pre>
       * set for cross-chain send
       * </pre>
       *
       * <code>bool cross_chain = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrossChain() {
        copyOnWrite();
        instance.clearCrossChain();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.HTLTOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.HTLTOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "to_",
              "recipientOtherChain_",
              "senderOtherChain_",
              "randomNumberHash_",
              "timestamp_",
              "amount_",
              wallet.core.jni.proto.Binance.SendOrder.Token.class,
              "expectedIncome_",
              "heightSpan_",
              "crossChain_",
            };
            java.lang.String info =
                "\u0000\n\u0000\u0000\u0001\n\n\u0000\u0001\u0000\u0001\n\u0002\n\u0003\u0208\u0004" +
                "\u0208\u0005\n\u0006\u0002\u0007\u001b\b\u0208\t\u0002\n\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.HTLTOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.HTLTOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.HTLTOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.HTLTOrder)
    private static final wallet.core.jni.proto.Binance.HTLTOrder DEFAULT_INSTANCE;
    static {
      HTLTOrder defaultInstance = new HTLTOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HTLTOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.HTLTOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HTLTOrder> PARSER;

    public static com.google.protobuf.Parser<HTLTOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DepositHTLTOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.DepositHTLTOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> 
        getAmountList();
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index);
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    int getAmountCount();

    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 3;</code>
     * @return The swapId.
     */
    com.google.protobuf.ByteString getSwapId();
  }
  /**
   * <pre>
   * Message for Deposit HTLT order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.DepositHTLTOrder}
   */
  public  static final class DepositHTLTOrder extends
      com.google.protobuf.GeneratedMessageLite<
          DepositHTLTOrder, DepositHTLTOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.DepositHTLTOrder)
      DepositHTLTOrderOrBuilder {
    private DepositHTLTOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      amount_ = emptyProtobufList();
      swapId_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> amount_;
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
      return amount_;
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder> 
        getAmountOrBuilderList() {
      return amount_;
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    @java.lang.Override
    public int getAmountCount() {
      return amount_.size();
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
      return amount_.get(index);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    public wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder getAmountOrBuilder(
        int index) {
      return amount_.get(index);
    }
    private void ensureAmountIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> tmp = amount_;
      if (!tmp.isModifiable()) {
        amount_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    private void setAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.set(index, value);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    private void addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(value);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    private void addAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(index, value);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    private void addAllAmount(
        java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
      ensureAmountIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, amount_);
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    private void clearAmount() {
      amount_ = emptyProtobufList();
    }
    /**
     * <pre>
     * amounts
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
     */
    private void removeAmount(int index) {
      ensureAmountIsMutable();
      amount_.remove(index);
    }

    public static final int SWAP_ID_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString swapId_;
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 3;</code>
     * @return The swapId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSwapId() {
      return swapId_;
    }
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 3;</code>
     * @param value The swapId to set.
     */
    private void setSwapId(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      swapId_ = value;
    }
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 3;</code>
     */
    private void clearSwapId() {
      
      swapId_ = getDefaultInstance().getSwapId();
    }

    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.DepositHTLTOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.DepositHTLTOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for Deposit HTLT order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.DepositHTLTOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.DepositHTLTOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.DepositHTLTOrder)
        wallet.core.jni.proto.Binance.DepositHTLTOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.DepositHTLTOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
        return java.util.Collections.unmodifiableList(
            instance.getAmountList());
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      @java.lang.Override
      public int getAmountCount() {
        return instance.getAmountCount();
      }/**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
        return instance.getAmount(index);
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(value);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder addAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder addAllAmount(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
        copyOnWrite();
        instance.addAllAmount(values);
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * amounts
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 2;</code>
       */
      public Builder removeAmount(int index) {
        copyOnWrite();
        instance.removeAmount(index);
        return this;
      }

      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 3;</code>
       * @return The swapId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSwapId() {
        return instance.getSwapId();
      }
      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 3;</code>
       * @param value The swapId to set.
       * @return This builder for chaining.
       */
      public Builder setSwapId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSwapId(value);
        return this;
      }
      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSwapId() {
        copyOnWrite();
        instance.clearSwapId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.DepositHTLTOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.DepositHTLTOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "amount_",
              wallet.core.jni.proto.Binance.SendOrder.Token.class,
              "swapId_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\n\u0002\u001b" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.DepositHTLTOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.DepositHTLTOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.DepositHTLTOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.DepositHTLTOrder)
    private static final wallet.core.jni.proto.Binance.DepositHTLTOrder DEFAULT_INSTANCE;
    static {
      DepositHTLTOrder defaultInstance = new DepositHTLTOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DepositHTLTOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.DepositHTLTOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DepositHTLTOrder> PARSER;

    public static com.google.protobuf.Parser<DepositHTLTOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClaimHTLOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.ClaimHTLOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     * @return The swapId.
     */
    com.google.protobuf.ByteString getSwapId();

    /**
     * <pre>
     * random number input
     * </pre>
     *
     * <code>bytes random_number = 3;</code>
     * @return The randomNumber.
     */
    com.google.protobuf.ByteString getRandomNumber();
  }
  /**
   * <pre>
   * Message for Claim HTLT order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.ClaimHTLOrder}
   */
  public  static final class ClaimHTLOrder extends
      com.google.protobuf.GeneratedMessageLite<
          ClaimHTLOrder, ClaimHTLOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.ClaimHTLOrder)
      ClaimHTLOrderOrBuilder {
    private ClaimHTLOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      swapId_ = com.google.protobuf.ByteString.EMPTY;
      randomNumber_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SWAP_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString swapId_;
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     * @return The swapId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSwapId() {
      return swapId_;
    }
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     * @param value The swapId to set.
     */
    private void setSwapId(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      swapId_ = value;
    }
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     */
    private void clearSwapId() {
      
      swapId_ = getDefaultInstance().getSwapId();
    }

    public static final int RANDOM_NUMBER_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString randomNumber_;
    /**
     * <pre>
     * random number input
     * </pre>
     *
     * <code>bytes random_number = 3;</code>
     * @return The randomNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRandomNumber() {
      return randomNumber_;
    }
    /**
     * <pre>
     * random number input
     * </pre>
     *
     * <code>bytes random_number = 3;</code>
     * @param value The randomNumber to set.
     */
    private void setRandomNumber(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      randomNumber_ = value;
    }
    /**
     * <pre>
     * random number input
     * </pre>
     *
     * <code>bytes random_number = 3;</code>
     */
    private void clearRandomNumber() {
      
      randomNumber_ = getDefaultInstance().getRandomNumber();
    }

    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.ClaimHTLOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.ClaimHTLOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for Claim HTLT order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.ClaimHTLOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.ClaimHTLOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.ClaimHTLOrder)
        wallet.core.jni.proto.Binance.ClaimHTLOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.ClaimHTLOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 2;</code>
       * @return The swapId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSwapId() {
        return instance.getSwapId();
      }
      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 2;</code>
       * @param value The swapId to set.
       * @return This builder for chaining.
       */
      public Builder setSwapId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSwapId(value);
        return this;
      }
      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSwapId() {
        copyOnWrite();
        instance.clearSwapId();
        return this;
      }

      /**
       * <pre>
       * random number input
       * </pre>
       *
       * <code>bytes random_number = 3;</code>
       * @return The randomNumber.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRandomNumber() {
        return instance.getRandomNumber();
      }
      /**
       * <pre>
       * random number input
       * </pre>
       *
       * <code>bytes random_number = 3;</code>
       * @param value The randomNumber to set.
       * @return This builder for chaining.
       */
      public Builder setRandomNumber(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRandomNumber(value);
        return this;
      }
      /**
       * <pre>
       * random number input
       * </pre>
       *
       * <code>bytes random_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomNumber() {
        copyOnWrite();
        instance.clearRandomNumber();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.ClaimHTLOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.ClaimHTLOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "swapId_",
              "randomNumber_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.ClaimHTLOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.ClaimHTLOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.ClaimHTLOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.ClaimHTLOrder)
    private static final wallet.core.jni.proto.Binance.ClaimHTLOrder DEFAULT_INSTANCE;
    static {
      ClaimHTLOrder defaultInstance = new ClaimHTLOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ClaimHTLOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.ClaimHTLOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClaimHTLOrder> PARSER;

    public static com.google.protobuf.Parser<ClaimHTLOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RefundHTLTOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.RefundHTLTOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     * @return The swapId.
     */
    com.google.protobuf.ByteString getSwapId();
  }
  /**
   * <pre>
   * Message for Refund HTLT order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.RefundHTLTOrder}
   */
  public  static final class RefundHTLTOrder extends
      com.google.protobuf.GeneratedMessageLite<
          RefundHTLTOrder, RefundHTLTOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.RefundHTLTOrder)
      RefundHTLTOrderOrBuilder {
    private RefundHTLTOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      swapId_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * signer address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SWAP_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString swapId_;
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     * @return The swapId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSwapId() {
      return swapId_;
    }
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     * @param value The swapId to set.
     */
    private void setSwapId(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      swapId_ = value;
    }
    /**
     * <pre>
     * swap ID
     * </pre>
     *
     * <code>bytes swap_id = 2;</code>
     */
    private void clearSwapId() {
      
      swapId_ = getDefaultInstance().getSwapId();
    }

    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.RefundHTLTOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.RefundHTLTOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for Refund HTLT order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.RefundHTLTOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.RefundHTLTOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.RefundHTLTOrder)
        wallet.core.jni.proto.Binance.RefundHTLTOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.RefundHTLTOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * signer address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 2;</code>
       * @return The swapId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSwapId() {
        return instance.getSwapId();
      }
      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 2;</code>
       * @param value The swapId to set.
       * @return This builder for chaining.
       */
      public Builder setSwapId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSwapId(value);
        return this;
      }
      /**
       * <pre>
       * swap ID
       * </pre>
       *
       * <code>bytes swap_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSwapId() {
        copyOnWrite();
        instance.clearSwapId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.RefundHTLTOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.RefundHTLTOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "swapId_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.RefundHTLTOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.RefundHTLTOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.RefundHTLTOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.RefundHTLTOrder)
    private static final wallet.core.jni.proto.Binance.RefundHTLTOrder DEFAULT_INSTANCE;
    static {
      RefundHTLTOrder defaultInstance = new RefundHTLTOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RefundHTLTOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.RefundHTLTOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RefundHTLTOrder> PARSER;

    public static com.google.protobuf.Parser<RefundHTLTOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransferOutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TransferOut)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * source address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     * @return The to.
     */
    com.google.protobuf.ByteString getTo();

    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     * @return Whether the amount field is set.
     */
    boolean hasAmount();
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     * @return The amount.
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount();

    /**
     * <pre>
     * expiration time
     * </pre>
     *
     * <code>int64 expire_time = 4;</code>
     * @return The expireTime.
     */
    long getExpireTime();
  }
  /**
   * <pre>
   * Transfer
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TransferOut}
   */
  public  static final class TransferOut extends
      com.google.protobuf.GeneratedMessageLite<
          TransferOut, TransferOut.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TransferOut)
      TransferOutOrBuilder {
    private TransferOut() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      to_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * source address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * source address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     * @param value The from to set.
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      from_ = value;
    }
    /**
     * <pre>
     * source address
     * </pre>
     *
     * <code>bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int TO_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString to_;
    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     * @return The to.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTo() {
      return to_;
    }
    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     * @param value The to to set.
     */
    private void setTo(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      to_ = value;
    }
    /**
     * <pre>
     * recipient address
     * </pre>
     *
     * <code>bytes to = 2;</code>
     */
    private void clearTo() {
      
      to_ = getDefaultInstance().getTo();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private wallet.core.jni.proto.Binance.SendOrder.Token amount_;
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public boolean hasAmount() {
      return amount_ != null;
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount() {
      return amount_ == null ? wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance() : amount_;
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void setAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  amount_ = value;
      
      }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  if (amount_ != null &&
          amount_ != wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance()) {
        amount_ =
          wallet.core.jni.proto.Binance.SendOrder.Token.newBuilder(amount_).mergeFrom(value).buildPartial();
      } else {
        amount_ = value;
      }
      
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void clearAmount() {  amount_ = null;
      
    }

    public static final int EXPIRE_TIME_FIELD_NUMBER = 4;
    private long expireTime_;
    /**
     * <pre>
     * expiration time
     * </pre>
     *
     * <code>int64 expire_time = 4;</code>
     * @return The expireTime.
     */
    @java.lang.Override
    public long getExpireTime() {
      return expireTime_;
    }
    /**
     * <pre>
     * expiration time
     * </pre>
     *
     * <code>int64 expire_time = 4;</code>
     * @param value The expireTime to set.
     */
    private void setExpireTime(long value) {
      
      expireTime_ = value;
    }
    /**
     * <pre>
     * expiration time
     * </pre>
     *
     * <code>int64 expire_time = 4;</code>
     */
    private void clearExpireTime() {
      
      expireTime_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TransferOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TransferOut prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Transfer
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TransferOut}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TransferOut, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TransferOut)
        wallet.core.jni.proto.Binance.TransferOutOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TransferOut.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * source address
       * </pre>
       *
       * <code>bytes from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * recipient address
       * </pre>
       *
       * <code>bytes to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTo() {
        return instance.getTo();
      }
      /**
       * <pre>
       * recipient address
       * </pre>
       *
       * <code>bytes to = 2;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTo(value);
        return this;
      }
      /**
       * <pre>
       * recipient address
       * </pre>
       *
       * <code>bytes to = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        copyOnWrite();
        instance.clearTo();
        return this;
      }

      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public boolean hasAmount() {
        return instance.hasAmount();
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder setAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
        }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder setAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder mergeAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.mergeAmount(value);
        return this;
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder clearAmount() {  copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * expiration time
       * </pre>
       *
       * <code>int64 expire_time = 4;</code>
       * @return The expireTime.
       */
      @java.lang.Override
      public long getExpireTime() {
        return instance.getExpireTime();
      }
      /**
       * <pre>
       * expiration time
       * </pre>
       *
       * <code>int64 expire_time = 4;</code>
       * @param value The expireTime to set.
       * @return This builder for chaining.
       */
      public Builder setExpireTime(long value) {
        copyOnWrite();
        instance.setExpireTime(value);
        return this;
      }
      /**
       * <pre>
       * expiration time
       * </pre>
       *
       * <code>int64 expire_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpireTime() {
        copyOnWrite();
        instance.clearExpireTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TransferOut)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TransferOut();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "from_",
              "to_",
              "amount_",
              "expireTime_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\t\u0004\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TransferOut> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TransferOut.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TransferOut>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TransferOut)
    private static final wallet.core.jni.proto.Binance.TransferOut DEFAULT_INSTANCE;
    static {
      TransferOut defaultInstance = new TransferOut();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransferOut.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TransferOut getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransferOut> PARSER;

    public static com.google.protobuf.Parser<TransferOut> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SideChainDelegateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SideChainDelegate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes delegator_addr = 1;</code>
     * @return The delegatorAddr.
     */
    com.google.protobuf.ByteString getDelegatorAddr();

    /**
     * <code>bytes validator_addr = 2;</code>
     * @return The validatorAddr.
     */
    com.google.protobuf.ByteString getValidatorAddr();

    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     * @return Whether the delegation field is set.
     */
    boolean hasDelegation();
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     * @return The delegation.
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getDelegation();

    /**
     * <code>string chain_id = 4;</code>
     * @return The chainId.
     */
    java.lang.String getChainId();
    /**
     * <code>string chain_id = 4;</code>
     * @return The bytes for chainId.
     */
    com.google.protobuf.ByteString
        getChainIdBytes();
  }
  /**
   * Protobuf type {@code TW.Binance.Proto.SideChainDelegate}
   */
  public  static final class SideChainDelegate extends
      com.google.protobuf.GeneratedMessageLite<
          SideChainDelegate, SideChainDelegate.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SideChainDelegate)
      SideChainDelegateOrBuilder {
    private SideChainDelegate() {
      delegatorAddr_ = com.google.protobuf.ByteString.EMPTY;
      validatorAddr_ = com.google.protobuf.ByteString.EMPTY;
      chainId_ = "";
    }
    public static final int DELEGATOR_ADDR_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString delegatorAddr_;
    /**
     * <code>bytes delegator_addr = 1;</code>
     * @return The delegatorAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDelegatorAddr() {
      return delegatorAddr_;
    }
    /**
     * <code>bytes delegator_addr = 1;</code>
     * @param value The delegatorAddr to set.
     */
    private void setDelegatorAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      delegatorAddr_ = value;
    }
    /**
     * <code>bytes delegator_addr = 1;</code>
     */
    private void clearDelegatorAddr() {
      
      delegatorAddr_ = getDefaultInstance().getDelegatorAddr();
    }

    public static final int VALIDATOR_ADDR_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString validatorAddr_;
    /**
     * <code>bytes validator_addr = 2;</code>
     * @return The validatorAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValidatorAddr() {
      return validatorAddr_;
    }
    /**
     * <code>bytes validator_addr = 2;</code>
     * @param value The validatorAddr to set.
     */
    private void setValidatorAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      validatorAddr_ = value;
    }
    /**
     * <code>bytes validator_addr = 2;</code>
     */
    private void clearValidatorAddr() {
      
      validatorAddr_ = getDefaultInstance().getValidatorAddr();
    }

    public static final int DELEGATION_FIELD_NUMBER = 3;
    private wallet.core.jni.proto.Binance.SendOrder.Token delegation_;
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     */
    @java.lang.Override
    public boolean hasDelegation() {
      return delegation_ != null;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getDelegation() {
      return delegation_ == null ? wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance() : delegation_;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     */
    private void setDelegation(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  delegation_ = value;
      
      }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDelegation(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  if (delegation_ != null &&
          delegation_ != wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance()) {
        delegation_ =
          wallet.core.jni.proto.Binance.SendOrder.Token.newBuilder(delegation_).mergeFrom(value).buildPartial();
      } else {
        delegation_ = value;
      }
      
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
     */
    private void clearDelegation() {  delegation_ = null;
      
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 4;
    private java.lang.String chainId_;
    /**
     * <code>string chain_id = 4;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public java.lang.String getChainId() {
      return chainId_;
    }
    /**
     * <code>string chain_id = 4;</code>
     * @return The bytes for chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chainId_);
    }
    /**
     * <code>string chain_id = 4;</code>
     * @param value The chainId to set.
     */
    private void setChainId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      chainId_ = value;
    }
    /**
     * <code>string chain_id = 4;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }
    /**
     * <code>string chain_id = 4;</code>
     * @param value The bytes for chainId to set.
     */
    private void setChainIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      chainId_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainDelegate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.SideChainDelegate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.Binance.Proto.SideChainDelegate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.SideChainDelegate, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SideChainDelegate)
        wallet.core.jni.proto.Binance.SideChainDelegateOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.SideChainDelegate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes delegator_addr = 1;</code>
       * @return The delegatorAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDelegatorAddr() {
        return instance.getDelegatorAddr();
      }
      /**
       * <code>bytes delegator_addr = 1;</code>
       * @param value The delegatorAddr to set.
       * @return This builder for chaining.
       */
      public Builder setDelegatorAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDelegatorAddr(value);
        return this;
      }
      /**
       * <code>bytes delegator_addr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelegatorAddr() {
        copyOnWrite();
        instance.clearDelegatorAddr();
        return this;
      }

      /**
       * <code>bytes validator_addr = 2;</code>
       * @return The validatorAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValidatorAddr() {
        return instance.getValidatorAddr();
      }
      /**
       * <code>bytes validator_addr = 2;</code>
       * @param value The validatorAddr to set.
       * @return This builder for chaining.
       */
      public Builder setValidatorAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValidatorAddr(value);
        return this;
      }
      /**
       * <code>bytes validator_addr = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValidatorAddr() {
        copyOnWrite();
        instance.clearValidatorAddr();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
       */
      @java.lang.Override
      public boolean hasDelegation() {
        return instance.hasDelegation();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getDelegation() {
        return instance.getDelegation();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
       */
      public Builder setDelegation(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setDelegation(value);
        return this;
        }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
       */
      public Builder setDelegation(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setDelegation(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
       */
      public Builder mergeDelegation(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.mergeDelegation(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token delegation = 3;</code>
       */
      public Builder clearDelegation() {  copyOnWrite();
        instance.clearDelegation();
        return this;
      }

      /**
       * <code>string chain_id = 4;</code>
       * @return The chainId.
       */
      @java.lang.Override
      public java.lang.String getChainId() {
        return instance.getChainId();
      }
      /**
       * <code>string chain_id = 4;</code>
       * @return The bytes for chainId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        return instance.getChainIdBytes();
      }
      /**
       * <code>string chain_id = 4;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(
          java.lang.String value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <code>string chain_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }
      /**
       * <code>string chain_id = 4;</code>
       * @param value The bytes for chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SideChainDelegate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.SideChainDelegate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "delegatorAddr_",
              "validatorAddr_",
              "delegation_",
              "chainId_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\t\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SideChainDelegate> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.SideChainDelegate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SideChainDelegate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SideChainDelegate)
    private static final wallet.core.jni.proto.Binance.SideChainDelegate DEFAULT_INSTANCE;
    static {
      SideChainDelegate defaultInstance = new SideChainDelegate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SideChainDelegate.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.SideChainDelegate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SideChainDelegate> PARSER;

    public static com.google.protobuf.Parser<SideChainDelegate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SideChainRedelegateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SideChainRedelegate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes delegator_addr = 1;</code>
     * @return The delegatorAddr.
     */
    com.google.protobuf.ByteString getDelegatorAddr();

    /**
     * <code>bytes validator_src_addr = 2;</code>
     * @return The validatorSrcAddr.
     */
    com.google.protobuf.ByteString getValidatorSrcAddr();

    /**
     * <code>bytes validator_dst_addr = 3;</code>
     * @return The validatorDstAddr.
     */
    com.google.protobuf.ByteString getValidatorDstAddr();

    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     * @return Whether the amount field is set.
     */
    boolean hasAmount();
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     * @return The amount.
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount();

    /**
     * <code>string chain_id = 5;</code>
     * @return The chainId.
     */
    java.lang.String getChainId();
    /**
     * <code>string chain_id = 5;</code>
     * @return The bytes for chainId.
     */
    com.google.protobuf.ByteString
        getChainIdBytes();
  }
  /**
   * Protobuf type {@code TW.Binance.Proto.SideChainRedelegate}
   */
  public  static final class SideChainRedelegate extends
      com.google.protobuf.GeneratedMessageLite<
          SideChainRedelegate, SideChainRedelegate.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SideChainRedelegate)
      SideChainRedelegateOrBuilder {
    private SideChainRedelegate() {
      delegatorAddr_ = com.google.protobuf.ByteString.EMPTY;
      validatorSrcAddr_ = com.google.protobuf.ByteString.EMPTY;
      validatorDstAddr_ = com.google.protobuf.ByteString.EMPTY;
      chainId_ = "";
    }
    public static final int DELEGATOR_ADDR_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString delegatorAddr_;
    /**
     * <code>bytes delegator_addr = 1;</code>
     * @return The delegatorAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDelegatorAddr() {
      return delegatorAddr_;
    }
    /**
     * <code>bytes delegator_addr = 1;</code>
     * @param value The delegatorAddr to set.
     */
    private void setDelegatorAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      delegatorAddr_ = value;
    }
    /**
     * <code>bytes delegator_addr = 1;</code>
     */
    private void clearDelegatorAddr() {
      
      delegatorAddr_ = getDefaultInstance().getDelegatorAddr();
    }

    public static final int VALIDATOR_SRC_ADDR_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString validatorSrcAddr_;
    /**
     * <code>bytes validator_src_addr = 2;</code>
     * @return The validatorSrcAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValidatorSrcAddr() {
      return validatorSrcAddr_;
    }
    /**
     * <code>bytes validator_src_addr = 2;</code>
     * @param value The validatorSrcAddr to set.
     */
    private void setValidatorSrcAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      validatorSrcAddr_ = value;
    }
    /**
     * <code>bytes validator_src_addr = 2;</code>
     */
    private void clearValidatorSrcAddr() {
      
      validatorSrcAddr_ = getDefaultInstance().getValidatorSrcAddr();
    }

    public static final int VALIDATOR_DST_ADDR_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString validatorDstAddr_;
    /**
     * <code>bytes validator_dst_addr = 3;</code>
     * @return The validatorDstAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValidatorDstAddr() {
      return validatorDstAddr_;
    }
    /**
     * <code>bytes validator_dst_addr = 3;</code>
     * @param value The validatorDstAddr to set.
     */
    private void setValidatorDstAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      validatorDstAddr_ = value;
    }
    /**
     * <code>bytes validator_dst_addr = 3;</code>
     */
    private void clearValidatorDstAddr() {
      
      validatorDstAddr_ = getDefaultInstance().getValidatorDstAddr();
    }

    public static final int AMOUNT_FIELD_NUMBER = 4;
    private wallet.core.jni.proto.Binance.SendOrder.Token amount_;
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    @java.lang.Override
    public boolean hasAmount() {
      return amount_ != null;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount() {
      return amount_ == null ? wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance() : amount_;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void setAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  amount_ = value;
      
      }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  if (amount_ != null &&
          amount_ != wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance()) {
        amount_ =
          wallet.core.jni.proto.Binance.SendOrder.Token.newBuilder(amount_).mergeFrom(value).buildPartial();
      } else {
        amount_ = value;
      }
      
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void clearAmount() {  amount_ = null;
      
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 5;
    private java.lang.String chainId_;
    /**
     * <code>string chain_id = 5;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public java.lang.String getChainId() {
      return chainId_;
    }
    /**
     * <code>string chain_id = 5;</code>
     * @return The bytes for chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chainId_);
    }
    /**
     * <code>string chain_id = 5;</code>
     * @param value The chainId to set.
     */
    private void setChainId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      chainId_ = value;
    }
    /**
     * <code>string chain_id = 5;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }
    /**
     * <code>string chain_id = 5;</code>
     * @param value The bytes for chainId to set.
     */
    private void setChainIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      chainId_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainRedelegate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.SideChainRedelegate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.Binance.Proto.SideChainRedelegate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.SideChainRedelegate, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SideChainRedelegate)
        wallet.core.jni.proto.Binance.SideChainRedelegateOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.SideChainRedelegate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes delegator_addr = 1;</code>
       * @return The delegatorAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDelegatorAddr() {
        return instance.getDelegatorAddr();
      }
      /**
       * <code>bytes delegator_addr = 1;</code>
       * @param value The delegatorAddr to set.
       * @return This builder for chaining.
       */
      public Builder setDelegatorAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDelegatorAddr(value);
        return this;
      }
      /**
       * <code>bytes delegator_addr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelegatorAddr() {
        copyOnWrite();
        instance.clearDelegatorAddr();
        return this;
      }

      /**
       * <code>bytes validator_src_addr = 2;</code>
       * @return The validatorSrcAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValidatorSrcAddr() {
        return instance.getValidatorSrcAddr();
      }
      /**
       * <code>bytes validator_src_addr = 2;</code>
       * @param value The validatorSrcAddr to set.
       * @return This builder for chaining.
       */
      public Builder setValidatorSrcAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValidatorSrcAddr(value);
        return this;
      }
      /**
       * <code>bytes validator_src_addr = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValidatorSrcAddr() {
        copyOnWrite();
        instance.clearValidatorSrcAddr();
        return this;
      }

      /**
       * <code>bytes validator_dst_addr = 3;</code>
       * @return The validatorDstAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValidatorDstAddr() {
        return instance.getValidatorDstAddr();
      }
      /**
       * <code>bytes validator_dst_addr = 3;</code>
       * @param value The validatorDstAddr to set.
       * @return This builder for chaining.
       */
      public Builder setValidatorDstAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValidatorDstAddr(value);
        return this;
      }
      /**
       * <code>bytes validator_dst_addr = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValidatorDstAddr() {
        copyOnWrite();
        instance.clearValidatorDstAddr();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      @java.lang.Override
      public boolean hasAmount() {
        return instance.hasAmount();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder setAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
        }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder setAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder mergeAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.mergeAmount(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder clearAmount() {  copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <code>string chain_id = 5;</code>
       * @return The chainId.
       */
      @java.lang.Override
      public java.lang.String getChainId() {
        return instance.getChainId();
      }
      /**
       * <code>string chain_id = 5;</code>
       * @return The bytes for chainId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        return instance.getChainIdBytes();
      }
      /**
       * <code>string chain_id = 5;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(
          java.lang.String value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <code>string chain_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }
      /**
       * <code>string chain_id = 5;</code>
       * @param value The bytes for chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SideChainRedelegate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.SideChainRedelegate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "delegatorAddr_",
              "validatorSrcAddr_",
              "validatorDstAddr_",
              "amount_",
              "chainId_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\n\u0004\t\u0005\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SideChainRedelegate> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.SideChainRedelegate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SideChainRedelegate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SideChainRedelegate)
    private static final wallet.core.jni.proto.Binance.SideChainRedelegate DEFAULT_INSTANCE;
    static {
      SideChainRedelegate defaultInstance = new SideChainRedelegate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SideChainRedelegate.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.SideChainRedelegate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SideChainRedelegate> PARSER;

    public static com.google.protobuf.Parser<SideChainRedelegate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SideChainUndelegateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SideChainUndelegate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes delegator_addr = 1;</code>
     * @return The delegatorAddr.
     */
    com.google.protobuf.ByteString getDelegatorAddr();

    /**
     * <code>bytes validator_addr = 2;</code>
     * @return The validatorAddr.
     */
    com.google.protobuf.ByteString getValidatorAddr();

    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     * @return Whether the amount field is set.
     */
    boolean hasAmount();
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     * @return The amount.
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount();

    /**
     * <code>string chain_id = 4;</code>
     * @return The chainId.
     */
    java.lang.String getChainId();
    /**
     * <code>string chain_id = 4;</code>
     * @return The bytes for chainId.
     */
    com.google.protobuf.ByteString
        getChainIdBytes();
  }
  /**
   * Protobuf type {@code TW.Binance.Proto.SideChainUndelegate}
   */
  public  static final class SideChainUndelegate extends
      com.google.protobuf.GeneratedMessageLite<
          SideChainUndelegate, SideChainUndelegate.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SideChainUndelegate)
      SideChainUndelegateOrBuilder {
    private SideChainUndelegate() {
      delegatorAddr_ = com.google.protobuf.ByteString.EMPTY;
      validatorAddr_ = com.google.protobuf.ByteString.EMPTY;
      chainId_ = "";
    }
    public static final int DELEGATOR_ADDR_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString delegatorAddr_;
    /**
     * <code>bytes delegator_addr = 1;</code>
     * @return The delegatorAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDelegatorAddr() {
      return delegatorAddr_;
    }
    /**
     * <code>bytes delegator_addr = 1;</code>
     * @param value The delegatorAddr to set.
     */
    private void setDelegatorAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      delegatorAddr_ = value;
    }
    /**
     * <code>bytes delegator_addr = 1;</code>
     */
    private void clearDelegatorAddr() {
      
      delegatorAddr_ = getDefaultInstance().getDelegatorAddr();
    }

    public static final int VALIDATOR_ADDR_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString validatorAddr_;
    /**
     * <code>bytes validator_addr = 2;</code>
     * @return The validatorAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValidatorAddr() {
      return validatorAddr_;
    }
    /**
     * <code>bytes validator_addr = 2;</code>
     * @param value The validatorAddr to set.
     */
    private void setValidatorAddr(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      validatorAddr_ = value;
    }
    /**
     * <code>bytes validator_addr = 2;</code>
     */
    private void clearValidatorAddr() {
      
      validatorAddr_ = getDefaultInstance().getValidatorAddr();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private wallet.core.jni.proto.Binance.SendOrder.Token amount_;
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public boolean hasAmount() {
      return amount_ != null;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount() {
      return amount_ == null ? wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance() : amount_;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void setAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  amount_ = value;
      
      }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  if (amount_ != null &&
          amount_ != wallet.core.jni.proto.Binance.SendOrder.Token.getDefaultInstance()) {
        amount_ =
          wallet.core.jni.proto.Binance.SendOrder.Token.newBuilder(amount_).mergeFrom(value).buildPartial();
      } else {
        amount_ = value;
      }
      
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void clearAmount() {  amount_ = null;
      
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 4;
    private java.lang.String chainId_;
    /**
     * <code>string chain_id = 4;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public java.lang.String getChainId() {
      return chainId_;
    }
    /**
     * <code>string chain_id = 4;</code>
     * @return The bytes for chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chainId_);
    }
    /**
     * <code>string chain_id = 4;</code>
     * @param value The chainId to set.
     */
    private void setChainId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      chainId_ = value;
    }
    /**
     * <code>string chain_id = 4;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }
    /**
     * <code>string chain_id = 4;</code>
     * @param value The bytes for chainId to set.
     */
    private void setChainIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      chainId_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SideChainUndelegate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.SideChainUndelegate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.Binance.Proto.SideChainUndelegate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.SideChainUndelegate, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SideChainUndelegate)
        wallet.core.jni.proto.Binance.SideChainUndelegateOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.SideChainUndelegate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes delegator_addr = 1;</code>
       * @return The delegatorAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDelegatorAddr() {
        return instance.getDelegatorAddr();
      }
      /**
       * <code>bytes delegator_addr = 1;</code>
       * @param value The delegatorAddr to set.
       * @return This builder for chaining.
       */
      public Builder setDelegatorAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDelegatorAddr(value);
        return this;
      }
      /**
       * <code>bytes delegator_addr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelegatorAddr() {
        copyOnWrite();
        instance.clearDelegatorAddr();
        return this;
      }

      /**
       * <code>bytes validator_addr = 2;</code>
       * @return The validatorAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValidatorAddr() {
        return instance.getValidatorAddr();
      }
      /**
       * <code>bytes validator_addr = 2;</code>
       * @param value The validatorAddr to set.
       * @return This builder for chaining.
       */
      public Builder setValidatorAddr(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValidatorAddr(value);
        return this;
      }
      /**
       * <code>bytes validator_addr = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValidatorAddr() {
        copyOnWrite();
        instance.clearValidatorAddr();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public boolean hasAmount() {
        return instance.hasAmount();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder setAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
        }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder setAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder mergeAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.mergeAmount(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder clearAmount() {  copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <code>string chain_id = 4;</code>
       * @return The chainId.
       */
      @java.lang.Override
      public java.lang.String getChainId() {
        return instance.getChainId();
      }
      /**
       * <code>string chain_id = 4;</code>
       * @return The bytes for chainId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        return instance.getChainIdBytes();
      }
      /**
       * <code>string chain_id = 4;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(
          java.lang.String value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <code>string chain_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }
      /**
       * <code>string chain_id = 4;</code>
       * @param value The bytes for chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SideChainUndelegate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.SideChainUndelegate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "delegatorAddr_",
              "validatorAddr_",
              "amount_",
              "chainId_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\t\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SideChainUndelegate> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.SideChainUndelegate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SideChainUndelegate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SideChainUndelegate)
    private static final wallet.core.jni.proto.Binance.SideChainUndelegate DEFAULT_INSTANCE;
    static {
      SideChainUndelegate defaultInstance = new SideChainUndelegate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SideChainUndelegate.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.SideChainUndelegate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SideChainUndelegate> PARSER;

    public static com.google.protobuf.Parser<SideChainUndelegate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TimeLockOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TimeLockOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @return The fromAddress.
     */
    com.google.protobuf.ByteString getFromAddress();

    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> 
        getAmountList();
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index);
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    int getAmountCount();

    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 4;</code>
     * @return The lockTime.
     */
    long getLockTime();
  }
  /**
   * <pre>
   * Message for TimeLock order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TimeLockOrder}
   */
  public  static final class TimeLockOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TimeLockOrder, TimeLockOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TimeLockOrder)
      TimeLockOrderOrBuilder {
    private TimeLockOrder() {
      fromAddress_ = com.google.protobuf.ByteString.EMPTY;
      description_ = "";
      amount_ = emptyProtobufList();
    }
    public static final int FROM_ADDRESS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString fromAddress_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @return The fromAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFromAddress() {
      return fromAddress_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @param value The fromAddress to set.
     */
    private void setFromAddress(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      fromAddress_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     */
    private void clearFromAddress() {
      
      fromAddress_ = getDefaultInstance().getFromAddress();
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.String description_;
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      return description_;
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(description_);
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     * @param value The description to set.
     */
    private void setDescription(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      description_ = value;
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    private void clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 2;</code>
     * @param value The bytes for description to set.
     */
    private void setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      description_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> amount_;
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
      return amount_;
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder> 
        getAmountOrBuilderList() {
      return amount_;
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public int getAmountCount() {
      return amount_.size();
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
      return amount_.get(index);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    public wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder getAmountOrBuilder(
        int index) {
      return amount_.get(index);
    }
    private void ensureAmountIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> tmp = amount_;
      if (!tmp.isModifiable()) {
        amount_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void setAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.set(index, value);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(value);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void addAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(index, value);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void addAllAmount(
        java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
      ensureAmountIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, amount_);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void clearAmount() {
      amount_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
     */
    private void removeAmount(int index) {
      ensureAmountIsMutable();
      amount_.remove(index);
    }

    public static final int LOCK_TIME_FIELD_NUMBER = 4;
    private long lockTime_;
    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 4;</code>
     * @return The lockTime.
     */
    @java.lang.Override
    public long getLockTime() {
      return lockTime_;
    }
    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 4;</code>
     * @param value The lockTime to set.
     */
    private void setLockTime(long value) {
      
      lockTime_ = value;
    }
    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 4;</code>
     */
    private void clearLockTime() {
      
      lockTime_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeLockOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TimeLockOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TimeLock order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TimeLockOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TimeLockOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TimeLockOrder)
        wallet.core.jni.proto.Binance.TimeLockOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TimeLockOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @return The fromAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFromAddress() {
        return instance.getFromAddress();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @param value The fromAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFromAddress(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFromAddress(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromAddress() {
        copyOnWrite();
        instance.clearFromAddress();
        return this;
      }

      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The description.
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        return instance.getDescription();
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The bytes for description.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        return instance.getDescriptionBytes();
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescription(value);
        return this;
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        copyOnWrite();
        instance.clearDescription();
        return this;
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescriptionBytes(value);
        return this;
      }

      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
        return java.util.Collections.unmodifiableList(
            instance.getAmountList());
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public int getAmountCount() {
        return instance.getAmountCount();
      }/**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
        return instance.getAmount(index);
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(value);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder addAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder addAllAmount(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
        copyOnWrite();
        instance.addAllAmount(values);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs. see SDK https://github.com/binance-chain/javascript-sdk/blob/master/docs/api-docs/classes/tokenmanagement.md#timelock
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 3;</code>
       */
      public Builder removeAmount(int index) {
        copyOnWrite();
        instance.removeAmount(index);
        return this;
      }

      /**
       * <pre>
       * lock time
       * </pre>
       *
       * <code>int64 lock_time = 4;</code>
       * @return The lockTime.
       */
      @java.lang.Override
      public long getLockTime() {
        return instance.getLockTime();
      }
      /**
       * <pre>
       * lock time
       * </pre>
       *
       * <code>int64 lock_time = 4;</code>
       * @param value The lockTime to set.
       * @return This builder for chaining.
       */
      public Builder setLockTime(long value) {
        copyOnWrite();
        instance.setLockTime(value);
        return this;
      }
      /**
       * <pre>
       * lock time
       * </pre>
       *
       * <code>int64 lock_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLockTime() {
        copyOnWrite();
        instance.clearLockTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TimeLockOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TimeLockOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "fromAddress_",
              "description_",
              "amount_",
              wallet.core.jni.proto.Binance.SendOrder.Token.class,
              "lockTime_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0001\u0000\u0001\n\u0002\u0208" +
                "\u0003\u001b\u0004\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TimeLockOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TimeLockOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TimeLockOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TimeLockOrder)
    private static final wallet.core.jni.proto.Binance.TimeLockOrder DEFAULT_INSTANCE;
    static {
      TimeLockOrder defaultInstance = new TimeLockOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TimeLockOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TimeLockOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TimeLockOrder> PARSER;

    public static com.google.protobuf.Parser<TimeLockOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TimeRelockOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TimeRelockOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @return The fromAddress.
     */
    com.google.protobuf.ByteString getFromAddress();

    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> 
        getAmountList();
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index);
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    int getAmountCount();

    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 5;</code>
     * @return The lockTime.
     */
    long getLockTime();
  }
  /**
   * <pre>
   * Message for TimeRelock order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TimeRelockOrder}
   */
  public  static final class TimeRelockOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TimeRelockOrder, TimeRelockOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TimeRelockOrder)
      TimeRelockOrderOrBuilder {
    private TimeRelockOrder() {
      fromAddress_ = com.google.protobuf.ByteString.EMPTY;
      description_ = "";
      amount_ = emptyProtobufList();
    }
    public static final int FROM_ADDRESS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString fromAddress_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @return The fromAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFromAddress() {
      return fromAddress_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @param value The fromAddress to set.
     */
    private void setFromAddress(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      fromAddress_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     */
    private void clearFromAddress() {
      
      fromAddress_ = getDefaultInstance().getFromAddress();
    }

    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     * @param value The id to set.
     */
    private void setId(long value) {
      
      id_ = value;
    }
    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     */
    private void clearId() {
      
      id_ = 0L;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.String description_;
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      return description_;
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(description_);
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     * @param value The description to set.
     */
    private void setDescription(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      description_ = value;
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    private void clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
    }
    /**
     * <pre>
     * Description (optional)
     * </pre>
     *
     * <code>string description = 3;</code>
     * @param value The bytes for description to set.
     */
    private void setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      description_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> amount_;
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
      return amount_;
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder> 
        getAmountOrBuilderList() {
      return amount_;
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    @java.lang.Override
    public int getAmountCount() {
      return amount_.size();
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
      return amount_.get(index);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    public wallet.core.jni.proto.Binance.SendOrder.TokenOrBuilder getAmountOrBuilder(
        int index) {
      return amount_.get(index);
    }
    private void ensureAmountIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Binance.SendOrder.Token> tmp = amount_;
      if (!tmp.isModifiable()) {
        amount_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void setAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.set(index, value);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(value);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void addAmount(
        int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
      value.getClass();
  ensureAmountIsMutable();
      amount_.add(index, value);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void addAllAmount(
        java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
      ensureAmountIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, amount_);
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void clearAmount() {
      amount_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Array of symbol/amount pairs.
     * </pre>
     *
     * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
     */
    private void removeAmount(int index) {
      ensureAmountIsMutable();
      amount_.remove(index);
    }

    public static final int LOCK_TIME_FIELD_NUMBER = 5;
    private long lockTime_;
    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 5;</code>
     * @return The lockTime.
     */
    @java.lang.Override
    public long getLockTime() {
      return lockTime_;
    }
    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 5;</code>
     * @param value The lockTime to set.
     */
    private void setLockTime(long value) {
      
      lockTime_ = value;
    }
    /**
     * <pre>
     * lock time
     * </pre>
     *
     * <code>int64 lock_time = 5;</code>
     */
    private void clearLockTime() {
      
      lockTime_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeRelockOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TimeRelockOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TimeRelock order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TimeRelockOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TimeRelockOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TimeRelockOrder)
        wallet.core.jni.proto.Binance.TimeRelockOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TimeRelockOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @return The fromAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFromAddress() {
        return instance.getFromAddress();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @param value The fromAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFromAddress(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFromAddress(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromAddress() {
        copyOnWrite();
        instance.clearFromAddress();
        return this;
      }

      /**
       * <pre>
       * order ID
       * </pre>
       *
       * <code>int64 id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * order ID
       * </pre>
       *
       * <code>int64 id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * order ID
       * </pre>
       *
       * <code>int64 id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 3;</code>
       * @return The description.
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        return instance.getDescription();
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 3;</code>
       * @return The bytes for description.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        return instance.getDescriptionBytes();
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 3;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescription(value);
        return this;
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        copyOnWrite();
        instance.clearDescription();
        return this;
      }
      /**
       * <pre>
       * Description (optional)
       * </pre>
       *
       * <code>string description = 3;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescriptionBytes(value);
        return this;
      }

      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Binance.SendOrder.Token> getAmountList() {
        return java.util.Collections.unmodifiableList(
            instance.getAmountList());
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      @java.lang.Override
      public int getAmountCount() {
        return instance.getAmountCount();
      }/**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder.Token getAmount(int index) {
        return instance.getAmount(index);
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.setAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder setAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.setAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder addAmount(wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(value);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token value) {
        copyOnWrite();
        instance.addAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder addAmount(
          wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder addAmount(
          int index, wallet.core.jni.proto.Binance.SendOrder.Token.Builder builderForValue) {
        copyOnWrite();
        instance.addAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder addAllAmount(
          java.lang.Iterable<? extends wallet.core.jni.proto.Binance.SendOrder.Token> values) {
        copyOnWrite();
        instance.addAllAmount(values);
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * Array of symbol/amount pairs.
       * </pre>
       *
       * <code>repeated .TW.Binance.Proto.SendOrder.Token amount = 4;</code>
       */
      public Builder removeAmount(int index) {
        copyOnWrite();
        instance.removeAmount(index);
        return this;
      }

      /**
       * <pre>
       * lock time
       * </pre>
       *
       * <code>int64 lock_time = 5;</code>
       * @return The lockTime.
       */
      @java.lang.Override
      public long getLockTime() {
        return instance.getLockTime();
      }
      /**
       * <pre>
       * lock time
       * </pre>
       *
       * <code>int64 lock_time = 5;</code>
       * @param value The lockTime to set.
       * @return This builder for chaining.
       */
      public Builder setLockTime(long value) {
        copyOnWrite();
        instance.setLockTime(value);
        return this;
      }
      /**
       * <pre>
       * lock time
       * </pre>
       *
       * <code>int64 lock_time = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLockTime() {
        copyOnWrite();
        instance.clearLockTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TimeRelockOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TimeRelockOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "fromAddress_",
              "id_",
              "description_",
              "amount_",
              wallet.core.jni.proto.Binance.SendOrder.Token.class,
              "lockTime_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0001\u0000\u0001\n\u0002\u0002" +
                "\u0003\u0208\u0004\u001b\u0005\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TimeRelockOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TimeRelockOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TimeRelockOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TimeRelockOrder)
    private static final wallet.core.jni.proto.Binance.TimeRelockOrder DEFAULT_INSTANCE;
    static {
      TimeRelockOrder defaultInstance = new TimeRelockOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TimeRelockOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TimeRelockOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TimeRelockOrder> PARSER;

    public static com.google.protobuf.Parser<TimeRelockOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TimeUnlockOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.TimeUnlockOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @return The fromAddress.
     */
    com.google.protobuf.ByteString getFromAddress();

    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     * @return The id.
     */
    long getId();
  }
  /**
   * <pre>
   * Message for TimeUnlock order
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.TimeUnlockOrder}
   */
  public  static final class TimeUnlockOrder extends
      com.google.protobuf.GeneratedMessageLite<
          TimeUnlockOrder, TimeUnlockOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.TimeUnlockOrder)
      TimeUnlockOrderOrBuilder {
    private TimeUnlockOrder() {
      fromAddress_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int FROM_ADDRESS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString fromAddress_;
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @return The fromAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFromAddress() {
      return fromAddress_;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     * @param value The fromAddress to set.
     */
    private void setFromAddress(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      fromAddress_ = value;
    }
    /**
     * <pre>
     * owner address
     * </pre>
     *
     * <code>bytes from_address = 1;</code>
     */
    private void clearFromAddress() {
      
      fromAddress_ = getDefaultInstance().getFromAddress();
    }

    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     * @param value The id to set.
     */
    private void setId(long value) {
      
      id_ = value;
    }
    /**
     * <pre>
     * order ID
     * </pre>
     *
     * <code>int64 id = 2;</code>
     */
    private void clearId() {
      
      id_ = 0L;
    }

    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.TimeUnlockOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.TimeUnlockOrder prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for TimeUnlock order
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.TimeUnlockOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.TimeUnlockOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.TimeUnlockOrder)
        wallet.core.jni.proto.Binance.TimeUnlockOrderOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.TimeUnlockOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @return The fromAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFromAddress() {
        return instance.getFromAddress();
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @param value The fromAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFromAddress(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFromAddress(value);
        return this;
      }
      /**
       * <pre>
       * owner address
       * </pre>
       *
       * <code>bytes from_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromAddress() {
        copyOnWrite();
        instance.clearFromAddress();
        return this;
      }

      /**
       * <pre>
       * order ID
       * </pre>
       *
       * <code>int64 id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * order ID
       * </pre>
       *
       * <code>int64 id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * order ID
       * </pre>
       *
       * <code>int64 id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.TimeUnlockOrder)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.TimeUnlockOrder();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "fromAddress_",
              "id_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.TimeUnlockOrder> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.TimeUnlockOrder.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.TimeUnlockOrder>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.TimeUnlockOrder)
    private static final wallet.core.jni.proto.Binance.TimeUnlockOrder DEFAULT_INSTANCE;
    static {
      TimeUnlockOrder defaultInstance = new TimeUnlockOrder();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TimeUnlockOrder.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.TimeUnlockOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TimeUnlockOrder> PARSER;

    public static com.google.protobuf.Parser<TimeUnlockOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     * @return The chainId.
     */
    java.lang.String getChainId();
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     * @return The bytes for chainId.
     */
    com.google.protobuf.ByteString
        getChainIdBytes();

    /**
     * <pre>
     * Source account number
     * </pre>
     *
     * <code>int64 account_number = 2;</code>
     * @return The accountNumber.
     */
    long getAccountNumber();

    /**
     * <pre>
     * Sequence number (account specific)
     * </pre>
     *
     * <code>int64 sequence = 3;</code>
     * @return The sequence.
     */
    long getSequence();

    /**
     * <pre>
     * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
     * Some important values:
     *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
     *  1: Binance DEX Web Wallet
     *  2: Trust Wallet
     * </pre>
     *
     * <code>int64 source = 4;</code>
     * @return The source.
     */
    long getSource();

    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     * @return The memo.
     */
    java.lang.String getMemo();
    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     * @return The bytes for memo.
     */
    com.google.protobuf.ByteString
        getMemoBytes();

    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 6;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     * @return Whether the tradeOrder field is set.
     */
    boolean hasTradeOrder();
    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     * @return The tradeOrder.
     */
    wallet.core.jni.proto.Binance.TradeOrder getTradeOrder();

    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     * @return Whether the cancelTradeOrder field is set.
     */
    boolean hasCancelTradeOrder();
    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     * @return The cancelTradeOrder.
     */
    wallet.core.jni.proto.Binance.CancelTradeOrder getCancelTradeOrder();

    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     * @return Whether the sendOrder field is set.
     */
    boolean hasSendOrder();
    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     * @return The sendOrder.
     */
    wallet.core.jni.proto.Binance.SendOrder getSendOrder();

    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     * @return Whether the freezeOrder field is set.
     */
    boolean hasFreezeOrder();
    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     * @return The freezeOrder.
     */
    wallet.core.jni.proto.Binance.TokenFreezeOrder getFreezeOrder();

    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     * @return Whether the unfreezeOrder field is set.
     */
    boolean hasUnfreezeOrder();
    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     * @return The unfreezeOrder.
     */
    wallet.core.jni.proto.Binance.TokenUnfreezeOrder getUnfreezeOrder();

    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     * @return Whether the htltOrder field is set.
     */
    boolean hasHtltOrder();
    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     * @return The htltOrder.
     */
    wallet.core.jni.proto.Binance.HTLTOrder getHtltOrder();

    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     * @return Whether the depositHTLTOrder field is set.
     */
    boolean hasDepositHTLTOrder();
    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     * @return The depositHTLTOrder.
     */
    wallet.core.jni.proto.Binance.DepositHTLTOrder getDepositHTLTOrder();

    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     * @return Whether the claimHTLTOrder field is set.
     */
    boolean hasClaimHTLTOrder();
    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     * @return The claimHTLTOrder.
     */
    wallet.core.jni.proto.Binance.ClaimHTLOrder getClaimHTLTOrder();

    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     * @return Whether the refundHTLTOrder field is set.
     */
    boolean hasRefundHTLTOrder();
    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     * @return The refundHTLTOrder.
     */
    wallet.core.jni.proto.Binance.RefundHTLTOrder getRefundHTLTOrder();

    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     * @return Whether the issueOrder field is set.
     */
    boolean hasIssueOrder();
    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     * @return The issueOrder.
     */
    wallet.core.jni.proto.Binance.TokenIssueOrder getIssueOrder();

    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     * @return Whether the mintOrder field is set.
     */
    boolean hasMintOrder();
    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     * @return The mintOrder.
     */
    wallet.core.jni.proto.Binance.TokenMintOrder getMintOrder();

    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     * @return Whether the burnOrder field is set.
     */
    boolean hasBurnOrder();
    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     * @return The burnOrder.
     */
    wallet.core.jni.proto.Binance.TokenBurnOrder getBurnOrder();

    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     * @return Whether the transferOutOrder field is set.
     */
    boolean hasTransferOutOrder();
    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     * @return The transferOutOrder.
     */
    wallet.core.jni.proto.Binance.TransferOut getTransferOutOrder();

    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     * @return Whether the sideDelegateOrder field is set.
     */
    boolean hasSideDelegateOrder();
    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     * @return The sideDelegateOrder.
     */
    wallet.core.jni.proto.Binance.SideChainDelegate getSideDelegateOrder();

    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     * @return Whether the sideRedelegateOrder field is set.
     */
    boolean hasSideRedelegateOrder();
    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     * @return The sideRedelegateOrder.
     */
    wallet.core.jni.proto.Binance.SideChainRedelegate getSideRedelegateOrder();

    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     * @return Whether the sideUndelegateOrder field is set.
     */
    boolean hasSideUndelegateOrder();
    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     * @return The sideUndelegateOrder.
     */
    wallet.core.jni.proto.Binance.SideChainUndelegate getSideUndelegateOrder();

    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     * @return Whether the timeLockOrder field is set.
     */
    boolean hasTimeLockOrder();
    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     * @return The timeLockOrder.
     */
    wallet.core.jni.proto.Binance.TimeLockOrder getTimeLockOrder();

    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     * @return Whether the timeRelockOrder field is set.
     */
    boolean hasTimeRelockOrder();
    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     * @return The timeRelockOrder.
     */
    wallet.core.jni.proto.Binance.TimeRelockOrder getTimeRelockOrder();

    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     * @return Whether the timeUnlockOrder field is set.
     */
    boolean hasTimeUnlockOrder();
    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     * @return The timeUnlockOrder.
     */
    wallet.core.jni.proto.Binance.TimeUnlockOrder getTimeUnlockOrder();

    public wallet.core.jni.proto.Binance.SigningInput.OrderOneofCase getOrderOneofCase();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      chainId_ = "";
      memo_ = "";
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int orderOneofCase_ = 0;
    private java.lang.Object orderOneof_;
    public enum OrderOneofCase {
      TRADE_ORDER(8),
      CANCEL_TRADE_ORDER(9),
      SEND_ORDER(10),
      FREEZE_ORDER(11),
      UNFREEZE_ORDER(12),
      HTLT_ORDER(13),
      DEPOSITHTLT_ORDER(14),
      CLAIMHTLT_ORDER(15),
      REFUNDHTLT_ORDER(16),
      ISSUE_ORDER(17),
      MINT_ORDER(18),
      BURN_ORDER(19),
      TRANSFER_OUT_ORDER(20),
      SIDE_DELEGATE_ORDER(21),
      SIDE_REDELEGATE_ORDER(22),
      SIDE_UNDELEGATE_ORDER(23),
      TIME_LOCK_ORDER(24),
      TIME_RELOCK_ORDER(25),
      TIME_UNLOCK_ORDER(26),
      ORDERONEOF_NOT_SET(0);
      private final int value;
      private OrderOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OrderOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static OrderOneofCase forNumber(int value) {
        switch (value) {
          case 8: return TRADE_ORDER;
          case 9: return CANCEL_TRADE_ORDER;
          case 10: return SEND_ORDER;
          case 11: return FREEZE_ORDER;
          case 12: return UNFREEZE_ORDER;
          case 13: return HTLT_ORDER;
          case 14: return DEPOSITHTLT_ORDER;
          case 15: return CLAIMHTLT_ORDER;
          case 16: return REFUNDHTLT_ORDER;
          case 17: return ISSUE_ORDER;
          case 18: return MINT_ORDER;
          case 19: return BURN_ORDER;
          case 20: return TRANSFER_OUT_ORDER;
          case 21: return SIDE_DELEGATE_ORDER;
          case 22: return SIDE_REDELEGATE_ORDER;
          case 23: return SIDE_UNDELEGATE_ORDER;
          case 24: return TIME_LOCK_ORDER;
          case 25: return TIME_RELOCK_ORDER;
          case 26: return TIME_UNLOCK_ORDER;
          case 0: return ORDERONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public OrderOneofCase
    getOrderOneofCase() {
      return OrderOneofCase.forNumber(
          orderOneofCase_);
    }

    private void clearOrderOneof() {
      orderOneofCase_ = 0;
      orderOneof_ = null;
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 1;
    private java.lang.String chainId_;
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public java.lang.String getChainId() {
      return chainId_;
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     * @return The bytes for chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chainId_);
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     * @param value The chainId to set.
     */
    private void setChainId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      chainId_ = value;
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>string chain_id = 1;</code>
     * @param value The bytes for chainId to set.
     */
    private void setChainIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      chainId_ = value.toStringUtf8();
      
    }

    public static final int ACCOUNT_NUMBER_FIELD_NUMBER = 2;
    private long accountNumber_;
    /**
     * <pre>
     * Source account number
     * </pre>
     *
     * <code>int64 account_number = 2;</code>
     * @return The accountNumber.
     */
    @java.lang.Override
    public long getAccountNumber() {
      return accountNumber_;
    }
    /**
     * <pre>
     * Source account number
     * </pre>
     *
     * <code>int64 account_number = 2;</code>
     * @param value The accountNumber to set.
     */
    private void setAccountNumber(long value) {
      
      accountNumber_ = value;
    }
    /**
     * <pre>
     * Source account number
     * </pre>
     *
     * <code>int64 account_number = 2;</code>
     */
    private void clearAccountNumber() {
      
      accountNumber_ = 0L;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private long sequence_;
    /**
     * <pre>
     * Sequence number (account specific)
     * </pre>
     *
     * <code>int64 sequence = 3;</code>
     * @return The sequence.
     */
    @java.lang.Override
    public long getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * Sequence number (account specific)
     * </pre>
     *
     * <code>int64 sequence = 3;</code>
     * @param value The sequence to set.
     */
    private void setSequence(long value) {
      
      sequence_ = value;
    }
    /**
     * <pre>
     * Sequence number (account specific)
     * </pre>
     *
     * <code>int64 sequence = 3;</code>
     */
    private void clearSequence() {
      
      sequence_ = 0L;
    }

    public static final int SOURCE_FIELD_NUMBER = 4;
    private long source_;
    /**
     * <pre>
     * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
     * Some important values:
     *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
     *  1: Binance DEX Web Wallet
     *  2: Trust Wallet
     * </pre>
     *
     * <code>int64 source = 4;</code>
     * @return The source.
     */
    @java.lang.Override
    public long getSource() {
      return source_;
    }
    /**
     * <pre>
     * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
     * Some important values:
     *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
     *  1: Binance DEX Web Wallet
     *  2: Trust Wallet
     * </pre>
     *
     * <code>int64 source = 4;</code>
     * @param value The source to set.
     */
    private void setSource(long value) {
      
      source_ = value;
    }
    /**
     * <pre>
     * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
     * Some important values:
     *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
     *  1: Binance DEX Web Wallet
     *  2: Trust Wallet
     * </pre>
     *
     * <code>int64 source = 4;</code>
     */
    private void clearSource() {
      
      source_ = 0L;
    }

    public static final int MEMO_FIELD_NUMBER = 5;
    private java.lang.String memo_;
    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     * @return The memo.
     */
    @java.lang.Override
    public java.lang.String getMemo() {
      return memo_;
    }
    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     * @return The bytes for memo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMemoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(memo_);
    }
    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     * @param value The memo to set.
     */
    private void setMemo(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      memo_ = value;
    }
    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     */
    private void clearMemo() {
      
      memo_ = getDefaultInstance().getMemo();
    }
    /**
     * <pre>
     * Optional memo
     * </pre>
     *
     * <code>string memo = 5;</code>
     * @param value The bytes for memo to set.
     */
    private void setMemoBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      memo_ = value.toStringUtf8();
      
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 6;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 6;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 6;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static final int TRADE_ORDER_FIELD_NUMBER = 8;
    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     */
    @java.lang.Override
    public boolean hasTradeOrder() {
      return orderOneofCase_ == 8;
    }
    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TradeOrder getTradeOrder() {
      if (orderOneofCase_ == 8) {
         return (wallet.core.jni.proto.Binance.TradeOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TradeOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     */
    private void setTradeOrder(wallet.core.jni.proto.Binance.TradeOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 8;
    }
    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     */
    private void mergeTradeOrder(wallet.core.jni.proto.Binance.TradeOrder value) {
      value.getClass();
  if (orderOneofCase_ == 8 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TradeOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TradeOrder.newBuilder((wallet.core.jni.proto.Binance.TradeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 8;
    }
    /**
     * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
     */
    private void clearTradeOrder() {
      if (orderOneofCase_ == 8) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int CANCEL_TRADE_ORDER_FIELD_NUMBER = 9;
    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     */
    @java.lang.Override
    public boolean hasCancelTradeOrder() {
      return orderOneofCase_ == 9;
    }
    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.CancelTradeOrder getCancelTradeOrder() {
      if (orderOneofCase_ == 9) {
         return (wallet.core.jni.proto.Binance.CancelTradeOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.CancelTradeOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     */
    private void setCancelTradeOrder(wallet.core.jni.proto.Binance.CancelTradeOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 9;
    }
    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     */
    private void mergeCancelTradeOrder(wallet.core.jni.proto.Binance.CancelTradeOrder value) {
      value.getClass();
  if (orderOneofCase_ == 9 &&
          orderOneof_ != wallet.core.jni.proto.Binance.CancelTradeOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.CancelTradeOrder.newBuilder((wallet.core.jni.proto.Binance.CancelTradeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 9;
    }
    /**
     * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
     */
    private void clearCancelTradeOrder() {
      if (orderOneofCase_ == 9) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int SEND_ORDER_FIELD_NUMBER = 10;
    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     */
    @java.lang.Override
    public boolean hasSendOrder() {
      return orderOneofCase_ == 10;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SendOrder getSendOrder() {
      if (orderOneofCase_ == 10) {
         return (wallet.core.jni.proto.Binance.SendOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.SendOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     */
    private void setSendOrder(wallet.core.jni.proto.Binance.SendOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 10;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     */
    private void mergeSendOrder(wallet.core.jni.proto.Binance.SendOrder value) {
      value.getClass();
  if (orderOneofCase_ == 10 &&
          orderOneof_ != wallet.core.jni.proto.Binance.SendOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.SendOrder.newBuilder((wallet.core.jni.proto.Binance.SendOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 10;
    }
    /**
     * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
     */
    private void clearSendOrder() {
      if (orderOneofCase_ == 10) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int FREEZE_ORDER_FIELD_NUMBER = 11;
    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     */
    @java.lang.Override
    public boolean hasFreezeOrder() {
      return orderOneofCase_ == 11;
    }
    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TokenFreezeOrder getFreezeOrder() {
      if (orderOneofCase_ == 11) {
         return (wallet.core.jni.proto.Binance.TokenFreezeOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TokenFreezeOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     */
    private void setFreezeOrder(wallet.core.jni.proto.Binance.TokenFreezeOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 11;
    }
    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     */
    private void mergeFreezeOrder(wallet.core.jni.proto.Binance.TokenFreezeOrder value) {
      value.getClass();
  if (orderOneofCase_ == 11 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TokenFreezeOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TokenFreezeOrder.newBuilder((wallet.core.jni.proto.Binance.TokenFreezeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 11;
    }
    /**
     * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
     */
    private void clearFreezeOrder() {
      if (orderOneofCase_ == 11) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int UNFREEZE_ORDER_FIELD_NUMBER = 12;
    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     */
    @java.lang.Override
    public boolean hasUnfreezeOrder() {
      return orderOneofCase_ == 12;
    }
    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TokenUnfreezeOrder getUnfreezeOrder() {
      if (orderOneofCase_ == 12) {
         return (wallet.core.jni.proto.Binance.TokenUnfreezeOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TokenUnfreezeOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     */
    private void setUnfreezeOrder(wallet.core.jni.proto.Binance.TokenUnfreezeOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 12;
    }
    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     */
    private void mergeUnfreezeOrder(wallet.core.jni.proto.Binance.TokenUnfreezeOrder value) {
      value.getClass();
  if (orderOneofCase_ == 12 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TokenUnfreezeOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TokenUnfreezeOrder.newBuilder((wallet.core.jni.proto.Binance.TokenUnfreezeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 12;
    }
    /**
     * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
     */
    private void clearUnfreezeOrder() {
      if (orderOneofCase_ == 12) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int HTLT_ORDER_FIELD_NUMBER = 13;
    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     */
    @java.lang.Override
    public boolean hasHtltOrder() {
      return orderOneofCase_ == 13;
    }
    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.HTLTOrder getHtltOrder() {
      if (orderOneofCase_ == 13) {
         return (wallet.core.jni.proto.Binance.HTLTOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.HTLTOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     */
    private void setHtltOrder(wallet.core.jni.proto.Binance.HTLTOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 13;
    }
    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     */
    private void mergeHtltOrder(wallet.core.jni.proto.Binance.HTLTOrder value) {
      value.getClass();
  if (orderOneofCase_ == 13 &&
          orderOneof_ != wallet.core.jni.proto.Binance.HTLTOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.HTLTOrder.newBuilder((wallet.core.jni.proto.Binance.HTLTOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 13;
    }
    /**
     * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
     */
    private void clearHtltOrder() {
      if (orderOneofCase_ == 13) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int DEPOSITHTLT_ORDER_FIELD_NUMBER = 14;
    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     */
    @java.lang.Override
    public boolean hasDepositHTLTOrder() {
      return orderOneofCase_ == 14;
    }
    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.DepositHTLTOrder getDepositHTLTOrder() {
      if (orderOneofCase_ == 14) {
         return (wallet.core.jni.proto.Binance.DepositHTLTOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.DepositHTLTOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     */
    private void setDepositHTLTOrder(wallet.core.jni.proto.Binance.DepositHTLTOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 14;
    }
    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     */
    private void mergeDepositHTLTOrder(wallet.core.jni.proto.Binance.DepositHTLTOrder value) {
      value.getClass();
  if (orderOneofCase_ == 14 &&
          orderOneof_ != wallet.core.jni.proto.Binance.DepositHTLTOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.DepositHTLTOrder.newBuilder((wallet.core.jni.proto.Binance.DepositHTLTOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 14;
    }
    /**
     * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
     */
    private void clearDepositHTLTOrder() {
      if (orderOneofCase_ == 14) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int CLAIMHTLT_ORDER_FIELD_NUMBER = 15;
    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     */
    @java.lang.Override
    public boolean hasClaimHTLTOrder() {
      return orderOneofCase_ == 15;
    }
    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.ClaimHTLOrder getClaimHTLTOrder() {
      if (orderOneofCase_ == 15) {
         return (wallet.core.jni.proto.Binance.ClaimHTLOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.ClaimHTLOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     */
    private void setClaimHTLTOrder(wallet.core.jni.proto.Binance.ClaimHTLOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 15;
    }
    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     */
    private void mergeClaimHTLTOrder(wallet.core.jni.proto.Binance.ClaimHTLOrder value) {
      value.getClass();
  if (orderOneofCase_ == 15 &&
          orderOneof_ != wallet.core.jni.proto.Binance.ClaimHTLOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.ClaimHTLOrder.newBuilder((wallet.core.jni.proto.Binance.ClaimHTLOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 15;
    }
    /**
     * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
     */
    private void clearClaimHTLTOrder() {
      if (orderOneofCase_ == 15) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int REFUNDHTLT_ORDER_FIELD_NUMBER = 16;
    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     */
    @java.lang.Override
    public boolean hasRefundHTLTOrder() {
      return orderOneofCase_ == 16;
    }
    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.RefundHTLTOrder getRefundHTLTOrder() {
      if (orderOneofCase_ == 16) {
         return (wallet.core.jni.proto.Binance.RefundHTLTOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.RefundHTLTOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     */
    private void setRefundHTLTOrder(wallet.core.jni.proto.Binance.RefundHTLTOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 16;
    }
    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     */
    private void mergeRefundHTLTOrder(wallet.core.jni.proto.Binance.RefundHTLTOrder value) {
      value.getClass();
  if (orderOneofCase_ == 16 &&
          orderOneof_ != wallet.core.jni.proto.Binance.RefundHTLTOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.RefundHTLTOrder.newBuilder((wallet.core.jni.proto.Binance.RefundHTLTOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 16;
    }
    /**
     * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
     */
    private void clearRefundHTLTOrder() {
      if (orderOneofCase_ == 16) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int ISSUE_ORDER_FIELD_NUMBER = 17;
    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     */
    @java.lang.Override
    public boolean hasIssueOrder() {
      return orderOneofCase_ == 17;
    }
    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TokenIssueOrder getIssueOrder() {
      if (orderOneofCase_ == 17) {
         return (wallet.core.jni.proto.Binance.TokenIssueOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TokenIssueOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     */
    private void setIssueOrder(wallet.core.jni.proto.Binance.TokenIssueOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 17;
    }
    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     */
    private void mergeIssueOrder(wallet.core.jni.proto.Binance.TokenIssueOrder value) {
      value.getClass();
  if (orderOneofCase_ == 17 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TokenIssueOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TokenIssueOrder.newBuilder((wallet.core.jni.proto.Binance.TokenIssueOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 17;
    }
    /**
     * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
     */
    private void clearIssueOrder() {
      if (orderOneofCase_ == 17) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int MINT_ORDER_FIELD_NUMBER = 18;
    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     */
    @java.lang.Override
    public boolean hasMintOrder() {
      return orderOneofCase_ == 18;
    }
    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TokenMintOrder getMintOrder() {
      if (orderOneofCase_ == 18) {
         return (wallet.core.jni.proto.Binance.TokenMintOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TokenMintOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     */
    private void setMintOrder(wallet.core.jni.proto.Binance.TokenMintOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 18;
    }
    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     */
    private void mergeMintOrder(wallet.core.jni.proto.Binance.TokenMintOrder value) {
      value.getClass();
  if (orderOneofCase_ == 18 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TokenMintOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TokenMintOrder.newBuilder((wallet.core.jni.proto.Binance.TokenMintOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 18;
    }
    /**
     * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
     */
    private void clearMintOrder() {
      if (orderOneofCase_ == 18) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int BURN_ORDER_FIELD_NUMBER = 19;
    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     */
    @java.lang.Override
    public boolean hasBurnOrder() {
      return orderOneofCase_ == 19;
    }
    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TokenBurnOrder getBurnOrder() {
      if (orderOneofCase_ == 19) {
         return (wallet.core.jni.proto.Binance.TokenBurnOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TokenBurnOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     */
    private void setBurnOrder(wallet.core.jni.proto.Binance.TokenBurnOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 19;
    }
    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     */
    private void mergeBurnOrder(wallet.core.jni.proto.Binance.TokenBurnOrder value) {
      value.getClass();
  if (orderOneofCase_ == 19 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TokenBurnOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TokenBurnOrder.newBuilder((wallet.core.jni.proto.Binance.TokenBurnOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 19;
    }
    /**
     * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
     */
    private void clearBurnOrder() {
      if (orderOneofCase_ == 19) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int TRANSFER_OUT_ORDER_FIELD_NUMBER = 20;
    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     */
    @java.lang.Override
    public boolean hasTransferOutOrder() {
      return orderOneofCase_ == 20;
    }
    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TransferOut getTransferOutOrder() {
      if (orderOneofCase_ == 20) {
         return (wallet.core.jni.proto.Binance.TransferOut) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TransferOut.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     */
    private void setTransferOutOrder(wallet.core.jni.proto.Binance.TransferOut value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 20;
    }
    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     */
    private void mergeTransferOutOrder(wallet.core.jni.proto.Binance.TransferOut value) {
      value.getClass();
  if (orderOneofCase_ == 20 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TransferOut.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TransferOut.newBuilder((wallet.core.jni.proto.Binance.TransferOut) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 20;
    }
    /**
     * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
     */
    private void clearTransferOutOrder() {
      if (orderOneofCase_ == 20) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int SIDE_DELEGATE_ORDER_FIELD_NUMBER = 21;
    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     */
    @java.lang.Override
    public boolean hasSideDelegateOrder() {
      return orderOneofCase_ == 21;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SideChainDelegate getSideDelegateOrder() {
      if (orderOneofCase_ == 21) {
         return (wallet.core.jni.proto.Binance.SideChainDelegate) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.SideChainDelegate.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     */
    private void setSideDelegateOrder(wallet.core.jni.proto.Binance.SideChainDelegate value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 21;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     */
    private void mergeSideDelegateOrder(wallet.core.jni.proto.Binance.SideChainDelegate value) {
      value.getClass();
  if (orderOneofCase_ == 21 &&
          orderOneof_ != wallet.core.jni.proto.Binance.SideChainDelegate.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.SideChainDelegate.newBuilder((wallet.core.jni.proto.Binance.SideChainDelegate) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 21;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
     */
    private void clearSideDelegateOrder() {
      if (orderOneofCase_ == 21) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int SIDE_REDELEGATE_ORDER_FIELD_NUMBER = 22;
    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     */
    @java.lang.Override
    public boolean hasSideRedelegateOrder() {
      return orderOneofCase_ == 22;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SideChainRedelegate getSideRedelegateOrder() {
      if (orderOneofCase_ == 22) {
         return (wallet.core.jni.proto.Binance.SideChainRedelegate) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.SideChainRedelegate.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     */
    private void setSideRedelegateOrder(wallet.core.jni.proto.Binance.SideChainRedelegate value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 22;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     */
    private void mergeSideRedelegateOrder(wallet.core.jni.proto.Binance.SideChainRedelegate value) {
      value.getClass();
  if (orderOneofCase_ == 22 &&
          orderOneof_ != wallet.core.jni.proto.Binance.SideChainRedelegate.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.SideChainRedelegate.newBuilder((wallet.core.jni.proto.Binance.SideChainRedelegate) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 22;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
     */
    private void clearSideRedelegateOrder() {
      if (orderOneofCase_ == 22) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int SIDE_UNDELEGATE_ORDER_FIELD_NUMBER = 23;
    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     */
    @java.lang.Override
    public boolean hasSideUndelegateOrder() {
      return orderOneofCase_ == 23;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SideChainUndelegate getSideUndelegateOrder() {
      if (orderOneofCase_ == 23) {
         return (wallet.core.jni.proto.Binance.SideChainUndelegate) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.SideChainUndelegate.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     */
    private void setSideUndelegateOrder(wallet.core.jni.proto.Binance.SideChainUndelegate value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 23;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     */
    private void mergeSideUndelegateOrder(wallet.core.jni.proto.Binance.SideChainUndelegate value) {
      value.getClass();
  if (orderOneofCase_ == 23 &&
          orderOneof_ != wallet.core.jni.proto.Binance.SideChainUndelegate.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.SideChainUndelegate.newBuilder((wallet.core.jni.proto.Binance.SideChainUndelegate) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 23;
    }
    /**
     * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
     */
    private void clearSideUndelegateOrder() {
      if (orderOneofCase_ == 23) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int TIME_LOCK_ORDER_FIELD_NUMBER = 24;
    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     */
    @java.lang.Override
    public boolean hasTimeLockOrder() {
      return orderOneofCase_ == 24;
    }
    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TimeLockOrder getTimeLockOrder() {
      if (orderOneofCase_ == 24) {
         return (wallet.core.jni.proto.Binance.TimeLockOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TimeLockOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     */
    private void setTimeLockOrder(wallet.core.jni.proto.Binance.TimeLockOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 24;
    }
    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     */
    private void mergeTimeLockOrder(wallet.core.jni.proto.Binance.TimeLockOrder value) {
      value.getClass();
  if (orderOneofCase_ == 24 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TimeLockOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TimeLockOrder.newBuilder((wallet.core.jni.proto.Binance.TimeLockOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 24;
    }
    /**
     * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
     */
    private void clearTimeLockOrder() {
      if (orderOneofCase_ == 24) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int TIME_RELOCK_ORDER_FIELD_NUMBER = 25;
    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     */
    @java.lang.Override
    public boolean hasTimeRelockOrder() {
      return orderOneofCase_ == 25;
    }
    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TimeRelockOrder getTimeRelockOrder() {
      if (orderOneofCase_ == 25) {
         return (wallet.core.jni.proto.Binance.TimeRelockOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TimeRelockOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     */
    private void setTimeRelockOrder(wallet.core.jni.proto.Binance.TimeRelockOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 25;
    }
    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     */
    private void mergeTimeRelockOrder(wallet.core.jni.proto.Binance.TimeRelockOrder value) {
      value.getClass();
  if (orderOneofCase_ == 25 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TimeRelockOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TimeRelockOrder.newBuilder((wallet.core.jni.proto.Binance.TimeRelockOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 25;
    }
    /**
     * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
     */
    private void clearTimeRelockOrder() {
      if (orderOneofCase_ == 25) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int TIME_UNLOCK_ORDER_FIELD_NUMBER = 26;
    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     */
    @java.lang.Override
    public boolean hasTimeUnlockOrder() {
      return orderOneofCase_ == 26;
    }
    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.TimeUnlockOrder getTimeUnlockOrder() {
      if (orderOneofCase_ == 26) {
         return (wallet.core.jni.proto.Binance.TimeUnlockOrder) orderOneof_;
      }
      return wallet.core.jni.proto.Binance.TimeUnlockOrder.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     */
    private void setTimeUnlockOrder(wallet.core.jni.proto.Binance.TimeUnlockOrder value) {
      value.getClass();
  orderOneof_ = value;
      orderOneofCase_ = 26;
    }
    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     */
    private void mergeTimeUnlockOrder(wallet.core.jni.proto.Binance.TimeUnlockOrder value) {
      value.getClass();
  if (orderOneofCase_ == 26 &&
          orderOneof_ != wallet.core.jni.proto.Binance.TimeUnlockOrder.getDefaultInstance()) {
        orderOneof_ = wallet.core.jni.proto.Binance.TimeUnlockOrder.newBuilder((wallet.core.jni.proto.Binance.TimeUnlockOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 26;
    }
    /**
     * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
     */
    private void clearTimeUnlockOrder() {
      if (orderOneofCase_ == 26) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SigningInput)
        wallet.core.jni.proto.Binance.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public OrderOneofCase
          getOrderOneofCase() {
        return instance.getOrderOneofCase();
      }

      public Builder clearOrderOneof() {
        copyOnWrite();
        instance.clearOrderOneof();
        return this;
      }


      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>string chain_id = 1;</code>
       * @return The chainId.
       */
      @java.lang.Override
      public java.lang.String getChainId() {
        return instance.getChainId();
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>string chain_id = 1;</code>
       * @return The bytes for chainId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        return instance.getChainIdBytes();
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>string chain_id = 1;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(
          java.lang.String value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>string chain_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>string chain_id = 1;</code>
       * @param value The bytes for chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Source account number
       * </pre>
       *
       * <code>int64 account_number = 2;</code>
       * @return The accountNumber.
       */
      @java.lang.Override
      public long getAccountNumber() {
        return instance.getAccountNumber();
      }
      /**
       * <pre>
       * Source account number
       * </pre>
       *
       * <code>int64 account_number = 2;</code>
       * @param value The accountNumber to set.
       * @return This builder for chaining.
       */
      public Builder setAccountNumber(long value) {
        copyOnWrite();
        instance.setAccountNumber(value);
        return this;
      }
      /**
       * <pre>
       * Source account number
       * </pre>
       *
       * <code>int64 account_number = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountNumber() {
        copyOnWrite();
        instance.clearAccountNumber();
        return this;
      }

      /**
       * <pre>
       * Sequence number (account specific)
       * </pre>
       *
       * <code>int64 sequence = 3;</code>
       * @return The sequence.
       */
      @java.lang.Override
      public long getSequence() {
        return instance.getSequence();
      }
      /**
       * <pre>
       * Sequence number (account specific)
       * </pre>
       *
       * <code>int64 sequence = 3;</code>
       * @param value The sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequence(long value) {
        copyOnWrite();
        instance.setSequence(value);
        return this;
      }
      /**
       * <pre>
       * Sequence number (account specific)
       * </pre>
       *
       * <code>int64 sequence = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequence() {
        copyOnWrite();
        instance.clearSequence();
        return this;
      }

      /**
       * <pre>
       * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
       * Some important values:
       *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
       *  1: Binance DEX Web Wallet
       *  2: Trust Wallet
       * </pre>
       *
       * <code>int64 source = 4;</code>
       * @return The source.
       */
      @java.lang.Override
      public long getSource() {
        return instance.getSource();
      }
      /**
       * <pre>
       * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
       * Some important values:
       *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
       *  1: Binance DEX Web Wallet
       *  2: Trust Wallet
       * </pre>
       *
       * <code>int64 source = 4;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(long value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <pre>
       * Transaction source, see https://github.com/bnb-chain/BEPs/blob/master/BEP10.md
       * Some important values:
       *  0: Default source value (e.g. for Binance Chain Command Line, or SDKs)
       *  1: Binance DEX Web Wallet
       *  2: Trust Wallet
       * </pre>
       *
       * <code>int64 source = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }

      /**
       * <pre>
       * Optional memo
       * </pre>
       *
       * <code>string memo = 5;</code>
       * @return The memo.
       */
      @java.lang.Override
      public java.lang.String getMemo() {
        return instance.getMemo();
      }
      /**
       * <pre>
       * Optional memo
       * </pre>
       *
       * <code>string memo = 5;</code>
       * @return The bytes for memo.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMemoBytes() {
        return instance.getMemoBytes();
      }
      /**
       * <pre>
       * Optional memo
       * </pre>
       *
       * <code>string memo = 5;</code>
       * @param value The memo to set.
       * @return This builder for chaining.
       */
      public Builder setMemo(
          java.lang.String value) {
        copyOnWrite();
        instance.setMemo(value);
        return this;
      }
      /**
       * <pre>
       * Optional memo
       * </pre>
       *
       * <code>string memo = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemo() {
        copyOnWrite();
        instance.clearMemo();
        return this;
      }
      /**
       * <pre>
       * Optional memo
       * </pre>
       *
       * <code>string memo = 5;</code>
       * @param value The bytes for memo to set.
       * @return This builder for chaining.
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMemoBytes(value);
        return this;
      }

      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 6;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 6;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
       */
      @java.lang.Override
      public boolean hasTradeOrder() {
        return instance.hasTradeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TradeOrder getTradeOrder() {
        return instance.getTradeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
       */
      public Builder setTradeOrder(wallet.core.jni.proto.Binance.TradeOrder value) {
        copyOnWrite();
        instance.setTradeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
       */
      public Builder setTradeOrder(
          wallet.core.jni.proto.Binance.TradeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setTradeOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
       */
      public Builder mergeTradeOrder(wallet.core.jni.proto.Binance.TradeOrder value) {
        copyOnWrite();
        instance.mergeTradeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TradeOrder trade_order = 8;</code>
       */
      public Builder clearTradeOrder() {
        copyOnWrite();
        instance.clearTradeOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
       */
      @java.lang.Override
      public boolean hasCancelTradeOrder() {
        return instance.hasCancelTradeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.CancelTradeOrder getCancelTradeOrder() {
        return instance.getCancelTradeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
       */
      public Builder setCancelTradeOrder(wallet.core.jni.proto.Binance.CancelTradeOrder value) {
        copyOnWrite();
        instance.setCancelTradeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
       */
      public Builder setCancelTradeOrder(
          wallet.core.jni.proto.Binance.CancelTradeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setCancelTradeOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
       */
      public Builder mergeCancelTradeOrder(wallet.core.jni.proto.Binance.CancelTradeOrder value) {
        copyOnWrite();
        instance.mergeCancelTradeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.CancelTradeOrder cancel_trade_order = 9;</code>
       */
      public Builder clearCancelTradeOrder() {
        copyOnWrite();
        instance.clearCancelTradeOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
       */
      @java.lang.Override
      public boolean hasSendOrder() {
        return instance.hasSendOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SendOrder getSendOrder() {
        return instance.getSendOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
       */
      public Builder setSendOrder(wallet.core.jni.proto.Binance.SendOrder value) {
        copyOnWrite();
        instance.setSendOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
       */
      public Builder setSendOrder(
          wallet.core.jni.proto.Binance.SendOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setSendOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
       */
      public Builder mergeSendOrder(wallet.core.jni.proto.Binance.SendOrder value) {
        copyOnWrite();
        instance.mergeSendOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SendOrder send_order = 10;</code>
       */
      public Builder clearSendOrder() {
        copyOnWrite();
        instance.clearSendOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
       */
      @java.lang.Override
      public boolean hasFreezeOrder() {
        return instance.hasFreezeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TokenFreezeOrder getFreezeOrder() {
        return instance.getFreezeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
       */
      public Builder setFreezeOrder(wallet.core.jni.proto.Binance.TokenFreezeOrder value) {
        copyOnWrite();
        instance.setFreezeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
       */
      public Builder setFreezeOrder(
          wallet.core.jni.proto.Binance.TokenFreezeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setFreezeOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
       */
      public Builder mergeFreezeOrder(wallet.core.jni.proto.Binance.TokenFreezeOrder value) {
        copyOnWrite();
        instance.mergeFreezeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenFreezeOrder freeze_order = 11;</code>
       */
      public Builder clearFreezeOrder() {
        copyOnWrite();
        instance.clearFreezeOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
       */
      @java.lang.Override
      public boolean hasUnfreezeOrder() {
        return instance.hasUnfreezeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TokenUnfreezeOrder getUnfreezeOrder() {
        return instance.getUnfreezeOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
       */
      public Builder setUnfreezeOrder(wallet.core.jni.proto.Binance.TokenUnfreezeOrder value) {
        copyOnWrite();
        instance.setUnfreezeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
       */
      public Builder setUnfreezeOrder(
          wallet.core.jni.proto.Binance.TokenUnfreezeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setUnfreezeOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
       */
      public Builder mergeUnfreezeOrder(wallet.core.jni.proto.Binance.TokenUnfreezeOrder value) {
        copyOnWrite();
        instance.mergeUnfreezeOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenUnfreezeOrder unfreeze_order = 12;</code>
       */
      public Builder clearUnfreezeOrder() {
        copyOnWrite();
        instance.clearUnfreezeOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
       */
      @java.lang.Override
      public boolean hasHtltOrder() {
        return instance.hasHtltOrder();
      }
      /**
       * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.HTLTOrder getHtltOrder() {
        return instance.getHtltOrder();
      }
      /**
       * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
       */
      public Builder setHtltOrder(wallet.core.jni.proto.Binance.HTLTOrder value) {
        copyOnWrite();
        instance.setHtltOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
       */
      public Builder setHtltOrder(
          wallet.core.jni.proto.Binance.HTLTOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setHtltOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
       */
      public Builder mergeHtltOrder(wallet.core.jni.proto.Binance.HTLTOrder value) {
        copyOnWrite();
        instance.mergeHtltOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.HTLTOrder htlt_order = 13;</code>
       */
      public Builder clearHtltOrder() {
        copyOnWrite();
        instance.clearHtltOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
       */
      @java.lang.Override
      public boolean hasDepositHTLTOrder() {
        return instance.hasDepositHTLTOrder();
      }
      /**
       * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.DepositHTLTOrder getDepositHTLTOrder() {
        return instance.getDepositHTLTOrder();
      }
      /**
       * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
       */
      public Builder setDepositHTLTOrder(wallet.core.jni.proto.Binance.DepositHTLTOrder value) {
        copyOnWrite();
        instance.setDepositHTLTOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
       */
      public Builder setDepositHTLTOrder(
          wallet.core.jni.proto.Binance.DepositHTLTOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setDepositHTLTOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
       */
      public Builder mergeDepositHTLTOrder(wallet.core.jni.proto.Binance.DepositHTLTOrder value) {
        copyOnWrite();
        instance.mergeDepositHTLTOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.DepositHTLTOrder depositHTLT_order = 14;</code>
       */
      public Builder clearDepositHTLTOrder() {
        copyOnWrite();
        instance.clearDepositHTLTOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
       */
      @java.lang.Override
      public boolean hasClaimHTLTOrder() {
        return instance.hasClaimHTLTOrder();
      }
      /**
       * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.ClaimHTLOrder getClaimHTLTOrder() {
        return instance.getClaimHTLTOrder();
      }
      /**
       * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
       */
      public Builder setClaimHTLTOrder(wallet.core.jni.proto.Binance.ClaimHTLOrder value) {
        copyOnWrite();
        instance.setClaimHTLTOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
       */
      public Builder setClaimHTLTOrder(
          wallet.core.jni.proto.Binance.ClaimHTLOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setClaimHTLTOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
       */
      public Builder mergeClaimHTLTOrder(wallet.core.jni.proto.Binance.ClaimHTLOrder value) {
        copyOnWrite();
        instance.mergeClaimHTLTOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.ClaimHTLOrder claimHTLT_order = 15;</code>
       */
      public Builder clearClaimHTLTOrder() {
        copyOnWrite();
        instance.clearClaimHTLTOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
       */
      @java.lang.Override
      public boolean hasRefundHTLTOrder() {
        return instance.hasRefundHTLTOrder();
      }
      /**
       * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.RefundHTLTOrder getRefundHTLTOrder() {
        return instance.getRefundHTLTOrder();
      }
      /**
       * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
       */
      public Builder setRefundHTLTOrder(wallet.core.jni.proto.Binance.RefundHTLTOrder value) {
        copyOnWrite();
        instance.setRefundHTLTOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
       */
      public Builder setRefundHTLTOrder(
          wallet.core.jni.proto.Binance.RefundHTLTOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setRefundHTLTOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
       */
      public Builder mergeRefundHTLTOrder(wallet.core.jni.proto.Binance.RefundHTLTOrder value) {
        copyOnWrite();
        instance.mergeRefundHTLTOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.RefundHTLTOrder refundHTLT_order = 16;</code>
       */
      public Builder clearRefundHTLTOrder() {
        copyOnWrite();
        instance.clearRefundHTLTOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
       */
      @java.lang.Override
      public boolean hasIssueOrder() {
        return instance.hasIssueOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TokenIssueOrder getIssueOrder() {
        return instance.getIssueOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
       */
      public Builder setIssueOrder(wallet.core.jni.proto.Binance.TokenIssueOrder value) {
        copyOnWrite();
        instance.setIssueOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
       */
      public Builder setIssueOrder(
          wallet.core.jni.proto.Binance.TokenIssueOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setIssueOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
       */
      public Builder mergeIssueOrder(wallet.core.jni.proto.Binance.TokenIssueOrder value) {
        copyOnWrite();
        instance.mergeIssueOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenIssueOrder issue_order = 17;</code>
       */
      public Builder clearIssueOrder() {
        copyOnWrite();
        instance.clearIssueOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
       */
      @java.lang.Override
      public boolean hasMintOrder() {
        return instance.hasMintOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TokenMintOrder getMintOrder() {
        return instance.getMintOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
       */
      public Builder setMintOrder(wallet.core.jni.proto.Binance.TokenMintOrder value) {
        copyOnWrite();
        instance.setMintOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
       */
      public Builder setMintOrder(
          wallet.core.jni.proto.Binance.TokenMintOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setMintOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
       */
      public Builder mergeMintOrder(wallet.core.jni.proto.Binance.TokenMintOrder value) {
        copyOnWrite();
        instance.mergeMintOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenMintOrder mint_order = 18;</code>
       */
      public Builder clearMintOrder() {
        copyOnWrite();
        instance.clearMintOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
       */
      @java.lang.Override
      public boolean hasBurnOrder() {
        return instance.hasBurnOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TokenBurnOrder getBurnOrder() {
        return instance.getBurnOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
       */
      public Builder setBurnOrder(wallet.core.jni.proto.Binance.TokenBurnOrder value) {
        copyOnWrite();
        instance.setBurnOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
       */
      public Builder setBurnOrder(
          wallet.core.jni.proto.Binance.TokenBurnOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setBurnOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
       */
      public Builder mergeBurnOrder(wallet.core.jni.proto.Binance.TokenBurnOrder value) {
        copyOnWrite();
        instance.mergeBurnOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TokenBurnOrder burn_order = 19;</code>
       */
      public Builder clearBurnOrder() {
        copyOnWrite();
        instance.clearBurnOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
       */
      @java.lang.Override
      public boolean hasTransferOutOrder() {
        return instance.hasTransferOutOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TransferOut getTransferOutOrder() {
        return instance.getTransferOutOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
       */
      public Builder setTransferOutOrder(wallet.core.jni.proto.Binance.TransferOut value) {
        copyOnWrite();
        instance.setTransferOutOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
       */
      public Builder setTransferOutOrder(
          wallet.core.jni.proto.Binance.TransferOut.Builder builderForValue) {
        copyOnWrite();
        instance.setTransferOutOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
       */
      public Builder mergeTransferOutOrder(wallet.core.jni.proto.Binance.TransferOut value) {
        copyOnWrite();
        instance.mergeTransferOutOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TransferOut transfer_out_order = 20;</code>
       */
      public Builder clearTransferOutOrder() {
        copyOnWrite();
        instance.clearTransferOutOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
       */
      @java.lang.Override
      public boolean hasSideDelegateOrder() {
        return instance.hasSideDelegateOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SideChainDelegate getSideDelegateOrder() {
        return instance.getSideDelegateOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
       */
      public Builder setSideDelegateOrder(wallet.core.jni.proto.Binance.SideChainDelegate value) {
        copyOnWrite();
        instance.setSideDelegateOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
       */
      public Builder setSideDelegateOrder(
          wallet.core.jni.proto.Binance.SideChainDelegate.Builder builderForValue) {
        copyOnWrite();
        instance.setSideDelegateOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
       */
      public Builder mergeSideDelegateOrder(wallet.core.jni.proto.Binance.SideChainDelegate value) {
        copyOnWrite();
        instance.mergeSideDelegateOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainDelegate side_delegate_order = 21;</code>
       */
      public Builder clearSideDelegateOrder() {
        copyOnWrite();
        instance.clearSideDelegateOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
       */
      @java.lang.Override
      public boolean hasSideRedelegateOrder() {
        return instance.hasSideRedelegateOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SideChainRedelegate getSideRedelegateOrder() {
        return instance.getSideRedelegateOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
       */
      public Builder setSideRedelegateOrder(wallet.core.jni.proto.Binance.SideChainRedelegate value) {
        copyOnWrite();
        instance.setSideRedelegateOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
       */
      public Builder setSideRedelegateOrder(
          wallet.core.jni.proto.Binance.SideChainRedelegate.Builder builderForValue) {
        copyOnWrite();
        instance.setSideRedelegateOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
       */
      public Builder mergeSideRedelegateOrder(wallet.core.jni.proto.Binance.SideChainRedelegate value) {
        copyOnWrite();
        instance.mergeSideRedelegateOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainRedelegate side_redelegate_order = 22;</code>
       */
      public Builder clearSideRedelegateOrder() {
        copyOnWrite();
        instance.clearSideRedelegateOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
       */
      @java.lang.Override
      public boolean hasSideUndelegateOrder() {
        return instance.hasSideUndelegateOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SideChainUndelegate getSideUndelegateOrder() {
        return instance.getSideUndelegateOrder();
      }
      /**
       * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
       */
      public Builder setSideUndelegateOrder(wallet.core.jni.proto.Binance.SideChainUndelegate value) {
        copyOnWrite();
        instance.setSideUndelegateOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
       */
      public Builder setSideUndelegateOrder(
          wallet.core.jni.proto.Binance.SideChainUndelegate.Builder builderForValue) {
        copyOnWrite();
        instance.setSideUndelegateOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
       */
      public Builder mergeSideUndelegateOrder(wallet.core.jni.proto.Binance.SideChainUndelegate value) {
        copyOnWrite();
        instance.mergeSideUndelegateOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SideChainUndelegate side_undelegate_order = 23;</code>
       */
      public Builder clearSideUndelegateOrder() {
        copyOnWrite();
        instance.clearSideUndelegateOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
       */
      @java.lang.Override
      public boolean hasTimeLockOrder() {
        return instance.hasTimeLockOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TimeLockOrder getTimeLockOrder() {
        return instance.getTimeLockOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
       */
      public Builder setTimeLockOrder(wallet.core.jni.proto.Binance.TimeLockOrder value) {
        copyOnWrite();
        instance.setTimeLockOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
       */
      public Builder setTimeLockOrder(
          wallet.core.jni.proto.Binance.TimeLockOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setTimeLockOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
       */
      public Builder mergeTimeLockOrder(wallet.core.jni.proto.Binance.TimeLockOrder value) {
        copyOnWrite();
        instance.mergeTimeLockOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeLockOrder time_lock_order = 24;</code>
       */
      public Builder clearTimeLockOrder() {
        copyOnWrite();
        instance.clearTimeLockOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
       */
      @java.lang.Override
      public boolean hasTimeRelockOrder() {
        return instance.hasTimeRelockOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TimeRelockOrder getTimeRelockOrder() {
        return instance.getTimeRelockOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
       */
      public Builder setTimeRelockOrder(wallet.core.jni.proto.Binance.TimeRelockOrder value) {
        copyOnWrite();
        instance.setTimeRelockOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
       */
      public Builder setTimeRelockOrder(
          wallet.core.jni.proto.Binance.TimeRelockOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setTimeRelockOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
       */
      public Builder mergeTimeRelockOrder(wallet.core.jni.proto.Binance.TimeRelockOrder value) {
        copyOnWrite();
        instance.mergeTimeRelockOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeRelockOrder time_relock_order = 25;</code>
       */
      public Builder clearTimeRelockOrder() {
        copyOnWrite();
        instance.clearTimeRelockOrder();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
       */
      @java.lang.Override
      public boolean hasTimeUnlockOrder() {
        return instance.hasTimeUnlockOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.TimeUnlockOrder getTimeUnlockOrder() {
        return instance.getTimeUnlockOrder();
      }
      /**
       * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
       */
      public Builder setTimeUnlockOrder(wallet.core.jni.proto.Binance.TimeUnlockOrder value) {
        copyOnWrite();
        instance.setTimeUnlockOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
       */
      public Builder setTimeUnlockOrder(
          wallet.core.jni.proto.Binance.TimeUnlockOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setTimeUnlockOrder(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
       */
      public Builder mergeTimeUnlockOrder(wallet.core.jni.proto.Binance.TimeUnlockOrder value) {
        copyOnWrite();
        instance.mergeTimeUnlockOrder(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.TimeUnlockOrder time_unlock_order = 26;</code>
       */
      public Builder clearTimeUnlockOrder() {
        copyOnWrite();
        instance.clearTimeUnlockOrder();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "orderOneof_",
              "orderOneofCase_",
              "chainId_",
              "accountNumber_",
              "sequence_",
              "source_",
              "memo_",
              "privateKey_",
              wallet.core.jni.proto.Binance.TradeOrder.class,
              wallet.core.jni.proto.Binance.CancelTradeOrder.class,
              wallet.core.jni.proto.Binance.SendOrder.class,
              wallet.core.jni.proto.Binance.TokenFreezeOrder.class,
              wallet.core.jni.proto.Binance.TokenUnfreezeOrder.class,
              wallet.core.jni.proto.Binance.HTLTOrder.class,
              wallet.core.jni.proto.Binance.DepositHTLTOrder.class,
              wallet.core.jni.proto.Binance.ClaimHTLOrder.class,
              wallet.core.jni.proto.Binance.RefundHTLTOrder.class,
              wallet.core.jni.proto.Binance.TokenIssueOrder.class,
              wallet.core.jni.proto.Binance.TokenMintOrder.class,
              wallet.core.jni.proto.Binance.TokenBurnOrder.class,
              wallet.core.jni.proto.Binance.TransferOut.class,
              wallet.core.jni.proto.Binance.SideChainDelegate.class,
              wallet.core.jni.proto.Binance.SideChainRedelegate.class,
              wallet.core.jni.proto.Binance.SideChainUndelegate.class,
              wallet.core.jni.proto.Binance.TimeLockOrder.class,
              wallet.core.jni.proto.Binance.TimeRelockOrder.class,
              wallet.core.jni.proto.Binance.TimeUnlockOrder.class,
            };
            java.lang.String info =
                "\u0000\u0019\u0001\u0000\u0001\u001a\u0019\u0000\u0000\u0000\u0001\u0208\u0002\u0002" +
                "\u0003\u0002\u0004\u0002\u0005\u0208\u0006\n\b<\u0000\t<\u0000\n<\u0000\u000b<\u0000" +
                "\f<\u0000\r<\u0000\u000e<\u0000\u000f<\u0000\u0010<\u0000\u0011<\u0000\u0012<\u0000" +
                "\u0013<\u0000\u0014<\u0000\u0015<\u0000\u0016<\u0000\u0017<\u0000\u0018<\u0000\u0019" +
                "<\u0000\u001a<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SigningInput)
    private static final wallet.core.jni.proto.Binance.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Binance.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();

    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     * @return The errorMessage.
     */
    java.lang.String getErrorMessage();
    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     * @return The bytes for errorMessage.
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Binance.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Binance.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      errorMessage_ = "";
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int ERROR_FIELD_NUMBER = 2;
    private int error_;
    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * OK (=0) or other codes in case of error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static final int ERROR_MESSAGE_FIELD_NUMBER = 3;
    private java.lang.String errorMessage_;
    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     * @return The errorMessage.
     */
    @java.lang.Override
    public java.lang.String getErrorMessage() {
      return errorMessage_;
    }
    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     * @return The bytes for errorMessage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(errorMessage_);
    }
    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     * @param value The errorMessage to set.
     */
    private void setErrorMessage(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      errorMessage_ = value;
    }
    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     */
    private void clearErrorMessage() {
      
      errorMessage_ = getDefaultInstance().getErrorMessage();
    }
    /**
     * <pre>
     * error description in case of error
     * </pre>
     *
     * <code>string error_message = 3;</code>
     * @param value The bytes for errorMessage to set.
     */
    private void setErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      errorMessage_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Binance.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Binance.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Binance.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Binance.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Binance.Proto.SigningOutput)
        wallet.core.jni.proto.Binance.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Binance.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * OK (=0) or other codes in case of error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * OK (=0) or other codes in case of error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * OK (=0) or other codes in case of error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * OK (=0) or other codes in case of error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * OK (=0) or other codes in case of error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      /**
       * <pre>
       * error description in case of error
       * </pre>
       *
       * <code>string error_message = 3;</code>
       * @return The errorMessage.
       */
      @java.lang.Override
      public java.lang.String getErrorMessage() {
        return instance.getErrorMessage();
      }
      /**
       * <pre>
       * error description in case of error
       * </pre>
       *
       * <code>string error_message = 3;</code>
       * @return The bytes for errorMessage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        return instance.getErrorMessageBytes();
      }
      /**
       * <pre>
       * error description in case of error
       * </pre>
       *
       * <code>string error_message = 3;</code>
       * @param value The errorMessage to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setErrorMessage(value);
        return this;
      }
      /**
       * <pre>
       * error description in case of error
       * </pre>
       *
       * <code>string error_message = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorMessage() {
        copyOnWrite();
        instance.clearErrorMessage();
        return this;
      }
      /**
       * <pre>
       * error description in case of error
       * </pre>
       *
       * <code>string error_message = 3;</code>
       * @param value The bytes for errorMessage to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setErrorMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Binance.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Binance.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "error_",
              "errorMessage_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\f\u0003" +
                "\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Binance.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Binance.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Binance.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Binance.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Binance.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Binance.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
