// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cardano.proto

package wallet.core.jni.proto;

public final class Cardano {
  private Cardano() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface OutPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.OutPoint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The transaction ID
     * </pre>
     *
     * <code>bytes tx_hash = 1;</code>
     * @return The txHash.
     */
    com.google.protobuf.ByteString getTxHash();

    /**
     * <pre>
     * The index of this output within the transaction
     * </pre>
     *
     * <code>uint64 output_index = 2;</code>
     * @return The outputIndex.
     */
    long getOutputIndex();
  }
  /**
   * <pre>
   * A transaction output that can be used as input
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.OutPoint}
   */
  public  static final class OutPoint extends
      com.google.protobuf.GeneratedMessageLite<
          OutPoint, OutPoint.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.OutPoint)
      OutPointOrBuilder {
    private OutPoint() {
      txHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int TX_HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString txHash_;
    /**
     * <pre>
     * The transaction ID
     * </pre>
     *
     * <code>bytes tx_hash = 1;</code>
     * @return The txHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTxHash() {
      return txHash_;
    }
    /**
     * <pre>
     * The transaction ID
     * </pre>
     *
     * <code>bytes tx_hash = 1;</code>
     * @param value The txHash to set.
     */
    private void setTxHash(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      txHash_ = value;
    }
    /**
     * <pre>
     * The transaction ID
     * </pre>
     *
     * <code>bytes tx_hash = 1;</code>
     */
    private void clearTxHash() {
      
      txHash_ = getDefaultInstance().getTxHash();
    }

    public static final int OUTPUT_INDEX_FIELD_NUMBER = 2;
    private long outputIndex_;
    /**
     * <pre>
     * The index of this output within the transaction
     * </pre>
     *
     * <code>uint64 output_index = 2;</code>
     * @return The outputIndex.
     */
    @java.lang.Override
    public long getOutputIndex() {
      return outputIndex_;
    }
    /**
     * <pre>
     * The index of this output within the transaction
     * </pre>
     *
     * <code>uint64 output_index = 2;</code>
     * @param value The outputIndex to set.
     */
    private void setOutputIndex(long value) {
      
      outputIndex_ = value;
    }
    /**
     * <pre>
     * The index of this output within the transaction
     * </pre>
     *
     * <code>uint64 output_index = 2;</code>
     */
    private void clearOutputIndex() {
      
      outputIndex_ = 0L;
    }

    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.OutPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.OutPoint prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A transaction output that can be used as input
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.OutPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.OutPoint, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.OutPoint)
        wallet.core.jni.proto.Cardano.OutPointOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.OutPoint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The transaction ID
       * </pre>
       *
       * <code>bytes tx_hash = 1;</code>
       * @return The txHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTxHash() {
        return instance.getTxHash();
      }
      /**
       * <pre>
       * The transaction ID
       * </pre>
       *
       * <code>bytes tx_hash = 1;</code>
       * @param value The txHash to set.
       * @return This builder for chaining.
       */
      public Builder setTxHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTxHash(value);
        return this;
      }
      /**
       * <pre>
       * The transaction ID
       * </pre>
       *
       * <code>bytes tx_hash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxHash() {
        copyOnWrite();
        instance.clearTxHash();
        return this;
      }

      /**
       * <pre>
       * The index of this output within the transaction
       * </pre>
       *
       * <code>uint64 output_index = 2;</code>
       * @return The outputIndex.
       */
      @java.lang.Override
      public long getOutputIndex() {
        return instance.getOutputIndex();
      }
      /**
       * <pre>
       * The index of this output within the transaction
       * </pre>
       *
       * <code>uint64 output_index = 2;</code>
       * @param value The outputIndex to set.
       * @return This builder for chaining.
       */
      public Builder setOutputIndex(long value) {
        copyOnWrite();
        instance.setOutputIndex(value);
        return this;
      }
      /**
       * <pre>
       * The index of this output within the transaction
       * </pre>
       *
       * <code>uint64 output_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputIndex() {
        copyOnWrite();
        instance.clearOutputIndex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.OutPoint)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.OutPoint();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "txHash_",
              "outputIndex_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\u0003" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.OutPoint> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.OutPoint.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.OutPoint>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.OutPoint)
    private static final wallet.core.jni.proto.Cardano.OutPoint DEFAULT_INSTANCE;
    static {
      OutPoint defaultInstance = new OutPoint();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        OutPoint.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.OutPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OutPoint> PARSER;

    public static com.google.protobuf.Parser<OutPoint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenAmountOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.TokenAmount)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     * @return The policyId.
     */
    java.lang.String getPolicyId();
    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     * @return The bytes for policyId.
     */
    com.google.protobuf.ByteString
        getPolicyIdBytes();

    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     * @return The assetName.
     */
    java.lang.String getAssetName();
    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     * @return The bytes for assetName.
     */
    com.google.protobuf.ByteString
        getAssetNameBytes();

    /**
     * <pre>
     * The amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes amount = 3;</code>
     * @return The amount.
     */
    com.google.protobuf.ByteString getAmount();
  }
  /**
   * <pre>
   * Represents a token and an amount. Token is identified by PolicyID and name.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.TokenAmount}
   */
  public  static final class TokenAmount extends
      com.google.protobuf.GeneratedMessageLite<
          TokenAmount, TokenAmount.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.TokenAmount)
      TokenAmountOrBuilder {
    private TokenAmount() {
      policyId_ = "";
      assetName_ = "";
      amount_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int POLICY_ID_FIELD_NUMBER = 1;
    private java.lang.String policyId_;
    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     * @return The policyId.
     */
    @java.lang.Override
    public java.lang.String getPolicyId() {
      return policyId_;
    }
    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     * @return The bytes for policyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPolicyIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(policyId_);
    }
    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     * @param value The policyId to set.
     */
    private void setPolicyId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      policyId_ = value;
    }
    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     */
    private void clearPolicyId() {
      
      policyId_ = getDefaultInstance().getPolicyId();
    }
    /**
     * <pre>
     * Policy ID of the token, as hex string (28x2 digits)
     * </pre>
     *
     * <code>string policy_id = 1;</code>
     * @param value The bytes for policyId to set.
     */
    private void setPolicyIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      policyId_ = value.toStringUtf8();
      
    }

    public static final int ASSET_NAME_FIELD_NUMBER = 2;
    private java.lang.String assetName_;
    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     * @return The assetName.
     */
    @java.lang.Override
    public java.lang.String getAssetName() {
      return assetName_;
    }
    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     * @return The bytes for assetName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAssetNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(assetName_);
    }
    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     * @param value The assetName to set.
     */
    private void setAssetName(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      assetName_ = value;
    }
    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     */
    private void clearAssetName() {
      
      assetName_ = getDefaultInstance().getAssetName();
    }
    /**
     * <pre>
     * The name of the asset (within the policy)
     * </pre>
     *
     * <code>string asset_name = 2;</code>
     * @param value The bytes for assetName to set.
     */
    private void setAssetNameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      assetName_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString amount_;
    /**
     * <pre>
     * The amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * The amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      amount_ = value;
    }
    /**
     * <pre>
     * The amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = getDefaultInstance().getAmount();
    }

    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TokenAmount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.TokenAmount prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Represents a token and an amount. Token is identified by PolicyID and name.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.TokenAmount}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.TokenAmount, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.TokenAmount)
        wallet.core.jni.proto.Cardano.TokenAmountOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.TokenAmount.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Policy ID of the token, as hex string (28x2 digits)
       * </pre>
       *
       * <code>string policy_id = 1;</code>
       * @return The policyId.
       */
      @java.lang.Override
      public java.lang.String getPolicyId() {
        return instance.getPolicyId();
      }
      /**
       * <pre>
       * Policy ID of the token, as hex string (28x2 digits)
       * </pre>
       *
       * <code>string policy_id = 1;</code>
       * @return The bytes for policyId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPolicyIdBytes() {
        return instance.getPolicyIdBytes();
      }
      /**
       * <pre>
       * Policy ID of the token, as hex string (28x2 digits)
       * </pre>
       *
       * <code>string policy_id = 1;</code>
       * @param value The policyId to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyId(
          java.lang.String value) {
        copyOnWrite();
        instance.setPolicyId(value);
        return this;
      }
      /**
       * <pre>
       * Policy ID of the token, as hex string (28x2 digits)
       * </pre>
       *
       * <code>string policy_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPolicyId() {
        copyOnWrite();
        instance.clearPolicyId();
        return this;
      }
      /**
       * <pre>
       * Policy ID of the token, as hex string (28x2 digits)
       * </pre>
       *
       * <code>string policy_id = 1;</code>
       * @param value The bytes for policyId to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPolicyIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The name of the asset (within the policy)
       * </pre>
       *
       * <code>string asset_name = 2;</code>
       * @return The assetName.
       */
      @java.lang.Override
      public java.lang.String getAssetName() {
        return instance.getAssetName();
      }
      /**
       * <pre>
       * The name of the asset (within the policy)
       * </pre>
       *
       * <code>string asset_name = 2;</code>
       * @return The bytes for assetName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAssetNameBytes() {
        return instance.getAssetNameBytes();
      }
      /**
       * <pre>
       * The name of the asset (within the policy)
       * </pre>
       *
       * <code>string asset_name = 2;</code>
       * @param value The assetName to set.
       * @return This builder for chaining.
       */
      public Builder setAssetName(
          java.lang.String value) {
        copyOnWrite();
        instance.setAssetName(value);
        return this;
      }
      /**
       * <pre>
       * The name of the asset (within the policy)
       * </pre>
       *
       * <code>string asset_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssetName() {
        copyOnWrite();
        instance.clearAssetName();
        return this;
      }
      /**
       * <pre>
       * The name of the asset (within the policy)
       * </pre>
       *
       * <code>string asset_name = 2;</code>
       * @param value The bytes for assetName to set.
       * @return This builder for chaining.
       */
      public Builder setAssetNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAssetNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * The amount (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * The amount (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * The amount (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.TokenAmount)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.TokenAmount();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "policyId_",
              "assetName_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.TokenAmount> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.TokenAmount.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.TokenAmount>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.TokenAmount)
    private static final wallet.core.jni.proto.Cardano.TokenAmount DEFAULT_INSTANCE;
    static {
      TokenAmount defaultInstance = new TokenAmount();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenAmount.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.TokenAmount getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenAmount> PARSER;

    public static com.google.protobuf.Parser<TokenAmount> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TxInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.TxInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     * @return Whether the outPoint field is set.
     */
    boolean hasOutPoint();
    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     * @return The outPoint.
     */
    wallet.core.jni.proto.Cardano.OutPoint getOutPoint();

    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * ADA amount in the UTXO
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> 
        getTokenAmountList();
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    wallet.core.jni.proto.Cardano.TokenAmount getTokenAmount(int index);
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    int getTokenAmountCount();
  }
  /**
   * <pre>
   * One input for a transaction
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.TxInput}
   */
  public  static final class TxInput extends
      com.google.protobuf.GeneratedMessageLite<
          TxInput, TxInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.TxInput)
      TxInputOrBuilder {
    private TxInput() {
      address_ = "";
      tokenAmount_ = emptyProtobufList();
    }
    public static final int OUT_POINT_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Cardano.OutPoint outPoint_;
    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     */
    @java.lang.Override
    public boolean hasOutPoint() {
      return outPoint_ != null;
    }
    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.OutPoint getOutPoint() {
      return outPoint_ == null ? wallet.core.jni.proto.Cardano.OutPoint.getDefaultInstance() : outPoint_;
    }
    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     */
    private void setOutPoint(wallet.core.jni.proto.Cardano.OutPoint value) {
      value.getClass();
  outPoint_ = value;
      
      }
    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeOutPoint(wallet.core.jni.proto.Cardano.OutPoint value) {
      value.getClass();
  if (outPoint_ != null &&
          outPoint_ != wallet.core.jni.proto.Cardano.OutPoint.getDefaultInstance()) {
        outPoint_ =
          wallet.core.jni.proto.Cardano.OutPoint.newBuilder(outPoint_).mergeFrom(value).buildPartial();
      } else {
        outPoint_ = value;
      }
      
    }
    /**
     * <pre>
     * The UTXO
     * </pre>
     *
     * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
     */
    private void clearOutPoint() {  outPoint_ = null;
      
    }

    public static final int ADDRESS_FIELD_NUMBER = 2;
    private java.lang.String address_;
    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      return address_;
    }
    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(address_);
    }
    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     * @param value The address to set.
     */
    private void setAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      address_ = value;
    }
    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    private void clearAddress() {
      
      address_ = getDefaultInstance().getAddress();
    }
    /**
     * <pre>
     * The owner address (string)
     * </pre>
     *
     * <code>string address = 2;</code>
     * @param value The bytes for address to set.
     */
    private void setAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      address_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * ADA amount in the UTXO
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * ADA amount in the UTXO
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * ADA amount in the UTXO
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int TOKEN_AMOUNT_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tokenAmount_;
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getTokenAmountList() {
      return tokenAmount_;
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TokenAmountOrBuilder> 
        getTokenAmountOrBuilderList() {
      return tokenAmount_;
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    @java.lang.Override
    public int getTokenAmountCount() {
      return tokenAmount_.size();
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenAmount getTokenAmount(int index) {
      return tokenAmount_.get(index);
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    public wallet.core.jni.proto.Cardano.TokenAmountOrBuilder getTokenAmountOrBuilder(
        int index) {
      return tokenAmount_.get(index);
    }
    private void ensureTokenAmountIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tmp = tokenAmount_;
      if (!tmp.isModifiable()) {
        tokenAmount_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    private void setTokenAmount(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenAmountIsMutable();
      tokenAmount_.set(index, value);
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    private void addTokenAmount(wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenAmountIsMutable();
      tokenAmount_.add(value);
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    private void addTokenAmount(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenAmountIsMutable();
      tokenAmount_.add(index, value);
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    private void addAllTokenAmount(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
      ensureTokenAmountIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, tokenAmount_);
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    private void clearTokenAmount() {
      tokenAmount_ = emptyProtobufList();
    }
    /**
     * <pre>
     * optional token amounts in the UTXO
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
     */
    private void removeTokenAmount(int index) {
      ensureTokenAmountIsMutable();
      tokenAmount_.remove(index);
    }

    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TxInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.TxInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * One input for a transaction
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.TxInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.TxInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.TxInput)
        wallet.core.jni.proto.Cardano.TxInputOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.TxInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The UTXO
       * </pre>
       *
       * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
       */
      @java.lang.Override
      public boolean hasOutPoint() {
        return instance.hasOutPoint();
      }
      /**
       * <pre>
       * The UTXO
       * </pre>
       *
       * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.OutPoint getOutPoint() {
        return instance.getOutPoint();
      }
      /**
       * <pre>
       * The UTXO
       * </pre>
       *
       * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(wallet.core.jni.proto.Cardano.OutPoint value) {
        copyOnWrite();
        instance.setOutPoint(value);
        return this;
        }
      /**
       * <pre>
       * The UTXO
       * </pre>
       *
       * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(
          wallet.core.jni.proto.Cardano.OutPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setOutPoint(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The UTXO
       * </pre>
       *
       * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
       */
      public Builder mergeOutPoint(wallet.core.jni.proto.Cardano.OutPoint value) {
        copyOnWrite();
        instance.mergeOutPoint(value);
        return this;
      }
      /**
       * <pre>
       * The UTXO
       * </pre>
       *
       * <code>.TW.Cardano.Proto.OutPoint out_point = 1;</code>
       */
      public Builder clearOutPoint() {  copyOnWrite();
        instance.clearOutPoint();
        return this;
      }

      /**
       * <pre>
       * The owner address (string)
       * </pre>
       *
       * <code>string address = 2;</code>
       * @return The address.
       */
      @java.lang.Override
      public java.lang.String getAddress() {
        return instance.getAddress();
      }
      /**
       * <pre>
       * The owner address (string)
       * </pre>
       *
       * <code>string address = 2;</code>
       * @return The bytes for address.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAddressBytes() {
        return instance.getAddressBytes();
      }
      /**
       * <pre>
       * The owner address (string)
       * </pre>
       *
       * <code>string address = 2;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setAddress(value);
        return this;
      }
      /**
       * <pre>
       * The owner address (string)
       * </pre>
       *
       * <code>string address = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        copyOnWrite();
        instance.clearAddress();
        return this;
      }
      /**
       * <pre>
       * The owner address (string)
       * </pre>
       *
       * <code>string address = 2;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * ADA amount in the UTXO
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * ADA amount in the UTXO
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * ADA amount in the UTXO
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getTokenAmountList() {
        return java.util.Collections.unmodifiableList(
            instance.getTokenAmountList());
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      @java.lang.Override
      public int getTokenAmountCount() {
        return instance.getTokenAmountCount();
      }/**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenAmount getTokenAmount(int index) {
        return instance.getTokenAmount(index);
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder setTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.setTokenAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder setTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.setTokenAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder addTokenAmount(wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addTokenAmount(value);
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder addTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addTokenAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder addTokenAmount(
          wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addTokenAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder addTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addTokenAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder addAllTokenAmount(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
        copyOnWrite();
        instance.addAllTokenAmount(values);
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder clearTokenAmount() {
        copyOnWrite();
        instance.clearTokenAmount();
        return this;
      }
      /**
       * <pre>
       * optional token amounts in the UTXO
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 4;</code>
       */
      public Builder removeTokenAmount(int index) {
        copyOnWrite();
        instance.removeTokenAmount(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.TxInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.TxInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "outPoint_",
              "address_",
              "amount_",
              "tokenAmount_",
              wallet.core.jni.proto.Cardano.TokenAmount.class,
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0001\u0000\u0001\t\u0002\u0208" +
                "\u0003\u0003\u0004\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.TxInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.TxInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.TxInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.TxInput)
    private static final wallet.core.jni.proto.Cardano.TxInput DEFAULT_INSTANCE;
    static {
      TxInput defaultInstance = new TxInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TxInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.TxInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TxInput> PARSER;

    public static com.google.protobuf.Parser<TxInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TxOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.TxOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * ADA amount
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> 
        getTokenAmountList();
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    wallet.core.jni.proto.Cardano.TokenAmount getTokenAmount(int index);
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    int getTokenAmountCount();
  }
  /**
   * <pre>
   * One output for a transaction
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.TxOutput}
   */
  public  static final class TxOutput extends
      com.google.protobuf.GeneratedMessageLite<
          TxOutput, TxOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.TxOutput)
      TxOutputOrBuilder {
    private TxOutput() {
      address_ = "";
      tokenAmount_ = emptyProtobufList();
    }
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String address_;
    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      return address_;
    }
    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(address_);
    }
    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     * @param value The address to set.
     */
    private void setAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      address_ = value;
    }
    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     */
    private void clearAddress() {
      
      address_ = getDefaultInstance().getAddress();
    }
    /**
     * <pre>
     * Destination address (string)
     * </pre>
     *
     * <code>string address = 1;</code>
     * @param value The bytes for address to set.
     */
    private void setAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      address_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <pre>
     * ADA amount
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * ADA amount
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * ADA amount
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int TOKEN_AMOUNT_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tokenAmount_;
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getTokenAmountList() {
      return tokenAmount_;
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TokenAmountOrBuilder> 
        getTokenAmountOrBuilderList() {
      return tokenAmount_;
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    @java.lang.Override
    public int getTokenAmountCount() {
      return tokenAmount_.size();
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenAmount getTokenAmount(int index) {
      return tokenAmount_.get(index);
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    public wallet.core.jni.proto.Cardano.TokenAmountOrBuilder getTokenAmountOrBuilder(
        int index) {
      return tokenAmount_.get(index);
    }
    private void ensureTokenAmountIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tmp = tokenAmount_;
      if (!tmp.isModifiable()) {
        tokenAmount_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    private void setTokenAmount(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenAmountIsMutable();
      tokenAmount_.set(index, value);
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    private void addTokenAmount(wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenAmountIsMutable();
      tokenAmount_.add(value);
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    private void addTokenAmount(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenAmountIsMutable();
      tokenAmount_.add(index, value);
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    private void addAllTokenAmount(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
      ensureTokenAmountIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, tokenAmount_);
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    private void clearTokenAmount() {
      tokenAmount_ = emptyProtobufList();
    }
    /**
     * <pre>
     * optional token amounts
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
     */
    private void removeTokenAmount(int index) {
      ensureTokenAmountIsMutable();
      tokenAmount_.remove(index);
    }

    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TxOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.TxOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * One output for a transaction
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.TxOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.TxOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.TxOutput)
        wallet.core.jni.proto.Cardano.TxOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.TxOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Destination address (string)
       * </pre>
       *
       * <code>string address = 1;</code>
       * @return The address.
       */
      @java.lang.Override
      public java.lang.String getAddress() {
        return instance.getAddress();
      }
      /**
       * <pre>
       * Destination address (string)
       * </pre>
       *
       * <code>string address = 1;</code>
       * @return The bytes for address.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAddressBytes() {
        return instance.getAddressBytes();
      }
      /**
       * <pre>
       * Destination address (string)
       * </pre>
       *
       * <code>string address = 1;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setAddress(value);
        return this;
      }
      /**
       * <pre>
       * Destination address (string)
       * </pre>
       *
       * <code>string address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        copyOnWrite();
        instance.clearAddress();
        return this;
      }
      /**
       * <pre>
       * Destination address (string)
       * </pre>
       *
       * <code>string address = 1;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * ADA amount
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * ADA amount
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * ADA amount
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getTokenAmountList() {
        return java.util.Collections.unmodifiableList(
            instance.getTokenAmountList());
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      @java.lang.Override
      public int getTokenAmountCount() {
        return instance.getTokenAmountCount();
      }/**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenAmount getTokenAmount(int index) {
        return instance.getTokenAmount(index);
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder setTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.setTokenAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder setTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.setTokenAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder addTokenAmount(wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addTokenAmount(value);
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder addTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addTokenAmount(index, value);
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder addTokenAmount(
          wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addTokenAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder addTokenAmount(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addTokenAmount(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder addAllTokenAmount(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
        copyOnWrite();
        instance.addAllTokenAmount(values);
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder clearTokenAmount() {
        copyOnWrite();
        instance.clearTokenAmount();
        return this;
      }
      /**
       * <pre>
       * optional token amounts
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount token_amount = 3;</code>
       */
      public Builder removeTokenAmount(int index) {
        copyOnWrite();
        instance.removeTokenAmount(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.TxOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.TxOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "address_",
              "amount_",
              "tokenAmount_",
              wallet.core.jni.proto.Cardano.TokenAmount.class,
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0208\u0002\u0003" +
                "\u0003\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.TxOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.TxOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.TxOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.TxOutput)
    private static final wallet.core.jni.proto.Cardano.TxOutput DEFAULT_INSTANCE;
    static {
      TxOutput defaultInstance = new TxOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TxOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.TxOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TxOutput> PARSER;

    public static com.google.protobuf.Parser<TxOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TokenBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.TokenBundle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> 
        getTokenList();
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    wallet.core.jni.proto.Cardano.TokenAmount getToken(int index);
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    int getTokenCount();
  }
  /**
   * <pre>
   * Collection of tokens with amount
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.TokenBundle}
   */
  public  static final class TokenBundle extends
      com.google.protobuf.GeneratedMessageLite<
          TokenBundle, TokenBundle.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.TokenBundle)
      TokenBundleOrBuilder {
    private TokenBundle() {
      token_ = emptyProtobufList();
    }
    public static final int TOKEN_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> token_;
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getTokenList() {
      return token_;
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TokenAmountOrBuilder> 
        getTokenOrBuilderList() {
      return token_;
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    @java.lang.Override
    public int getTokenCount() {
      return token_.size();
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenAmount getToken(int index) {
      return token_.get(index);
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    public wallet.core.jni.proto.Cardano.TokenAmountOrBuilder getTokenOrBuilder(
        int index) {
      return token_.get(index);
    }
    private void ensureTokenIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tmp = token_;
      if (!tmp.isModifiable()) {
        token_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    private void setToken(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenIsMutable();
      token_.set(index, value);
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    private void addToken(wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenIsMutable();
      token_.add(value);
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    private void addToken(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureTokenIsMutable();
      token_.add(index, value);
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    private void addAllToken(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
      ensureTokenIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, token_);
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    private void clearToken() {
      token_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
     */
    private void removeToken(int index) {
      ensureTokenIsMutable();
      token_.remove(index);
    }

    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TokenBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.TokenBundle prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Collection of tokens with amount
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.TokenBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.TokenBundle, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.TokenBundle)
        wallet.core.jni.proto.Cardano.TokenBundleOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.TokenBundle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getTokenList() {
        return java.util.Collections.unmodifiableList(
            instance.getTokenList());
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      @java.lang.Override
      public int getTokenCount() {
        return instance.getTokenCount();
      }/**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenAmount getToken(int index) {
        return instance.getToken(index);
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder setToken(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.setToken(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder setToken(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.setToken(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder addToken(wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addToken(value);
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder addToken(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addToken(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder addToken(
          wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addToken(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder addToken(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addToken(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder addAllToken(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
        copyOnWrite();
        instance.addAllToken(values);
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder clearToken() {
        copyOnWrite();
        instance.clearToken();
        return this;
      }
      /**
       * <code>repeated .TW.Cardano.Proto.TokenAmount token = 1;</code>
       */
      public Builder removeToken(int index) {
        copyOnWrite();
        instance.removeToken(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.TokenBundle)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.TokenBundle();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "token_",
              wallet.core.jni.proto.Cardano.TokenAmount.class,
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.TokenBundle> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.TokenBundle.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.TokenBundle>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.TokenBundle)
    private static final wallet.core.jni.proto.Cardano.TokenBundle DEFAULT_INSTANCE;
    static {
      TokenBundle defaultInstance = new TokenBundle();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenBundle.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.TokenBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenBundle> PARSER;

    public static com.google.protobuf.Parser<TokenBundle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.Transfer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     * @return The toAddress.
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     * @return The bytes for toAddress.
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     * @return The changeAddress.
     */
    java.lang.String getChangeAddress();
    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     * @return The bytes for changeAddress.
     */
    com.google.protobuf.ByteString
        getChangeAddressBytes();

    /**
     * <pre>
     * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
     * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     * @return Whether the tokenAmount field is set.
     */
    boolean hasTokenAmount();
    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     * @return The tokenAmount.
     */
    wallet.core.jni.proto.Cardano.TokenBundle getTokenAmount();

    /**
     * <pre>
     * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     * @return The useMaxAmount.
     */
    boolean getUseMaxAmount();

    /**
     * <pre>
     * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
     * Use it with care, it may result in underfunded or wasteful fee.
     * </pre>
     *
     * <code>uint64 force_fee = 6;</code>
     * @return The forceFee.
     */
    long getForceFee();
  }
  /**
   * <pre>
   * Message for simple Transfer tx
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.Transfer}
   */
  public  static final class Transfer extends
      com.google.protobuf.GeneratedMessageLite<
          Transfer, Transfer.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.Transfer)
      TransferOrBuilder {
    private Transfer() {
      toAddress_ = "";
      changeAddress_ = "";
    }
    public static final int TO_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String toAddress_;
    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     * @return The toAddress.
     */
    @java.lang.Override
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     * @return The bytes for toAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     * @param value The toAddress to set.
     */
    private void setToAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAddress_ = value;
    }
    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <pre>
     * Destination address as string
     * </pre>
     *
     * <code>string to_address = 1;</code>
     * @param value The bytes for toAddress to set.
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAddress_ = value.toStringUtf8();
      
    }

    public static final int CHANGE_ADDRESS_FIELD_NUMBER = 2;
    private java.lang.String changeAddress_;
    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     * @return The changeAddress.
     */
    @java.lang.Override
    public java.lang.String getChangeAddress() {
      return changeAddress_;
    }
    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     * @return The bytes for changeAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChangeAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(changeAddress_);
    }
    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     * @param value The changeAddress to set.
     */
    private void setChangeAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      changeAddress_ = value;
    }
    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     */
    private void clearChangeAddress() {
      
      changeAddress_ = getDefaultInstance().getChangeAddress();
    }
    /**
     * <pre>
     * Change address
     * </pre>
     *
     * <code>string change_address = 2;</code>
     * @param value The bytes for changeAddress to set.
     */
    private void setChangeAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      changeAddress_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
     * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
     * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
     * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int TOKEN_AMOUNT_FIELD_NUMBER = 4;
    private wallet.core.jni.proto.Cardano.TokenBundle tokenAmount_;
    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     */
    @java.lang.Override
    public boolean hasTokenAmount() {
      return tokenAmount_ != null;
    }
    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenBundle getTokenAmount() {
      return tokenAmount_ == null ? wallet.core.jni.proto.Cardano.TokenBundle.getDefaultInstance() : tokenAmount_;
    }
    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     */
    private void setTokenAmount(wallet.core.jni.proto.Cardano.TokenBundle value) {
      value.getClass();
  tokenAmount_ = value;
      
      }
    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTokenAmount(wallet.core.jni.proto.Cardano.TokenBundle value) {
      value.getClass();
  if (tokenAmount_ != null &&
          tokenAmount_ != wallet.core.jni.proto.Cardano.TokenBundle.getDefaultInstance()) {
        tokenAmount_ =
          wallet.core.jni.proto.Cardano.TokenBundle.newBuilder(tokenAmount_).mergeFrom(value).buildPartial();
      } else {
        tokenAmount_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional token(s) to be transferred
     * Currently only one token type to be transferred per transaction is supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
     */
    private void clearTokenAmount() {  tokenAmount_ = null;
      
    }

    public static final int USE_MAX_AMOUNT_FIELD_NUMBER = 5;
    private boolean useMaxAmount_;
    /**
     * <pre>
     * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     * @return The useMaxAmount.
     */
    @java.lang.Override
    public boolean getUseMaxAmount() {
      return useMaxAmount_;
    }
    /**
     * <pre>
     * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     * @param value The useMaxAmount to set.
     */
    private void setUseMaxAmount(boolean value) {
      
      useMaxAmount_ = value;
    }
    /**
     * <pre>
     * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     */
    private void clearUseMaxAmount() {
      
      useMaxAmount_ = false;
    }

    public static final int FORCE_FEE_FIELD_NUMBER = 6;
    private long forceFee_;
    /**
     * <pre>
     * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
     * Use it with care, it may result in underfunded or wasteful fee.
     * </pre>
     *
     * <code>uint64 force_fee = 6;</code>
     * @return The forceFee.
     */
    @java.lang.Override
    public long getForceFee() {
      return forceFee_;
    }
    /**
     * <pre>
     * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
     * Use it with care, it may result in underfunded or wasteful fee.
     * </pre>
     *
     * <code>uint64 force_fee = 6;</code>
     * @param value The forceFee to set.
     */
    private void setForceFee(long value) {
      
      forceFee_ = value;
    }
    /**
     * <pre>
     * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
     * Use it with care, it may result in underfunded or wasteful fee.
     * </pre>
     *
     * <code>uint64 force_fee = 6;</code>
     */
    private void clearForceFee() {
      
      forceFee_ = 0L;
    }

    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Transfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.Transfer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Message for simple Transfer tx
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.Transfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.Transfer, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.Transfer)
        wallet.core.jni.proto.Cardano.TransferOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.Transfer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Destination address as string
       * </pre>
       *
       * <code>string to_address = 1;</code>
       * @return The toAddress.
       */
      @java.lang.Override
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <pre>
       * Destination address as string
       * </pre>
       *
       * <code>string to_address = 1;</code>
       * @return The bytes for toAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <pre>
       * Destination address as string
       * </pre>
       *
       * <code>string to_address = 1;</code>
       * @param value The toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <pre>
       * Destination address as string
       * </pre>
       *
       * <code>string to_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <pre>
       * Destination address as string
       * </pre>
       *
       * <code>string to_address = 1;</code>
       * @param value The bytes for toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Change address
       * </pre>
       *
       * <code>string change_address = 2;</code>
       * @return The changeAddress.
       */
      @java.lang.Override
      public java.lang.String getChangeAddress() {
        return instance.getChangeAddress();
      }
      /**
       * <pre>
       * Change address
       * </pre>
       *
       * <code>string change_address = 2;</code>
       * @return The bytes for changeAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChangeAddressBytes() {
        return instance.getChangeAddressBytes();
      }
      /**
       * <pre>
       * Change address
       * </pre>
       *
       * <code>string change_address = 2;</code>
       * @param value The changeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setChangeAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setChangeAddress(value);
        return this;
      }
      /**
       * <pre>
       * Change address
       * </pre>
       *
       * <code>string change_address = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeAddress() {
        copyOnWrite();
        instance.clearChangeAddress();
        return this;
      }
      /**
       * <pre>
       * Change address
       * </pre>
       *
       * <code>string change_address = 2;</code>
       * @param value The bytes for changeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChangeAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
       * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
       * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Requested ADA amount to be transferred. Output can be different only in use_max_amount case.
       * Note that Cardano has a minimum amount per UTXO, see TWCardanoMinAdaAmount.
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * Optional token(s) to be transferred
       * Currently only one token type to be transferred per transaction is supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
       */
      @java.lang.Override
      public boolean hasTokenAmount() {
        return instance.hasTokenAmount();
      }
      /**
       * <pre>
       * Optional token(s) to be transferred
       * Currently only one token type to be transferred per transaction is supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenBundle getTokenAmount() {
        return instance.getTokenAmount();
      }
      /**
       * <pre>
       * Optional token(s) to be transferred
       * Currently only one token type to be transferred per transaction is supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
       */
      public Builder setTokenAmount(wallet.core.jni.proto.Cardano.TokenBundle value) {
        copyOnWrite();
        instance.setTokenAmount(value);
        return this;
        }
      /**
       * <pre>
       * Optional token(s) to be transferred
       * Currently only one token type to be transferred per transaction is supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
       */
      public Builder setTokenAmount(
          wallet.core.jni.proto.Cardano.TokenBundle.Builder builderForValue) {
        copyOnWrite();
        instance.setTokenAmount(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional token(s) to be transferred
       * Currently only one token type to be transferred per transaction is supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
       */
      public Builder mergeTokenAmount(wallet.core.jni.proto.Cardano.TokenBundle value) {
        copyOnWrite();
        instance.mergeTokenAmount(value);
        return this;
      }
      /**
       * <pre>
       * Optional token(s) to be transferred
       * Currently only one token type to be transferred per transaction is supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TokenBundle token_amount = 4;</code>
       */
      public Builder clearTokenAmount() {  copyOnWrite();
        instance.clearTokenAmount();
        return this;
      }

      /**
       * <pre>
       * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
       * </pre>
       *
       * <code>bool use_max_amount = 5;</code>
       * @return The useMaxAmount.
       */
      @java.lang.Override
      public boolean getUseMaxAmount() {
        return instance.getUseMaxAmount();
      }
      /**
       * <pre>
       * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
       * </pre>
       *
       * <code>bool use_max_amount = 5;</code>
       * @param value The useMaxAmount to set.
       * @return This builder for chaining.
       */
      public Builder setUseMaxAmount(boolean value) {
        copyOnWrite();
        instance.setUseMaxAmount(value);
        return this;
      }
      /**
       * <pre>
       * Request max amount option. If set, tx will send all possible amounts from all inputs, including all tokens; there will be no change; requested amount and token_amount is disregarded in this case.
       * </pre>
       *
       * <code>bool use_max_amount = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseMaxAmount() {
        copyOnWrite();
        instance.clearUseMaxAmount();
        return this;
      }

      /**
       * <pre>
       * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
       * Use it with care, it may result in underfunded or wasteful fee.
       * </pre>
       *
       * <code>uint64 force_fee = 6;</code>
       * @return The forceFee.
       */
      @java.lang.Override
      public long getForceFee() {
        return instance.getForceFee();
      }
      /**
       * <pre>
       * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
       * Use it with care, it may result in underfunded or wasteful fee.
       * </pre>
       *
       * <code>uint64 force_fee = 6;</code>
       * @param value The forceFee to set.
       * @return This builder for chaining.
       */
      public Builder setForceFee(long value) {
        copyOnWrite();
        instance.setForceFee(value);
        return this;
      }
      /**
       * <pre>
       * Optional fee overriding. If left to 0, optimal fee will be calculated. If set, exactly this value will be used as fee.
       * Use it with care, it may result in underfunded or wasteful fee.
       * </pre>
       *
       * <code>uint64 force_fee = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearForceFee() {
        copyOnWrite();
        instance.clearForceFee();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.Transfer)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.Transfer();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "toAddress_",
              "changeAddress_",
              "amount_",
              "tokenAmount_",
              "useMaxAmount_",
              "forceFee_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\u0003\u0004\t\u0005\u0007\u0006\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.Transfer> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.Transfer.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.Transfer>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.Transfer)
    private static final wallet.core.jni.proto.Cardano.Transfer DEFAULT_INSTANCE;
    static {
      Transfer defaultInstance = new Transfer();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Transfer.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.Transfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Transfer> PARSER;

    public static com.google.protobuf.Parser<Transfer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RegisterStakingKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.RegisterStakingKey)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    java.lang.String getStakingAddress();
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    com.google.protobuf.ByteString
        getStakingAddressBytes();

    /**
     * <pre>
     * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 2;</code>
     * @return The depositAmount.
     */
    long getDepositAmount();
  }
  /**
   * <pre>
   * Register a staking key for the account, prerequisite for Staking.
   * Note: staking messages are typically used with a 1-output-to-self transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.RegisterStakingKey}
   */
  public  static final class RegisterStakingKey extends
      com.google.protobuf.GeneratedMessageLite<
          RegisterStakingKey, RegisterStakingKey.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.RegisterStakingKey)
      RegisterStakingKeyOrBuilder {
    private RegisterStakingKey() {
      stakingAddress_ = "";
    }
    public static final int STAKING_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String stakingAddress_;
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    @java.lang.Override
    public java.lang.String getStakingAddress() {
      return stakingAddress_;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStakingAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stakingAddress_);
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The stakingAddress to set.
     */
    private void setStakingAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      stakingAddress_ = value;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     */
    private void clearStakingAddress() {
      
      stakingAddress_ = getDefaultInstance().getStakingAddress();
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The bytes for stakingAddress to set.
     */
    private void setStakingAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      stakingAddress_ = value.toStringUtf8();
      
    }

    public static final int DEPOSIT_AMOUNT_FIELD_NUMBER = 2;
    private long depositAmount_;
    /**
     * <pre>
     * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 2;</code>
     * @return The depositAmount.
     */
    @java.lang.Override
    public long getDepositAmount() {
      return depositAmount_;
    }
    /**
     * <pre>
     * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 2;</code>
     * @param value The depositAmount to set.
     */
    private void setDepositAmount(long value) {
      
      depositAmount_ = value;
    }
    /**
     * <pre>
     * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 2;</code>
     */
    private void clearDepositAmount() {
      
      depositAmount_ = 0L;
    }

    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.RegisterStakingKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.RegisterStakingKey prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Register a staking key for the account, prerequisite for Staking.
     * Note: staking messages are typically used with a 1-output-to-self transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.RegisterStakingKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.RegisterStakingKey, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.RegisterStakingKey)
        wallet.core.jni.proto.Cardano.RegisterStakingKeyOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.RegisterStakingKey.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The stakingAddress.
       */
      @java.lang.Override
      public java.lang.String getStakingAddress() {
        return instance.getStakingAddress();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The bytes for stakingAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStakingAddressBytes() {
        return instance.getStakingAddressBytes();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setStakingAddress(value);
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStakingAddress() {
        copyOnWrite();
        instance.clearStakingAddress();
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The bytes for stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStakingAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
       * </pre>
       *
       * <code>uint64 deposit_amount = 2;</code>
       * @return The depositAmount.
       */
      @java.lang.Override
      public long getDepositAmount() {
        return instance.getDepositAmount();
      }
      /**
       * <pre>
       * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
       * </pre>
       *
       * <code>uint64 deposit_amount = 2;</code>
       * @param value The depositAmount to set.
       * @return This builder for chaining.
       */
      public Builder setDepositAmount(long value) {
        copyOnWrite();
        instance.setDepositAmount(value);
        return this;
      }
      /**
       * <pre>
       * Amount deposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also Delegate.deposit_amount.
       * </pre>
       *
       * <code>uint64 deposit_amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDepositAmount() {
        copyOnWrite();
        instance.clearDepositAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.RegisterStakingKey)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.RegisterStakingKey();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "stakingAddress_",
              "depositAmount_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0003" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.RegisterStakingKey> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.RegisterStakingKey.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.RegisterStakingKey>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.RegisterStakingKey)
    private static final wallet.core.jni.proto.Cardano.RegisterStakingKey DEFAULT_INSTANCE;
    static {
      RegisterStakingKey defaultInstance = new RegisterStakingKey();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RegisterStakingKey.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.RegisterStakingKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RegisterStakingKey> PARSER;

    public static com.google.protobuf.Parser<RegisterStakingKey> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DeregisterStakingKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.DeregisterStakingKey)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    java.lang.String getStakingAddress();
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    com.google.protobuf.ByteString
        getStakingAddressBytes();

    /**
     * <pre>
     * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 undeposit_amount = 2;</code>
     * @return The undepositAmount.
     */
    long getUndepositAmount();
  }
  /**
   * <pre>
   * Deregister staking key. can be done when staking is stopped completely. The Staking deposit is returned at this time.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.DeregisterStakingKey}
   */
  public  static final class DeregisterStakingKey extends
      com.google.protobuf.GeneratedMessageLite<
          DeregisterStakingKey, DeregisterStakingKey.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.DeregisterStakingKey)
      DeregisterStakingKeyOrBuilder {
    private DeregisterStakingKey() {
      stakingAddress_ = "";
    }
    public static final int STAKING_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String stakingAddress_;
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    @java.lang.Override
    public java.lang.String getStakingAddress() {
      return stakingAddress_;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStakingAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stakingAddress_);
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The stakingAddress to set.
     */
    private void setStakingAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      stakingAddress_ = value;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     */
    private void clearStakingAddress() {
      
      stakingAddress_ = getDefaultInstance().getStakingAddress();
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The bytes for stakingAddress to set.
     */
    private void setStakingAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      stakingAddress_ = value.toStringUtf8();
      
    }

    public static final int UNDEPOSIT_AMOUNT_FIELD_NUMBER = 2;
    private long undepositAmount_;
    /**
     * <pre>
     * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 undeposit_amount = 2;</code>
     * @return The undepositAmount.
     */
    @java.lang.Override
    public long getUndepositAmount() {
      return undepositAmount_;
    }
    /**
     * <pre>
     * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 undeposit_amount = 2;</code>
     * @param value The undepositAmount to set.
     */
    private void setUndepositAmount(long value) {
      
      undepositAmount_ = value;
    }
    /**
     * <pre>
     * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 undeposit_amount = 2;</code>
     */
    private void clearUndepositAmount() {
      
      undepositAmount_ = 0L;
    }

    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.DeregisterStakingKey prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Deregister staking key. can be done when staking is stopped completely. The Staking deposit is returned at this time.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.DeregisterStakingKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.DeregisterStakingKey, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.DeregisterStakingKey)
        wallet.core.jni.proto.Cardano.DeregisterStakingKeyOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.DeregisterStakingKey.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The stakingAddress.
       */
      @java.lang.Override
      public java.lang.String getStakingAddress() {
        return instance.getStakingAddress();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The bytes for stakingAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStakingAddressBytes() {
        return instance.getStakingAddressBytes();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setStakingAddress(value);
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStakingAddress() {
        copyOnWrite();
        instance.clearStakingAddress();
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The bytes for stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStakingAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
       * </pre>
       *
       * <code>uint64 undeposit_amount = 2;</code>
       * @return The undepositAmount.
       */
      @java.lang.Override
      public long getUndepositAmount() {
        return instance.getUndepositAmount();
      }
      /**
       * <pre>
       * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
       * </pre>
       *
       * <code>uint64 undeposit_amount = 2;</code>
       * @param value The undepositAmount to set.
       * @return This builder for chaining.
       */
      public Builder setUndepositAmount(long value) {
        copyOnWrite();
        instance.setUndepositAmount(value);
        return this;
      }
      /**
       * <pre>
       * Amount undeposited in this TX. Should be 2 ADA (2000000). If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
       * </pre>
       *
       * <code>uint64 undeposit_amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUndepositAmount() {
        copyOnWrite();
        instance.clearUndepositAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.DeregisterStakingKey)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.DeregisterStakingKey();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "stakingAddress_",
              "undepositAmount_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0003" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.DeregisterStakingKey> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.DeregisterStakingKey.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.DeregisterStakingKey>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.DeregisterStakingKey)
    private static final wallet.core.jni.proto.Cardano.DeregisterStakingKey DEFAULT_INSTANCE;
    static {
      DeregisterStakingKey defaultInstance = new DeregisterStakingKey();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DeregisterStakingKey.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.DeregisterStakingKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeregisterStakingKey> PARSER;

    public static com.google.protobuf.Parser<DeregisterStakingKey> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DelegateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.Delegate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    java.lang.String getStakingAddress();
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    com.google.protobuf.ByteString
        getStakingAddressBytes();

    /**
     * <pre>
     * PoolID of staking pool
     * </pre>
     *
     * <code>bytes pool_id = 2;</code>
     * @return The poolId.
     */
    com.google.protobuf.ByteString getPoolId();

    /**
     * <pre>
     * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 3;</code>
     * @return The depositAmount.
     */
    long getDepositAmount();
  }
  /**
   * <pre>
   * Delegate funds in this account to a specified staking pool.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.Delegate}
   */
  public  static final class Delegate extends
      com.google.protobuf.GeneratedMessageLite<
          Delegate, Delegate.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.Delegate)
      DelegateOrBuilder {
    private Delegate() {
      stakingAddress_ = "";
      poolId_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int STAKING_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String stakingAddress_;
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    @java.lang.Override
    public java.lang.String getStakingAddress() {
      return stakingAddress_;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStakingAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stakingAddress_);
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The stakingAddress to set.
     */
    private void setStakingAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      stakingAddress_ = value;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     */
    private void clearStakingAddress() {
      
      stakingAddress_ = getDefaultInstance().getStakingAddress();
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The bytes for stakingAddress to set.
     */
    private void setStakingAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      stakingAddress_ = value.toStringUtf8();
      
    }

    public static final int POOL_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString poolId_;
    /**
     * <pre>
     * PoolID of staking pool
     * </pre>
     *
     * <code>bytes pool_id = 2;</code>
     * @return The poolId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPoolId() {
      return poolId_;
    }
    /**
     * <pre>
     * PoolID of staking pool
     * </pre>
     *
     * <code>bytes pool_id = 2;</code>
     * @param value The poolId to set.
     */
    private void setPoolId(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      poolId_ = value;
    }
    /**
     * <pre>
     * PoolID of staking pool
     * </pre>
     *
     * <code>bytes pool_id = 2;</code>
     */
    private void clearPoolId() {
      
      poolId_ = getDefaultInstance().getPoolId();
    }

    public static final int DEPOSIT_AMOUNT_FIELD_NUMBER = 3;
    private long depositAmount_;
    /**
     * <pre>
     * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 3;</code>
     * @return The depositAmount.
     */
    @java.lang.Override
    public long getDepositAmount() {
      return depositAmount_;
    }
    /**
     * <pre>
     * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 3;</code>
     * @param value The depositAmount to set.
     */
    private void setDepositAmount(long value) {
      
      depositAmount_ = value;
    }
    /**
     * <pre>
     * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
     * </pre>
     *
     * <code>uint64 deposit_amount = 3;</code>
     */
    private void clearDepositAmount() {
      
      depositAmount_ = 0L;
    }

    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Delegate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.Delegate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Delegate funds in this account to a specified staking pool.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.Delegate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.Delegate, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.Delegate)
        wallet.core.jni.proto.Cardano.DelegateOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.Delegate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The stakingAddress.
       */
      @java.lang.Override
      public java.lang.String getStakingAddress() {
        return instance.getStakingAddress();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The bytes for stakingAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStakingAddressBytes() {
        return instance.getStakingAddressBytes();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setStakingAddress(value);
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStakingAddress() {
        copyOnWrite();
        instance.clearStakingAddress();
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The bytes for stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStakingAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * PoolID of staking pool
       * </pre>
       *
       * <code>bytes pool_id = 2;</code>
       * @return The poolId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPoolId() {
        return instance.getPoolId();
      }
      /**
       * <pre>
       * PoolID of staking pool
       * </pre>
       *
       * <code>bytes pool_id = 2;</code>
       * @param value The poolId to set.
       * @return This builder for chaining.
       */
      public Builder setPoolId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPoolId(value);
        return this;
      }
      /**
       * <pre>
       * PoolID of staking pool
       * </pre>
       *
       * <code>bytes pool_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPoolId() {
        copyOnWrite();
        instance.clearPoolId();
        return this;
      }

      /**
       * <pre>
       * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
       * </pre>
       *
       * <code>uint64 deposit_amount = 3;</code>
       * @return The depositAmount.
       */
      @java.lang.Override
      public long getDepositAmount() {
        return instance.getDepositAmount();
      }
      /**
       * <pre>
       * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
       * </pre>
       *
       * <code>uint64 deposit_amount = 3;</code>
       * @param value The depositAmount to set.
       * @return This builder for chaining.
       */
      public Builder setDepositAmount(long value) {
        copyOnWrite();
        instance.setDepositAmount(value);
        return this;
      }
      /**
       * <pre>
       * Amount deposited in this TX. Should be 0. If not set correctly, TX will be rejected. See also RegisterStakingKey.deposit_amount.
       * </pre>
       *
       * <code>uint64 deposit_amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDepositAmount() {
        copyOnWrite();
        instance.clearDepositAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.Delegate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.Delegate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "stakingAddress_",
              "poolId_",
              "depositAmount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\n" +
                "\u0003\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.Delegate> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.Delegate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.Delegate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.Delegate)
    private static final wallet.core.jni.proto.Cardano.Delegate DEFAULT_INSTANCE;
    static {
      Delegate defaultInstance = new Delegate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Delegate.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.Delegate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Delegate> PARSER;

    public static com.google.protobuf.Parser<Delegate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WithdrawOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.Withdraw)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    java.lang.String getStakingAddress();
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    com.google.protobuf.ByteString
        getStakingAddressBytes();

    /**
     * <pre>
     * Withdrawal amount. Should match the real value of the earned reward.
     * </pre>
     *
     * <code>uint64 withdraw_amount = 2;</code>
     * @return The withdrawAmount.
     */
    long getWithdrawAmount();
  }
  /**
   * <pre>
   * Withdraw earned staking reward.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.Withdraw}
   */
  public  static final class Withdraw extends
      com.google.protobuf.GeneratedMessageLite<
          Withdraw, Withdraw.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.Withdraw)
      WithdrawOrBuilder {
    private Withdraw() {
      stakingAddress_ = "";
    }
    public static final int STAKING_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String stakingAddress_;
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The stakingAddress.
     */
    @java.lang.Override
    public java.lang.String getStakingAddress() {
      return stakingAddress_;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @return The bytes for stakingAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStakingAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stakingAddress_);
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The stakingAddress to set.
     */
    private void setStakingAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      stakingAddress_ = value;
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     */
    private void clearStakingAddress() {
      
      stakingAddress_ = getDefaultInstance().getStakingAddress();
    }
    /**
     * <pre>
     * Staking address (as string)
     * </pre>
     *
     * <code>string staking_address = 1;</code>
     * @param value The bytes for stakingAddress to set.
     */
    private void setStakingAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      stakingAddress_ = value.toStringUtf8();
      
    }

    public static final int WITHDRAW_AMOUNT_FIELD_NUMBER = 2;
    private long withdrawAmount_;
    /**
     * <pre>
     * Withdrawal amount. Should match the real value of the earned reward.
     * </pre>
     *
     * <code>uint64 withdraw_amount = 2;</code>
     * @return The withdrawAmount.
     */
    @java.lang.Override
    public long getWithdrawAmount() {
      return withdrawAmount_;
    }
    /**
     * <pre>
     * Withdrawal amount. Should match the real value of the earned reward.
     * </pre>
     *
     * <code>uint64 withdraw_amount = 2;</code>
     * @param value The withdrawAmount to set.
     */
    private void setWithdrawAmount(long value) {
      
      withdrawAmount_ = value;
    }
    /**
     * <pre>
     * Withdrawal amount. Should match the real value of the earned reward.
     * </pre>
     *
     * <code>uint64 withdraw_amount = 2;</code>
     */
    private void clearWithdrawAmount() {
      
      withdrawAmount_ = 0L;
    }

    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.Withdraw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.Withdraw prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Withdraw earned staking reward.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.Withdraw}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.Withdraw, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.Withdraw)
        wallet.core.jni.proto.Cardano.WithdrawOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.Withdraw.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The stakingAddress.
       */
      @java.lang.Override
      public java.lang.String getStakingAddress() {
        return instance.getStakingAddress();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return The bytes for stakingAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStakingAddressBytes() {
        return instance.getStakingAddressBytes();
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setStakingAddress(value);
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStakingAddress() {
        copyOnWrite();
        instance.clearStakingAddress();
        return this;
      }
      /**
       * <pre>
       * Staking address (as string)
       * </pre>
       *
       * <code>string staking_address = 1;</code>
       * @param value The bytes for stakingAddress to set.
       * @return This builder for chaining.
       */
      public Builder setStakingAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStakingAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Withdrawal amount. Should match the real value of the earned reward.
       * </pre>
       *
       * <code>uint64 withdraw_amount = 2;</code>
       * @return The withdrawAmount.
       */
      @java.lang.Override
      public long getWithdrawAmount() {
        return instance.getWithdrawAmount();
      }
      /**
       * <pre>
       * Withdrawal amount. Should match the real value of the earned reward.
       * </pre>
       *
       * <code>uint64 withdraw_amount = 2;</code>
       * @param value The withdrawAmount to set.
       * @return This builder for chaining.
       */
      public Builder setWithdrawAmount(long value) {
        copyOnWrite();
        instance.setWithdrawAmount(value);
        return this;
      }
      /**
       * <pre>
       * Withdrawal amount. Should match the real value of the earned reward.
       * </pre>
       *
       * <code>uint64 withdraw_amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWithdrawAmount() {
        copyOnWrite();
        instance.clearWithdrawAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.Withdraw)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.Withdraw();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "stakingAddress_",
              "withdrawAmount_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0003" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.Withdraw> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.Withdraw.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.Withdraw>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.Withdraw)
    private static final wallet.core.jni.proto.Cardano.Withdraw DEFAULT_INSTANCE;
    static {
      Withdraw defaultInstance = new Withdraw();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Withdraw.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.Withdraw getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Withdraw> PARSER;

    public static com.google.protobuf.Parser<Withdraw> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.TransactionPlan)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * total coins in the utxos
     * </pre>
     *
     * <code>uint64 available_amount = 1;</code>
     * @return The availableAmount.
     */
    long getAvailableAmount();

    /**
     * <pre>
     * coins in the output UTXO
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * coin amount deducted as fee
     * </pre>
     *
     * <code>uint64 fee = 3;</code>
     * @return The fee.
     */
    long getFee();

    /**
     * <pre>
     * coins in the change UTXO
     * </pre>
     *
     * <code>uint64 change = 4;</code>
     * @return The change.
     */
    long getChange();

    /**
     * <pre>
     * coins deposited (going to deposit) in this TX
     * </pre>
     *
     * <code>uint64 deposit = 10;</code>
     * @return The deposit.
     */
    long getDeposit();

    /**
     * <pre>
     * coins undeposited (coming from deposit) in this TX
     * </pre>
     *
     * <code>uint64 undeposit = 11;</code>
     * @return The undeposit.
     */
    long getUndeposit();

    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> 
        getAvailableTokensList();
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    wallet.core.jni.proto.Cardano.TokenAmount getAvailableTokens(int index);
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    int getAvailableTokensCount();

    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> 
        getOutputTokensList();
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    wallet.core.jni.proto.Cardano.TokenAmount getOutputTokens(int index);
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    int getOutputTokensCount();

    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> 
        getChangeTokensList();
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    wallet.core.jni.proto.Cardano.TokenAmount getChangeTokens(int index);
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    int getChangeTokensCount();

    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TxInput> 
        getUtxosList();
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    wallet.core.jni.proto.Cardano.TxInput getUtxos(int index);
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    int getUtxosCount();

    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();
  }
  /**
   * <pre>
   * Describes a preliminary transaction plan.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.TransactionPlan}
   */
  public  static final class TransactionPlan extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionPlan, TransactionPlan.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.TransactionPlan)
      TransactionPlanOrBuilder {
    private TransactionPlan() {
      availableTokens_ = emptyProtobufList();
      outputTokens_ = emptyProtobufList();
      changeTokens_ = emptyProtobufList();
      utxos_ = emptyProtobufList();
    }
    public static final int AVAILABLE_AMOUNT_FIELD_NUMBER = 1;
    private long availableAmount_;
    /**
     * <pre>
     * total coins in the utxos
     * </pre>
     *
     * <code>uint64 available_amount = 1;</code>
     * @return The availableAmount.
     */
    @java.lang.Override
    public long getAvailableAmount() {
      return availableAmount_;
    }
    /**
     * <pre>
     * total coins in the utxos
     * </pre>
     *
     * <code>uint64 available_amount = 1;</code>
     * @param value The availableAmount to set.
     */
    private void setAvailableAmount(long value) {
      
      availableAmount_ = value;
    }
    /**
     * <pre>
     * total coins in the utxos
     * </pre>
     *
     * <code>uint64 available_amount = 1;</code>
     */
    private void clearAvailableAmount() {
      
      availableAmount_ = 0L;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <pre>
     * coins in the output UTXO
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * coins in the output UTXO
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * coins in the output UTXO
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int FEE_FIELD_NUMBER = 3;
    private long fee_;
    /**
     * <pre>
     * coin amount deducted as fee
     * </pre>
     *
     * <code>uint64 fee = 3;</code>
     * @return The fee.
     */
    @java.lang.Override
    public long getFee() {
      return fee_;
    }
    /**
     * <pre>
     * coin amount deducted as fee
     * </pre>
     *
     * <code>uint64 fee = 3;</code>
     * @param value The fee to set.
     */
    private void setFee(long value) {
      
      fee_ = value;
    }
    /**
     * <pre>
     * coin amount deducted as fee
     * </pre>
     *
     * <code>uint64 fee = 3;</code>
     */
    private void clearFee() {
      
      fee_ = 0L;
    }

    public static final int CHANGE_FIELD_NUMBER = 4;
    private long change_;
    /**
     * <pre>
     * coins in the change UTXO
     * </pre>
     *
     * <code>uint64 change = 4;</code>
     * @return The change.
     */
    @java.lang.Override
    public long getChange() {
      return change_;
    }
    /**
     * <pre>
     * coins in the change UTXO
     * </pre>
     *
     * <code>uint64 change = 4;</code>
     * @param value The change to set.
     */
    private void setChange(long value) {
      
      change_ = value;
    }
    /**
     * <pre>
     * coins in the change UTXO
     * </pre>
     *
     * <code>uint64 change = 4;</code>
     */
    private void clearChange() {
      
      change_ = 0L;
    }

    public static final int DEPOSIT_FIELD_NUMBER = 10;
    private long deposit_;
    /**
     * <pre>
     * coins deposited (going to deposit) in this TX
     * </pre>
     *
     * <code>uint64 deposit = 10;</code>
     * @return The deposit.
     */
    @java.lang.Override
    public long getDeposit() {
      return deposit_;
    }
    /**
     * <pre>
     * coins deposited (going to deposit) in this TX
     * </pre>
     *
     * <code>uint64 deposit = 10;</code>
     * @param value The deposit to set.
     */
    private void setDeposit(long value) {
      
      deposit_ = value;
    }
    /**
     * <pre>
     * coins deposited (going to deposit) in this TX
     * </pre>
     *
     * <code>uint64 deposit = 10;</code>
     */
    private void clearDeposit() {
      
      deposit_ = 0L;
    }

    public static final int UNDEPOSIT_FIELD_NUMBER = 11;
    private long undeposit_;
    /**
     * <pre>
     * coins undeposited (coming from deposit) in this TX
     * </pre>
     *
     * <code>uint64 undeposit = 11;</code>
     * @return The undeposit.
     */
    @java.lang.Override
    public long getUndeposit() {
      return undeposit_;
    }
    /**
     * <pre>
     * coins undeposited (coming from deposit) in this TX
     * </pre>
     *
     * <code>uint64 undeposit = 11;</code>
     * @param value The undeposit to set.
     */
    private void setUndeposit(long value) {
      
      undeposit_ = value;
    }
    /**
     * <pre>
     * coins undeposited (coming from deposit) in this TX
     * </pre>
     *
     * <code>uint64 undeposit = 11;</code>
     */
    private void clearUndeposit() {
      
      undeposit_ = 0L;
    }

    public static final int AVAILABLE_TOKENS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> availableTokens_;
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getAvailableTokensList() {
      return availableTokens_;
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TokenAmountOrBuilder> 
        getAvailableTokensOrBuilderList() {
      return availableTokens_;
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    @java.lang.Override
    public int getAvailableTokensCount() {
      return availableTokens_.size();
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenAmount getAvailableTokens(int index) {
      return availableTokens_.get(index);
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    public wallet.core.jni.proto.Cardano.TokenAmountOrBuilder getAvailableTokensOrBuilder(
        int index) {
      return availableTokens_.get(index);
    }
    private void ensureAvailableTokensIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tmp = availableTokens_;
      if (!tmp.isModifiable()) {
        availableTokens_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    private void setAvailableTokens(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureAvailableTokensIsMutable();
      availableTokens_.set(index, value);
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    private void addAvailableTokens(wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureAvailableTokensIsMutable();
      availableTokens_.add(value);
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    private void addAvailableTokens(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureAvailableTokensIsMutable();
      availableTokens_.add(index, value);
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    private void addAllAvailableTokens(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
      ensureAvailableTokensIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, availableTokens_);
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    private void clearAvailableTokens() {
      availableTokens_ = emptyProtobufList();
    }
    /**
     * <pre>
     * total tokens in the utxos (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
     */
    private void removeAvailableTokens(int index) {
      ensureAvailableTokensIsMutable();
      availableTokens_.remove(index);
    }

    public static final int OUTPUT_TOKENS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> outputTokens_;
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getOutputTokensList() {
      return outputTokens_;
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TokenAmountOrBuilder> 
        getOutputTokensOrBuilderList() {
      return outputTokens_;
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    @java.lang.Override
    public int getOutputTokensCount() {
      return outputTokens_.size();
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenAmount getOutputTokens(int index) {
      return outputTokens_.get(index);
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    public wallet.core.jni.proto.Cardano.TokenAmountOrBuilder getOutputTokensOrBuilder(
        int index) {
      return outputTokens_.get(index);
    }
    private void ensureOutputTokensIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tmp = outputTokens_;
      if (!tmp.isModifiable()) {
        outputTokens_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    private void setOutputTokens(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureOutputTokensIsMutable();
      outputTokens_.set(index, value);
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    private void addOutputTokens(wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureOutputTokensIsMutable();
      outputTokens_.add(value);
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    private void addOutputTokens(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureOutputTokensIsMutable();
      outputTokens_.add(index, value);
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    private void addAllOutputTokens(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
      ensureOutputTokensIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outputTokens_);
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    private void clearOutputTokens() {
      outputTokens_ = emptyProtobufList();
    }
    /**
     * <pre>
     * tokens in the output (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
     */
    private void removeOutputTokens(int index) {
      ensureOutputTokensIsMutable();
      outputTokens_.remove(index);
    }

    public static final int CHANGE_TOKENS_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> changeTokens_;
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getChangeTokensList() {
      return changeTokens_;
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TokenAmountOrBuilder> 
        getChangeTokensOrBuilderList() {
      return changeTokens_;
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    @java.lang.Override
    public int getChangeTokensCount() {
      return changeTokens_.size();
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TokenAmount getChangeTokens(int index) {
      return changeTokens_.get(index);
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    public wallet.core.jni.proto.Cardano.TokenAmountOrBuilder getChangeTokensOrBuilder(
        int index) {
      return changeTokens_.get(index);
    }
    private void ensureChangeTokensIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TokenAmount> tmp = changeTokens_;
      if (!tmp.isModifiable()) {
        changeTokens_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    private void setChangeTokens(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureChangeTokensIsMutable();
      changeTokens_.set(index, value);
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    private void addChangeTokens(wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureChangeTokensIsMutable();
      changeTokens_.add(value);
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    private void addChangeTokens(
        int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
      value.getClass();
  ensureChangeTokensIsMutable();
      changeTokens_.add(index, value);
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    private void addAllChangeTokens(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
      ensureChangeTokensIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, changeTokens_);
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    private void clearChangeTokens() {
      changeTokens_ = emptyProtobufList();
    }
    /**
     * <pre>
     * tokens in the change (optional)
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
     */
    private void removeChangeTokens(int index) {
      ensureChangeTokensIsMutable();
      changeTokens_.remove(index);
    }

    public static final int UTXOS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TxInput> utxos_;
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TxInput> getUtxosList() {
      return utxos_;
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TxInputOrBuilder> 
        getUtxosOrBuilderList() {
      return utxos_;
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    @java.lang.Override
    public int getUtxosCount() {
      return utxos_.size();
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TxInput getUtxos(int index) {
      return utxos_.get(index);
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    public wallet.core.jni.proto.Cardano.TxInputOrBuilder getUtxosOrBuilder(
        int index) {
      return utxos_.get(index);
    }
    private void ensureUtxosIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TxInput> tmp = utxos_;
      if (!tmp.isModifiable()) {
        utxos_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    private void setUtxos(
        int index, wallet.core.jni.proto.Cardano.TxInput value) {
      value.getClass();
  ensureUtxosIsMutable();
      utxos_.set(index, value);
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    private void addUtxos(wallet.core.jni.proto.Cardano.TxInput value) {
      value.getClass();
  ensureUtxosIsMutable();
      utxos_.add(value);
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    private void addUtxos(
        int index, wallet.core.jni.proto.Cardano.TxInput value) {
      value.getClass();
  ensureUtxosIsMutable();
      utxos_.add(index, value);
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    private void addAllUtxos(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TxInput> values) {
      ensureUtxosIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, utxos_);
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    private void clearUtxos() {
      utxos_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The selected UTXOs, subset ot the input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
     */
    private void removeUtxos(int index) {
      ensureUtxosIsMutable();
      utxos_.remove(index);
    }

    public static final int ERROR_FIELD_NUMBER = 9;
    private int error_;
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 9;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.TransactionPlan prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Describes a preliminary transaction plan.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.TransactionPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.TransactionPlan, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.TransactionPlan)
        wallet.core.jni.proto.Cardano.TransactionPlanOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.TransactionPlan.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * total coins in the utxos
       * </pre>
       *
       * <code>uint64 available_amount = 1;</code>
       * @return The availableAmount.
       */
      @java.lang.Override
      public long getAvailableAmount() {
        return instance.getAvailableAmount();
      }
      /**
       * <pre>
       * total coins in the utxos
       * </pre>
       *
       * <code>uint64 available_amount = 1;</code>
       * @param value The availableAmount to set.
       * @return This builder for chaining.
       */
      public Builder setAvailableAmount(long value) {
        copyOnWrite();
        instance.setAvailableAmount(value);
        return this;
      }
      /**
       * <pre>
       * total coins in the utxos
       * </pre>
       *
       * <code>uint64 available_amount = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvailableAmount() {
        copyOnWrite();
        instance.clearAvailableAmount();
        return this;
      }

      /**
       * <pre>
       * coins in the output UTXO
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * coins in the output UTXO
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * coins in the output UTXO
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * coin amount deducted as fee
       * </pre>
       *
       * <code>uint64 fee = 3;</code>
       * @return The fee.
       */
      @java.lang.Override
      public long getFee() {
        return instance.getFee();
      }
      /**
       * <pre>
       * coin amount deducted as fee
       * </pre>
       *
       * <code>uint64 fee = 3;</code>
       * @param value The fee to set.
       * @return This builder for chaining.
       */
      public Builder setFee(long value) {
        copyOnWrite();
        instance.setFee(value);
        return this;
      }
      /**
       * <pre>
       * coin amount deducted as fee
       * </pre>
       *
       * <code>uint64 fee = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFee() {
        copyOnWrite();
        instance.clearFee();
        return this;
      }

      /**
       * <pre>
       * coins in the change UTXO
       * </pre>
       *
       * <code>uint64 change = 4;</code>
       * @return The change.
       */
      @java.lang.Override
      public long getChange() {
        return instance.getChange();
      }
      /**
       * <pre>
       * coins in the change UTXO
       * </pre>
       *
       * <code>uint64 change = 4;</code>
       * @param value The change to set.
       * @return This builder for chaining.
       */
      public Builder setChange(long value) {
        copyOnWrite();
        instance.setChange(value);
        return this;
      }
      /**
       * <pre>
       * coins in the change UTXO
       * </pre>
       *
       * <code>uint64 change = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChange() {
        copyOnWrite();
        instance.clearChange();
        return this;
      }

      /**
       * <pre>
       * coins deposited (going to deposit) in this TX
       * </pre>
       *
       * <code>uint64 deposit = 10;</code>
       * @return The deposit.
       */
      @java.lang.Override
      public long getDeposit() {
        return instance.getDeposit();
      }
      /**
       * <pre>
       * coins deposited (going to deposit) in this TX
       * </pre>
       *
       * <code>uint64 deposit = 10;</code>
       * @param value The deposit to set.
       * @return This builder for chaining.
       */
      public Builder setDeposit(long value) {
        copyOnWrite();
        instance.setDeposit(value);
        return this;
      }
      /**
       * <pre>
       * coins deposited (going to deposit) in this TX
       * </pre>
       *
       * <code>uint64 deposit = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeposit() {
        copyOnWrite();
        instance.clearDeposit();
        return this;
      }

      /**
       * <pre>
       * coins undeposited (coming from deposit) in this TX
       * </pre>
       *
       * <code>uint64 undeposit = 11;</code>
       * @return The undeposit.
       */
      @java.lang.Override
      public long getUndeposit() {
        return instance.getUndeposit();
      }
      /**
       * <pre>
       * coins undeposited (coming from deposit) in this TX
       * </pre>
       *
       * <code>uint64 undeposit = 11;</code>
       * @param value The undeposit to set.
       * @return This builder for chaining.
       */
      public Builder setUndeposit(long value) {
        copyOnWrite();
        instance.setUndeposit(value);
        return this;
      }
      /**
       * <pre>
       * coins undeposited (coming from deposit) in this TX
       * </pre>
       *
       * <code>uint64 undeposit = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearUndeposit() {
        copyOnWrite();
        instance.clearUndeposit();
        return this;
      }

      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getAvailableTokensList() {
        return java.util.Collections.unmodifiableList(
            instance.getAvailableTokensList());
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      @java.lang.Override
      public int getAvailableTokensCount() {
        return instance.getAvailableTokensCount();
      }/**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenAmount getAvailableTokens(int index) {
        return instance.getAvailableTokens(index);
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder setAvailableTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.setAvailableTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder setAvailableTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.setAvailableTokens(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder addAvailableTokens(wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addAvailableTokens(value);
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder addAvailableTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addAvailableTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder addAvailableTokens(
          wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addAvailableTokens(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder addAvailableTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addAvailableTokens(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder addAllAvailableTokens(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
        copyOnWrite();
        instance.addAllAvailableTokens(values);
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder clearAvailableTokens() {
        copyOnWrite();
        instance.clearAvailableTokens();
        return this;
      }
      /**
       * <pre>
       * total tokens in the utxos (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount available_tokens = 5;</code>
       */
      public Builder removeAvailableTokens(int index) {
        copyOnWrite();
        instance.removeAvailableTokens(index);
        return this;
      }

      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getOutputTokensList() {
        return java.util.Collections.unmodifiableList(
            instance.getOutputTokensList());
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      @java.lang.Override
      public int getOutputTokensCount() {
        return instance.getOutputTokensCount();
      }/**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenAmount getOutputTokens(int index) {
        return instance.getOutputTokens(index);
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder setOutputTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.setOutputTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder setOutputTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.setOutputTokens(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder addOutputTokens(wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addOutputTokens(value);
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder addOutputTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addOutputTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder addOutputTokens(
          wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputTokens(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder addOutputTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputTokens(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder addAllOutputTokens(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
        copyOnWrite();
        instance.addAllOutputTokens(values);
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder clearOutputTokens() {
        copyOnWrite();
        instance.clearOutputTokens();
        return this;
      }
      /**
       * <pre>
       * tokens in the output (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount output_tokens = 6;</code>
       */
      public Builder removeOutputTokens(int index) {
        copyOnWrite();
        instance.removeOutputTokens(index);
        return this;
      }

      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TokenAmount> getChangeTokensList() {
        return java.util.Collections.unmodifiableList(
            instance.getChangeTokensList());
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      @java.lang.Override
      public int getChangeTokensCount() {
        return instance.getChangeTokensCount();
      }/**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TokenAmount getChangeTokens(int index) {
        return instance.getChangeTokens(index);
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder setChangeTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.setChangeTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder setChangeTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.setChangeTokens(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder addChangeTokens(wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addChangeTokens(value);
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder addChangeTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount value) {
        copyOnWrite();
        instance.addChangeTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder addChangeTokens(
          wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addChangeTokens(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder addChangeTokens(
          int index, wallet.core.jni.proto.Cardano.TokenAmount.Builder builderForValue) {
        copyOnWrite();
        instance.addChangeTokens(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder addAllChangeTokens(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TokenAmount> values) {
        copyOnWrite();
        instance.addAllChangeTokens(values);
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder clearChangeTokens() {
        copyOnWrite();
        instance.clearChangeTokens();
        return this;
      }
      /**
       * <pre>
       * tokens in the change (optional)
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TokenAmount change_tokens = 7;</code>
       */
      public Builder removeChangeTokens(int index) {
        copyOnWrite();
        instance.removeChangeTokens(index);
        return this;
      }

      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TxInput> getUtxosList() {
        return java.util.Collections.unmodifiableList(
            instance.getUtxosList());
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      @java.lang.Override
      public int getUtxosCount() {
        return instance.getUtxosCount();
      }/**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TxInput getUtxos(int index) {
        return instance.getUtxos(index);
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder setUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput value) {
        copyOnWrite();
        instance.setUtxos(index, value);
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder setUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput.Builder builderForValue) {
        copyOnWrite();
        instance.setUtxos(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder addUtxos(wallet.core.jni.proto.Cardano.TxInput value) {
        copyOnWrite();
        instance.addUtxos(value);
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder addUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput value) {
        copyOnWrite();
        instance.addUtxos(index, value);
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder addUtxos(
          wallet.core.jni.proto.Cardano.TxInput.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxos(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder addUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxos(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder addAllUtxos(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TxInput> values) {
        copyOnWrite();
        instance.addAllUtxos(values);
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder clearUtxos() {
        copyOnWrite();
        instance.clearUtxos();
        return this;
      }
      /**
       * <pre>
       * The selected UTXOs, subset ot the input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 8;</code>
       */
      public Builder removeUtxos(int index) {
        copyOnWrite();
        instance.removeUtxos(index);
        return this;
      }

      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 9;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 9;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 9;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 9;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.TransactionPlan)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.TransactionPlan();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "availableAmount_",
              "amount_",
              "fee_",
              "change_",
              "availableTokens_",
              wallet.core.jni.proto.Cardano.TokenAmount.class,
              "outputTokens_",
              wallet.core.jni.proto.Cardano.TokenAmount.class,
              "changeTokens_",
              wallet.core.jni.proto.Cardano.TokenAmount.class,
              "utxos_",
              wallet.core.jni.proto.Cardano.TxInput.class,
              "error_",
              "deposit_",
              "undeposit_",
            };
            java.lang.String info =
                "\u0000\u000b\u0000\u0000\u0001\u000b\u000b\u0000\u0004\u0000\u0001\u0003\u0002\u0003" +
                "\u0003\u0003\u0004\u0003\u0005\u001b\u0006\u001b\u0007\u001b\b\u001b\t\f\n\u0003" +
                "\u000b\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.TransactionPlan> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.TransactionPlan.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.TransactionPlan>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.TransactionPlan)
    private static final wallet.core.jni.proto.Cardano.TransactionPlan DEFAULT_INSTANCE;
    static {
      TransactionPlan defaultInstance = new TransactionPlan();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionPlan.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.TransactionPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionPlan> PARSER;

    public static com.google.protobuf.Parser<TransactionPlan> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    java.util.List<wallet.core.jni.proto.Cardano.TxInput> 
        getUtxosList();
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    wallet.core.jni.proto.Cardano.TxInput getUtxos(int index);
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    int getUtxosCount();

    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @return A list containing the privateKey.
     */
    java.util.List<com.google.protobuf.ByteString> getPrivateKeyList();
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @return The count of privateKey.
     */
    int getPrivateKeyCount();
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @param index The index of the element to return.
     * @return The privateKey at the given index.
     */
    com.google.protobuf.ByteString getPrivateKey(int index);

    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     * @return Whether the transferMessage field is set.
     */
    boolean hasTransferMessage();
    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     * @return The transferMessage.
     */
    wallet.core.jni.proto.Cardano.Transfer getTransferMessage();

    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     * @return Whether the registerStakingKey field is set.
     */
    boolean hasRegisterStakingKey();
    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     * @return The registerStakingKey.
     */
    wallet.core.jni.proto.Cardano.RegisterStakingKey getRegisterStakingKey();

    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     * @return Whether the delegate field is set.
     */
    boolean hasDelegate();
    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     * @return The delegate.
     */
    wallet.core.jni.proto.Cardano.Delegate getDelegate();

    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     * @return Whether the withdraw field is set.
     */
    boolean hasWithdraw();
    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     * @return The withdraw.
     */
    wallet.core.jni.proto.Cardano.Withdraw getWithdraw();

    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     * @return Whether the deregisterStakingKey field is set.
     */
    boolean hasDeregisterStakingKey();
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     * @return The deregisterStakingKey.
     */
    wallet.core.jni.proto.Cardano.DeregisterStakingKey getDeregisterStakingKey();

    /**
     * <pre>
     * Time-to-live time of the TX
     * </pre>
     *
     * <code>uint64 ttl = 4;</code>
     * @return The ttl.
     */
    long getTtl();

    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     * @return Whether the plan field is set.
     */
    boolean hasPlan();
    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     * @return The plan.
     */
    wallet.core.jni.proto.Cardano.TransactionPlan getPlan();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      utxos_ = emptyProtobufList();
      privateKey_ = emptyProtobufList();
    }
    public static final int UTXOS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TxInput> utxos_;
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Cardano.TxInput> getUtxosList() {
      return utxos_;
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Cardano.TxInputOrBuilder> 
        getUtxosOrBuilderList() {
      return utxos_;
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    @java.lang.Override
    public int getUtxosCount() {
      return utxos_.size();
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TxInput getUtxos(int index) {
      return utxos_.get(index);
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    public wallet.core.jni.proto.Cardano.TxInputOrBuilder getUtxosOrBuilder(
        int index) {
      return utxos_.get(index);
    }
    private void ensureUtxosIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Cardano.TxInput> tmp = utxos_;
      if (!tmp.isModifiable()) {
        utxos_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    private void setUtxos(
        int index, wallet.core.jni.proto.Cardano.TxInput value) {
      value.getClass();
  ensureUtxosIsMutable();
      utxos_.set(index, value);
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    private void addUtxos(wallet.core.jni.proto.Cardano.TxInput value) {
      value.getClass();
  ensureUtxosIsMutable();
      utxos_.add(value);
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    private void addUtxos(
        int index, wallet.core.jni.proto.Cardano.TxInput value) {
      value.getClass();
  ensureUtxosIsMutable();
      utxos_.add(index, value);
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    private void addAllUtxos(
        java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TxInput> values) {
      ensureUtxosIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, utxos_);
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    private void clearUtxos() {
      utxos_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Available input UTXOs
     * </pre>
     *
     * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
     */
    private void removeUtxos(int index) {
      ensureUtxosIsMutable();
      utxos_.remove(index);
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> privateKey_;
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @return A list containing the privateKey.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getPrivateKeyList() {
      return privateKey_;
    }
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @return The count of privateKey.
     */
    @java.lang.Override
    public int getPrivateKeyCount() {
      return privateKey_.size();
    }
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @param index The index of the element to return.
     * @return The privateKey at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey(int index) {
      return privateKey_.get(index);
    }
    private void ensurePrivateKeyIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = privateKey_;
      if (!tmp.isModifiable()) {
        privateKey_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @param index The index to set the value at.
     * @param value The privateKey to set.
     */
    private void setPrivateKey(
        int index, com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensurePrivateKeyIsMutable();
      privateKey_.set(index, value);
    }
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @param value The privateKey to add.
     */
    private void addPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensurePrivateKeyIsMutable();
      privateKey_.add(value);
    }
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     * @param values The privateKey to add.
     */
    private void addAllPrivateKey(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensurePrivateKeyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, privateKey_);
    }
    /**
     * <pre>
     * Available private keys (double extended keys); every input UTXO address should be covered
     * In case of Plan only, keys should be present, in correct number
     * </pre>
     *
     * <code>repeated bytes private_key = 2;</code>
     */
    private void clearPrivateKey() {
      privateKey_ = emptyProtobufList();
    }

    public static final int TRANSFER_MESSAGE_FIELD_NUMBER = 3;
    private wallet.core.jni.proto.Cardano.Transfer transferMessage_;
    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     */
    @java.lang.Override
    public boolean hasTransferMessage() {
      return transferMessage_ != null;
    }
    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.Transfer getTransferMessage() {
      return transferMessage_ == null ? wallet.core.jni.proto.Cardano.Transfer.getDefaultInstance() : transferMessage_;
    }
    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     */
    private void setTransferMessage(wallet.core.jni.proto.Cardano.Transfer value) {
      value.getClass();
  transferMessage_ = value;
      
      }
    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTransferMessage(wallet.core.jni.proto.Cardano.Transfer value) {
      value.getClass();
  if (transferMessage_ != null &&
          transferMessage_ != wallet.core.jni.proto.Cardano.Transfer.getDefaultInstance()) {
        transferMessage_ =
          wallet.core.jni.proto.Cardano.Transfer.newBuilder(transferMessage_).mergeFrom(value).buildPartial();
      } else {
        transferMessage_ = value;
      }
      
    }
    /**
     * <pre>
     * Later this can be made oneof if more message types are supported
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
     */
    private void clearTransferMessage() {  transferMessage_ = null;
      
    }

    public static final int REGISTER_STAKING_KEY_FIELD_NUMBER = 6;
    private wallet.core.jni.proto.Cardano.RegisterStakingKey registerStakingKey_;
    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     */
    @java.lang.Override
    public boolean hasRegisterStakingKey() {
      return registerStakingKey_ != null;
    }
    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.RegisterStakingKey getRegisterStakingKey() {
      return registerStakingKey_ == null ? wallet.core.jni.proto.Cardano.RegisterStakingKey.getDefaultInstance() : registerStakingKey_;
    }
    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     */
    private void setRegisterStakingKey(wallet.core.jni.proto.Cardano.RegisterStakingKey value) {
      value.getClass();
  registerStakingKey_ = value;
      
      }
    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRegisterStakingKey(wallet.core.jni.proto.Cardano.RegisterStakingKey value) {
      value.getClass();
  if (registerStakingKey_ != null &&
          registerStakingKey_ != wallet.core.jni.proto.Cardano.RegisterStakingKey.getDefaultInstance()) {
        registerStakingKey_ =
          wallet.core.jni.proto.Cardano.RegisterStakingKey.newBuilder(registerStakingKey_).mergeFrom(value).buildPartial();
      } else {
        registerStakingKey_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional, used in case of Staking Key registration (prerequisite for Staking)
     * </pre>
     *
     * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
     */
    private void clearRegisterStakingKey() {  registerStakingKey_ = null;
      
    }

    public static final int DELEGATE_FIELD_NUMBER = 7;
    private wallet.core.jni.proto.Cardano.Delegate delegate_;
    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     */
    @java.lang.Override
    public boolean hasDelegate() {
      return delegate_ != null;
    }
    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.Delegate getDelegate() {
      return delegate_ == null ? wallet.core.jni.proto.Cardano.Delegate.getDefaultInstance() : delegate_;
    }
    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     */
    private void setDelegate(wallet.core.jni.proto.Cardano.Delegate value) {
      value.getClass();
  delegate_ = value;
      
      }
    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDelegate(wallet.core.jni.proto.Cardano.Delegate value) {
      value.getClass();
  if (delegate_ != null &&
          delegate_ != wallet.core.jni.proto.Cardano.Delegate.getDefaultInstance()) {
        delegate_ =
          wallet.core.jni.proto.Cardano.Delegate.newBuilder(delegate_).mergeFrom(value).buildPartial();
      } else {
        delegate_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional, used in case of (re)delegation
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
     */
    private void clearDelegate() {  delegate_ = null;
      
    }

    public static final int WITHDRAW_FIELD_NUMBER = 8;
    private wallet.core.jni.proto.Cardano.Withdraw withdraw_;
    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     */
    @java.lang.Override
    public boolean hasWithdraw() {
      return withdraw_ != null;
    }
    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.Withdraw getWithdraw() {
      return withdraw_ == null ? wallet.core.jni.proto.Cardano.Withdraw.getDefaultInstance() : withdraw_;
    }
    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     */
    private void setWithdraw(wallet.core.jni.proto.Cardano.Withdraw value) {
      value.getClass();
  withdraw_ = value;
      
      }
    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeWithdraw(wallet.core.jni.proto.Cardano.Withdraw value) {
      value.getClass();
  if (withdraw_ != null &&
          withdraw_ != wallet.core.jni.proto.Cardano.Withdraw.getDefaultInstance()) {
        withdraw_ =
          wallet.core.jni.proto.Cardano.Withdraw.newBuilder(withdraw_).mergeFrom(value).buildPartial();
      } else {
        withdraw_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional, used in case of withdraw
     * </pre>
     *
     * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
     */
    private void clearWithdraw() {  withdraw_ = null;
      
    }

    public static final int DEREGISTER_STAKING_KEY_FIELD_NUMBER = 9;
    private wallet.core.jni.proto.Cardano.DeregisterStakingKey deregisterStakingKey_;
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     */
    @java.lang.Override
    public boolean hasDeregisterStakingKey() {
      return deregisterStakingKey_ != null;
    }
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.DeregisterStakingKey getDeregisterStakingKey() {
      return deregisterStakingKey_ == null ? wallet.core.jni.proto.Cardano.DeregisterStakingKey.getDefaultInstance() : deregisterStakingKey_;
    }
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     */
    private void setDeregisterStakingKey(wallet.core.jni.proto.Cardano.DeregisterStakingKey value) {
      value.getClass();
  deregisterStakingKey_ = value;
      
      }
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDeregisterStakingKey(wallet.core.jni.proto.Cardano.DeregisterStakingKey value) {
      value.getClass();
  if (deregisterStakingKey_ != null &&
          deregisterStakingKey_ != wallet.core.jni.proto.Cardano.DeregisterStakingKey.getDefaultInstance()) {
        deregisterStakingKey_ =
          wallet.core.jni.proto.Cardano.DeregisterStakingKey.newBuilder(deregisterStakingKey_).mergeFrom(value).buildPartial();
      } else {
        deregisterStakingKey_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
     */
    private void clearDeregisterStakingKey() {  deregisterStakingKey_ = null;
      
    }

    public static final int TTL_FIELD_NUMBER = 4;
    private long ttl_;
    /**
     * <pre>
     * Time-to-live time of the TX
     * </pre>
     *
     * <code>uint64 ttl = 4;</code>
     * @return The ttl.
     */
    @java.lang.Override
    public long getTtl() {
      return ttl_;
    }
    /**
     * <pre>
     * Time-to-live time of the TX
     * </pre>
     *
     * <code>uint64 ttl = 4;</code>
     * @param value The ttl to set.
     */
    private void setTtl(long value) {
      
      ttl_ = value;
    }
    /**
     * <pre>
     * Time-to-live time of the TX
     * </pre>
     *
     * <code>uint64 ttl = 4;</code>
     */
    private void clearTtl() {
      
      ttl_ = 0L;
    }

    public static final int PLAN_FIELD_NUMBER = 5;
    private wallet.core.jni.proto.Cardano.TransactionPlan plan_;
    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     */
    @java.lang.Override
    public boolean hasPlan() {
      return plan_ != null;
    }
    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Cardano.TransactionPlan getPlan() {
      return plan_ == null ? wallet.core.jni.proto.Cardano.TransactionPlan.getDefaultInstance() : plan_;
    }
    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     */
    private void setPlan(wallet.core.jni.proto.Cardano.TransactionPlan value) {
      value.getClass();
  plan_ = value;
      
      }
    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePlan(wallet.core.jni.proto.Cardano.TransactionPlan value) {
      value.getClass();
  if (plan_ != null &&
          plan_ != wallet.core.jni.proto.Cardano.TransactionPlan.getDefaultInstance()) {
        plan_ =
          wallet.core.jni.proto.Cardano.TransactionPlan.newBuilder(plan_).mergeFrom(value).buildPartial();
      } else {
        plan_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional plan, if missing it will be computed
     * </pre>
     *
     * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
     */
    private void clearPlan() {  plan_ = null;
      
    }

    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.SigningInput)
        wallet.core.jni.proto.Cardano.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Cardano.TxInput> getUtxosList() {
        return java.util.Collections.unmodifiableList(
            instance.getUtxosList());
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      @java.lang.Override
      public int getUtxosCount() {
        return instance.getUtxosCount();
      }/**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TxInput getUtxos(int index) {
        return instance.getUtxos(index);
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder setUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput value) {
        copyOnWrite();
        instance.setUtxos(index, value);
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder setUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput.Builder builderForValue) {
        copyOnWrite();
        instance.setUtxos(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder addUtxos(wallet.core.jni.proto.Cardano.TxInput value) {
        copyOnWrite();
        instance.addUtxos(value);
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder addUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput value) {
        copyOnWrite();
        instance.addUtxos(index, value);
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder addUtxos(
          wallet.core.jni.proto.Cardano.TxInput.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxos(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder addUtxos(
          int index, wallet.core.jni.proto.Cardano.TxInput.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxos(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder addAllUtxos(
          java.lang.Iterable<? extends wallet.core.jni.proto.Cardano.TxInput> values) {
        copyOnWrite();
        instance.addAllUtxos(values);
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder clearUtxos() {
        copyOnWrite();
        instance.clearUtxos();
        return this;
      }
      /**
       * <pre>
       * Available input UTXOs
       * </pre>
       *
       * <code>repeated .TW.Cardano.Proto.TxInput utxos = 1;</code>
       */
      public Builder removeUtxos(int index) {
        copyOnWrite();
        instance.removeUtxos(index);
        return this;
      }

      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @return A list containing the privateKey.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getPrivateKeyList() {
        return java.util.Collections.unmodifiableList(
            instance.getPrivateKeyList());
      }
      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @return The count of privateKey.
       */
      @java.lang.Override
      public int getPrivateKeyCount() {
        return instance.getPrivateKeyCount();
      }
      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @param index The index of the element to return.
       * @return The privateKey at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey(int index) {
        return instance.getPrivateKey(index);
      }
      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(index, value);
        return this;
      }
      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @param value The privateKey to add.
       * @return This builder for chaining.
       */
      public Builder addPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @param values The privateKey to add.
       * @return This builder for chaining.
       */
      public Builder addAllPrivateKey(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllPrivateKey(values);
        return this;
      }
      /**
       * <pre>
       * Available private keys (double extended keys); every input UTXO address should be covered
       * In case of Plan only, keys should be present, in correct number
       * </pre>
       *
       * <code>repeated bytes private_key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <pre>
       * Later this can be made oneof if more message types are supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
       */
      @java.lang.Override
      public boolean hasTransferMessage() {
        return instance.hasTransferMessage();
      }
      /**
       * <pre>
       * Later this can be made oneof if more message types are supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.Transfer getTransferMessage() {
        return instance.getTransferMessage();
      }
      /**
       * <pre>
       * Later this can be made oneof if more message types are supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
       */
      public Builder setTransferMessage(wallet.core.jni.proto.Cardano.Transfer value) {
        copyOnWrite();
        instance.setTransferMessage(value);
        return this;
        }
      /**
       * <pre>
       * Later this can be made oneof if more message types are supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
       */
      public Builder setTransferMessage(
          wallet.core.jni.proto.Cardano.Transfer.Builder builderForValue) {
        copyOnWrite();
        instance.setTransferMessage(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Later this can be made oneof if more message types are supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
       */
      public Builder mergeTransferMessage(wallet.core.jni.proto.Cardano.Transfer value) {
        copyOnWrite();
        instance.mergeTransferMessage(value);
        return this;
      }
      /**
       * <pre>
       * Later this can be made oneof if more message types are supported
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Transfer transfer_message = 3;</code>
       */
      public Builder clearTransferMessage() {  copyOnWrite();
        instance.clearTransferMessage();
        return this;
      }

      /**
       * <pre>
       * Optional, used in case of Staking Key registration (prerequisite for Staking)
       * </pre>
       *
       * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
       */
      @java.lang.Override
      public boolean hasRegisterStakingKey() {
        return instance.hasRegisterStakingKey();
      }
      /**
       * <pre>
       * Optional, used in case of Staking Key registration (prerequisite for Staking)
       * </pre>
       *
       * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.RegisterStakingKey getRegisterStakingKey() {
        return instance.getRegisterStakingKey();
      }
      /**
       * <pre>
       * Optional, used in case of Staking Key registration (prerequisite for Staking)
       * </pre>
       *
       * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
       */
      public Builder setRegisterStakingKey(wallet.core.jni.proto.Cardano.RegisterStakingKey value) {
        copyOnWrite();
        instance.setRegisterStakingKey(value);
        return this;
        }
      /**
       * <pre>
       * Optional, used in case of Staking Key registration (prerequisite for Staking)
       * </pre>
       *
       * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
       */
      public Builder setRegisterStakingKey(
          wallet.core.jni.proto.Cardano.RegisterStakingKey.Builder builderForValue) {
        copyOnWrite();
        instance.setRegisterStakingKey(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional, used in case of Staking Key registration (prerequisite for Staking)
       * </pre>
       *
       * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
       */
      public Builder mergeRegisterStakingKey(wallet.core.jni.proto.Cardano.RegisterStakingKey value) {
        copyOnWrite();
        instance.mergeRegisterStakingKey(value);
        return this;
      }
      /**
       * <pre>
       * Optional, used in case of Staking Key registration (prerequisite for Staking)
       * </pre>
       *
       * <code>.TW.Cardano.Proto.RegisterStakingKey register_staking_key = 6;</code>
       */
      public Builder clearRegisterStakingKey() {  copyOnWrite();
        instance.clearRegisterStakingKey();
        return this;
      }

      /**
       * <pre>
       * Optional, used in case of (re)delegation
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
       */
      @java.lang.Override
      public boolean hasDelegate() {
        return instance.hasDelegate();
      }
      /**
       * <pre>
       * Optional, used in case of (re)delegation
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.Delegate getDelegate() {
        return instance.getDelegate();
      }
      /**
       * <pre>
       * Optional, used in case of (re)delegation
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
       */
      public Builder setDelegate(wallet.core.jni.proto.Cardano.Delegate value) {
        copyOnWrite();
        instance.setDelegate(value);
        return this;
        }
      /**
       * <pre>
       * Optional, used in case of (re)delegation
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
       */
      public Builder setDelegate(
          wallet.core.jni.proto.Cardano.Delegate.Builder builderForValue) {
        copyOnWrite();
        instance.setDelegate(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional, used in case of (re)delegation
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
       */
      public Builder mergeDelegate(wallet.core.jni.proto.Cardano.Delegate value) {
        copyOnWrite();
        instance.mergeDelegate(value);
        return this;
      }
      /**
       * <pre>
       * Optional, used in case of (re)delegation
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Delegate delegate = 7;</code>
       */
      public Builder clearDelegate() {  copyOnWrite();
        instance.clearDelegate();
        return this;
      }

      /**
       * <pre>
       * Optional, used in case of withdraw
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
       */
      @java.lang.Override
      public boolean hasWithdraw() {
        return instance.hasWithdraw();
      }
      /**
       * <pre>
       * Optional, used in case of withdraw
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.Withdraw getWithdraw() {
        return instance.getWithdraw();
      }
      /**
       * <pre>
       * Optional, used in case of withdraw
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
       */
      public Builder setWithdraw(wallet.core.jni.proto.Cardano.Withdraw value) {
        copyOnWrite();
        instance.setWithdraw(value);
        return this;
        }
      /**
       * <pre>
       * Optional, used in case of withdraw
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
       */
      public Builder setWithdraw(
          wallet.core.jni.proto.Cardano.Withdraw.Builder builderForValue) {
        copyOnWrite();
        instance.setWithdraw(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional, used in case of withdraw
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
       */
      public Builder mergeWithdraw(wallet.core.jni.proto.Cardano.Withdraw value) {
        copyOnWrite();
        instance.mergeWithdraw(value);
        return this;
      }
      /**
       * <pre>
       * Optional, used in case of withdraw
       * </pre>
       *
       * <code>.TW.Cardano.Proto.Withdraw withdraw = 8;</code>
       */
      public Builder clearWithdraw() {  copyOnWrite();
        instance.clearWithdraw();
        return this;
      }

      /**
       * <pre>
       * Optional
       * </pre>
       *
       * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
       */
      @java.lang.Override
      public boolean hasDeregisterStakingKey() {
        return instance.hasDeregisterStakingKey();
      }
      /**
       * <pre>
       * Optional
       * </pre>
       *
       * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.DeregisterStakingKey getDeregisterStakingKey() {
        return instance.getDeregisterStakingKey();
      }
      /**
       * <pre>
       * Optional
       * </pre>
       *
       * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
       */
      public Builder setDeregisterStakingKey(wallet.core.jni.proto.Cardano.DeregisterStakingKey value) {
        copyOnWrite();
        instance.setDeregisterStakingKey(value);
        return this;
        }
      /**
       * <pre>
       * Optional
       * </pre>
       *
       * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
       */
      public Builder setDeregisterStakingKey(
          wallet.core.jni.proto.Cardano.DeregisterStakingKey.Builder builderForValue) {
        copyOnWrite();
        instance.setDeregisterStakingKey(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional
       * </pre>
       *
       * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
       */
      public Builder mergeDeregisterStakingKey(wallet.core.jni.proto.Cardano.DeregisterStakingKey value) {
        copyOnWrite();
        instance.mergeDeregisterStakingKey(value);
        return this;
      }
      /**
       * <pre>
       * Optional
       * </pre>
       *
       * <code>.TW.Cardano.Proto.DeregisterStakingKey deregister_staking_key = 9;</code>
       */
      public Builder clearDeregisterStakingKey() {  copyOnWrite();
        instance.clearDeregisterStakingKey();
        return this;
      }

      /**
       * <pre>
       * Time-to-live time of the TX
       * </pre>
       *
       * <code>uint64 ttl = 4;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public long getTtl() {
        return instance.getTtl();
      }
      /**
       * <pre>
       * Time-to-live time of the TX
       * </pre>
       *
       * <code>uint64 ttl = 4;</code>
       * @param value The ttl to set.
       * @return This builder for chaining.
       */
      public Builder setTtl(long value) {
        copyOnWrite();
        instance.setTtl(value);
        return this;
      }
      /**
       * <pre>
       * Time-to-live time of the TX
       * </pre>
       *
       * <code>uint64 ttl = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtl() {
        copyOnWrite();
        instance.clearTtl();
        return this;
      }

      /**
       * <pre>
       * Optional plan, if missing it will be computed
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
       */
      @java.lang.Override
      public boolean hasPlan() {
        return instance.hasPlan();
      }
      /**
       * <pre>
       * Optional plan, if missing it will be computed
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Cardano.TransactionPlan getPlan() {
        return instance.getPlan();
      }
      /**
       * <pre>
       * Optional plan, if missing it will be computed
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
       */
      public Builder setPlan(wallet.core.jni.proto.Cardano.TransactionPlan value) {
        copyOnWrite();
        instance.setPlan(value);
        return this;
        }
      /**
       * <pre>
       * Optional plan, if missing it will be computed
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
       */
      public Builder setPlan(
          wallet.core.jni.proto.Cardano.TransactionPlan.Builder builderForValue) {
        copyOnWrite();
        instance.setPlan(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional plan, if missing it will be computed
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
       */
      public Builder mergePlan(wallet.core.jni.proto.Cardano.TransactionPlan value) {
        copyOnWrite();
        instance.mergePlan(value);
        return this;
      }
      /**
       * <pre>
       * Optional plan, if missing it will be computed
       * </pre>
       *
       * <code>.TW.Cardano.Proto.TransactionPlan plan = 5;</code>
       */
      public Builder clearPlan() {  copyOnWrite();
        instance.clearPlan();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "utxos_",
              wallet.core.jni.proto.Cardano.TxInput.class,
              "privateKey_",
              "transferMessage_",
              "ttl_",
              "plan_",
              "registerStakingKey_",
              "delegate_",
              "withdraw_",
              "deregisterStakingKey_",
            };
            java.lang.String info =
                "\u0000\t\u0000\u0000\u0001\t\t\u0000\u0002\u0000\u0001\u001b\u0002\u001c\u0003\t" +
                "\u0004\u0003\u0005\t\u0006\t\u0007\t\b\t\t\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.SigningInput)
    private static final wallet.core.jni.proto.Cardano.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Cardano.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Encoded transaction bytes
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * TxID, derived from transaction data, also needed for submission
     * </pre>
     *
     * <code>bytes tx_id = 2;</code>
     * @return The txId.
     */
    com.google.protobuf.ByteString getTxId();

    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Cardano.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Cardano.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      txId_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Encoded transaction bytes
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Encoded transaction bytes
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Encoded transaction bytes
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int TX_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString txId_;
    /**
     * <pre>
     * TxID, derived from transaction data, also needed for submission
     * </pre>
     *
     * <code>bytes tx_id = 2;</code>
     * @return The txId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTxId() {
      return txId_;
    }
    /**
     * <pre>
     * TxID, derived from transaction data, also needed for submission
     * </pre>
     *
     * <code>bytes tx_id = 2;</code>
     * @param value The txId to set.
     */
    private void setTxId(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      txId_ = value;
    }
    /**
     * <pre>
     * TxID, derived from transaction data, also needed for submission
     * </pre>
     *
     * <code>bytes tx_id = 2;</code>
     */
    private void clearTxId() {
      
      txId_ = getDefaultInstance().getTxId();
    }

    public static final int ERROR_FIELD_NUMBER = 3;
    private int error_;
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 3;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Cardano.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Cardano.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Cardano.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Cardano.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Cardano.Proto.SigningOutput)
        wallet.core.jni.proto.Cardano.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Cardano.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Encoded transaction bytes
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Encoded transaction bytes
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Encoded transaction bytes
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * TxID, derived from transaction data, also needed for submission
       * </pre>
       *
       * <code>bytes tx_id = 2;</code>
       * @return The txId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTxId() {
        return instance.getTxId();
      }
      /**
       * <pre>
       * TxID, derived from transaction data, also needed for submission
       * </pre>
       *
       * <code>bytes tx_id = 2;</code>
       * @param value The txId to set.
       * @return This builder for chaining.
       */
      public Builder setTxId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTxId(value);
        return this;
      }
      /**
       * <pre>
       * TxID, derived from transaction data, also needed for submission
       * </pre>
       *
       * <code>bytes tx_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxId() {
        copyOnWrite();
        instance.clearTxId();
        return this;
      }

      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 3;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 3;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 3;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 3;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Cardano.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Cardano.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "txId_",
              "error_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Cardano.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Cardano.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Cardano.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Cardano.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Cardano.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Cardano.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
