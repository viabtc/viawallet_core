// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Decred.proto

package wallet.core.jni.proto;

public final class Decred {
  private Decred() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Decred.Proto.Transaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Serialization format
     * </pre>
     *
     * <code>uint32 serializeType = 1;</code>
     * @return The serializeType.
     */
    int getSerializeType();

    /**
     * <pre>
     * Transaction data format version
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    java.util.List<wallet.core.jni.proto.Decred.TransactionInput> 
        getInputsList();
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    wallet.core.jni.proto.Decred.TransactionInput getInputs(int index);
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    int getInputsCount();

    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    java.util.List<wallet.core.jni.proto.Decred.TransactionOutput> 
        getOutputsList();
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    wallet.core.jni.proto.Decred.TransactionOutput getOutputs(int index);
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    int getOutputsCount();

    /**
     * <pre>
     * The time when a transaction can be spent (usually zero, in which case it has no effect).
     * </pre>
     *
     * <code>uint32 lockTime = 5;</code>
     * @return The lockTime.
     */
    int getLockTime();

    /**
     * <pre>
     * The block height at which the transaction expires and is no longer valid.
     * </pre>
     *
     * <code>uint32 expiry = 6;</code>
     * @return The expiry.
     */
    int getExpiry();
  }
  /**
   * <pre>
   * A transfer transaction
   * </pre>
   *
   * Protobuf type {@code TW.Decred.Proto.Transaction}
   */
  public  static final class Transaction extends
      com.google.protobuf.GeneratedMessageLite<
          Transaction, Transaction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Decred.Proto.Transaction)
      TransactionOrBuilder {
    private Transaction() {
      inputs_ = emptyProtobufList();
      outputs_ = emptyProtobufList();
    }
    public static final int SERIALIZETYPE_FIELD_NUMBER = 1;
    private int serializeType_;
    /**
     * <pre>
     * Serialization format
     * </pre>
     *
     * <code>uint32 serializeType = 1;</code>
     * @return The serializeType.
     */
    @java.lang.Override
    public int getSerializeType() {
      return serializeType_;
    }
    /**
     * <pre>
     * Serialization format
     * </pre>
     *
     * <code>uint32 serializeType = 1;</code>
     * @param value The serializeType to set.
     */
    private void setSerializeType(int value) {
      
      serializeType_ = value;
    }
    /**
     * <pre>
     * Serialization format
     * </pre>
     *
     * <code>uint32 serializeType = 1;</code>
     */
    private void clearSerializeType() {
      
      serializeType_ = 0;
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    /**
     * <pre>
     * Transaction data format version
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Transaction data format version
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     * @param value The version to set.
     */
    private void setVersion(int value) {
      
      version_ = value;
    }
    /**
     * <pre>
     * Transaction data format version
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     */
    private void clearVersion() {
      
      version_ = 0;
    }

    public static final int INPUTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Decred.TransactionInput> inputs_;
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Decred.TransactionInput> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Decred.TransactionInputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    @java.lang.Override
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Decred.TransactionInput getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    public wallet.core.jni.proto.Decred.TransactionInputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }
    private void ensureInputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Decred.TransactionInput> tmp = inputs_;
      if (!tmp.isModifiable()) {
        inputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    private void setInputs(
        int index, wallet.core.jni.proto.Decred.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.set(index, value);
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    private void addInputs(wallet.core.jni.proto.Decred.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(value);
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    private void addInputs(
        int index, wallet.core.jni.proto.Decred.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(index, value);
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    private void addAllInputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.Decred.TransactionInput> values) {
      ensureInputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inputs_);
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    private void clearInputs() {
      inputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
     */
    private void removeInputs(int index) {
      ensureInputsIsMutable();
      inputs_.remove(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Decred.TransactionOutput> outputs_;
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.Decred.TransactionOutput> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Decred.TransactionOutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Decred.TransactionOutput getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    public wallet.core.jni.proto.Decred.TransactionOutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }
    private void ensureOutputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.Decred.TransactionOutput> tmp = outputs_;
      if (!tmp.isModifiable()) {
        outputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    private void setOutputs(
        int index, wallet.core.jni.proto.Decred.TransactionOutput value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.set(index, value);
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    private void addOutputs(wallet.core.jni.proto.Decred.TransactionOutput value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(value);
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    private void addOutputs(
        int index, wallet.core.jni.proto.Decred.TransactionOutput value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(index, value);
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    private void addAllOutputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.Decred.TransactionOutput> values) {
      ensureOutputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outputs_);
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    private void clearOutputs() {
      outputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
     */
    private void removeOutputs(int index) {
      ensureOutputsIsMutable();
      outputs_.remove(index);
    }

    public static final int LOCKTIME_FIELD_NUMBER = 5;
    private int lockTime_;
    /**
     * <pre>
     * The time when a transaction can be spent (usually zero, in which case it has no effect).
     * </pre>
     *
     * <code>uint32 lockTime = 5;</code>
     * @return The lockTime.
     */
    @java.lang.Override
    public int getLockTime() {
      return lockTime_;
    }
    /**
     * <pre>
     * The time when a transaction can be spent (usually zero, in which case it has no effect).
     * </pre>
     *
     * <code>uint32 lockTime = 5;</code>
     * @param value The lockTime to set.
     */
    private void setLockTime(int value) {
      
      lockTime_ = value;
    }
    /**
     * <pre>
     * The time when a transaction can be spent (usually zero, in which case it has no effect).
     * </pre>
     *
     * <code>uint32 lockTime = 5;</code>
     */
    private void clearLockTime() {
      
      lockTime_ = 0;
    }

    public static final int EXPIRY_FIELD_NUMBER = 6;
    private int expiry_;
    /**
     * <pre>
     * The block height at which the transaction expires and is no longer valid.
     * </pre>
     *
     * <code>uint32 expiry = 6;</code>
     * @return The expiry.
     */
    @java.lang.Override
    public int getExpiry() {
      return expiry_;
    }
    /**
     * <pre>
     * The block height at which the transaction expires and is no longer valid.
     * </pre>
     *
     * <code>uint32 expiry = 6;</code>
     * @param value The expiry to set.
     */
    private void setExpiry(int value) {
      
      expiry_ = value;
    }
    /**
     * <pre>
     * The block height at which the transaction expires and is no longer valid.
     * </pre>
     *
     * <code>uint32 expiry = 6;</code>
     */
    private void clearExpiry() {
      
      expiry_ = 0;
    }

    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Decred.Transaction prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A transfer transaction
     * </pre>
     *
     * Protobuf type {@code TW.Decred.Proto.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Decred.Transaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Decred.Proto.Transaction)
        wallet.core.jni.proto.Decred.TransactionOrBuilder {
      // Construct using wallet.core.jni.proto.Decred.Transaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Serialization format
       * </pre>
       *
       * <code>uint32 serializeType = 1;</code>
       * @return The serializeType.
       */
      @java.lang.Override
      public int getSerializeType() {
        return instance.getSerializeType();
      }
      /**
       * <pre>
       * Serialization format
       * </pre>
       *
       * <code>uint32 serializeType = 1;</code>
       * @param value The serializeType to set.
       * @return This builder for chaining.
       */
      public Builder setSerializeType(int value) {
        copyOnWrite();
        instance.setSerializeType(value);
        return this;
      }
      /**
       * <pre>
       * Serialization format
       * </pre>
       *
       * <code>uint32 serializeType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerializeType() {
        copyOnWrite();
        instance.clearSerializeType();
        return this;
      }

      /**
       * <pre>
       * Transaction data format version
       * </pre>
       *
       * <code>uint32 version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * Transaction data format version
       * </pre>
       *
       * <code>uint32 version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * Transaction data format version
       * </pre>
       *
       * <code>uint32 version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Decred.TransactionInput> getInputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getInputsList());
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      @java.lang.Override
      public int getInputsCount() {
        return instance.getInputsCount();
      }/**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Decred.TransactionInput getInputs(int index) {
        return instance.getInputs(index);
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.Decred.TransactionInput value) {
        copyOnWrite();
        instance.setInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.Decred.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.setInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(wallet.core.jni.proto.Decred.TransactionInput value) {
        copyOnWrite();
        instance.addInputs(value);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.Decred.TransactionInput value) {
        copyOnWrite();
        instance.addInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(
          wallet.core.jni.proto.Decred.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.Decred.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.Decred.TransactionInput> values) {
        copyOnWrite();
        instance.addAllInputs(values);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder clearInputs() {
        copyOnWrite();
        instance.clearInputs();
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder removeInputs(int index) {
        copyOnWrite();
        instance.removeInputs(index);
        return this;
      }

      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.Decred.TransactionOutput> getOutputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOutputsList());
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      @java.lang.Override
      public int getOutputsCount() {
        return instance.getOutputsCount();
      }/**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Decred.TransactionOutput getOutputs(int index) {
        return instance.getOutputs(index);
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.Decred.TransactionOutput value) {
        copyOnWrite();
        instance.setOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.Decred.TransactionOutput.Builder builderForValue) {
        copyOnWrite();
        instance.setOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(wallet.core.jni.proto.Decred.TransactionOutput value) {
        copyOnWrite();
        instance.addOutputs(value);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.Decred.TransactionOutput value) {
        copyOnWrite();
        instance.addOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(
          wallet.core.jni.proto.Decred.TransactionOutput.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.Decred.TransactionOutput.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.Decred.TransactionOutput> values) {
        copyOnWrite();
        instance.addAllOutputs(values);
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder clearOutputs() {
        copyOnWrite();
        instance.clearOutputs();
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Decred.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder removeOutputs(int index) {
        copyOnWrite();
        instance.removeOutputs(index);
        return this;
      }

      /**
       * <pre>
       * The time when a transaction can be spent (usually zero, in which case it has no effect).
       * </pre>
       *
       * <code>uint32 lockTime = 5;</code>
       * @return The lockTime.
       */
      @java.lang.Override
      public int getLockTime() {
        return instance.getLockTime();
      }
      /**
       * <pre>
       * The time when a transaction can be spent (usually zero, in which case it has no effect).
       * </pre>
       *
       * <code>uint32 lockTime = 5;</code>
       * @param value The lockTime to set.
       * @return This builder for chaining.
       */
      public Builder setLockTime(int value) {
        copyOnWrite();
        instance.setLockTime(value);
        return this;
      }
      /**
       * <pre>
       * The time when a transaction can be spent (usually zero, in which case it has no effect).
       * </pre>
       *
       * <code>uint32 lockTime = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLockTime() {
        copyOnWrite();
        instance.clearLockTime();
        return this;
      }

      /**
       * <pre>
       * The block height at which the transaction expires and is no longer valid.
       * </pre>
       *
       * <code>uint32 expiry = 6;</code>
       * @return The expiry.
       */
      @java.lang.Override
      public int getExpiry() {
        return instance.getExpiry();
      }
      /**
       * <pre>
       * The block height at which the transaction expires and is no longer valid.
       * </pre>
       *
       * <code>uint32 expiry = 6;</code>
       * @param value The expiry to set.
       * @return This builder for chaining.
       */
      public Builder setExpiry(int value) {
        copyOnWrite();
        instance.setExpiry(value);
        return this;
      }
      /**
       * <pre>
       * The block height at which the transaction expires and is no longer valid.
       * </pre>
       *
       * <code>uint32 expiry = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpiry() {
        copyOnWrite();
        instance.clearExpiry();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Decred.Proto.Transaction)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Decred.Transaction();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "serializeType_",
              "version_",
              "inputs_",
              wallet.core.jni.proto.Decred.TransactionInput.class,
              "outputs_",
              wallet.core.jni.proto.Decred.TransactionOutput.class,
              "lockTime_",
              "expiry_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0002\u0000\u0001\u000b\u0002\u000b" +
                "\u0003\u001b\u0004\u001b\u0005\u000b\u0006\u000b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Decred.Transaction> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Decred.Transaction.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Decred.Transaction>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Decred.Proto.Transaction)
    private static final wallet.core.jni.proto.Decred.Transaction DEFAULT_INSTANCE;
    static {
      Transaction defaultInstance = new Transaction();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Transaction.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Decred.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Transaction> PARSER;

    public static com.google.protobuf.Parser<Transaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Decred.Proto.TransactionInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     * @return Whether the previousOutput field is set.
     */
    boolean hasPreviousOutput();
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     * @return The previousOutput.
     */
    wallet.core.jni.proto.Bitcoin.OutPoint getPreviousOutput();

    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     * @return The sequence.
     */
    int getSequence();

    /**
     * <pre>
     * The amount of the input
     * </pre>
     *
     * <code>int64 valueIn = 3;</code>
     * @return The valueIn.
     */
    long getValueIn();

    /**
     * <pre>
     * Creation block height
     * </pre>
     *
     * <code>uint32 blockHeight = 4;</code>
     * @return The blockHeight.
     */
    int getBlockHeight();

    /**
     * <pre>
     * Index within the block
     * </pre>
     *
     * <code>uint32 blockIndex = 5;</code>
     * @return The blockIndex.
     */
    int getBlockIndex();

    /**
     * <pre>
     * Computational script for confirming transaction authorization.
     * </pre>
     *
     * <code>bytes script = 6;</code>
     * @return The script.
     */
    com.google.protobuf.ByteString getScript();
  }
  /**
   * <pre>
   * Decred transaction input.
   * </pre>
   *
   * Protobuf type {@code TW.Decred.Proto.TransactionInput}
   */
  public  static final class TransactionInput extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionInput, TransactionInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Decred.Proto.TransactionInput)
      TransactionInputOrBuilder {
    private TransactionInput() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int PREVIOUSOUTPUT_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Bitcoin.OutPoint previousOutput_;
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    @java.lang.Override
    public boolean hasPreviousOutput() {
      return previousOutput_ != null;
    }
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.OutPoint getPreviousOutput() {
      return previousOutput_ == null ? wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : previousOutput_;
    }
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    private void setPreviousOutput(wallet.core.jni.proto.Bitcoin.OutPoint value) {
      value.getClass();
  previousOutput_ = value;
      
      }
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePreviousOutput(wallet.core.jni.proto.Bitcoin.OutPoint value) {
      value.getClass();
  if (previousOutput_ != null &&
          previousOutput_ != wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance()) {
        previousOutput_ =
          wallet.core.jni.proto.Bitcoin.OutPoint.newBuilder(previousOutput_).mergeFrom(value).buildPartial();
      } else {
        previousOutput_ = value;
      }
      
    }
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    private void clearPreviousOutput() {  previousOutput_ = null;
      
    }

    public static final int SEQUENCE_FIELD_NUMBER = 2;
    private int sequence_;
    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     * @return The sequence.
     */
    @java.lang.Override
    public int getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     * @param value The sequence to set.
     */
    private void setSequence(int value) {
      
      sequence_ = value;
    }
    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     */
    private void clearSequence() {
      
      sequence_ = 0;
    }

    public static final int VALUEIN_FIELD_NUMBER = 3;
    private long valueIn_;
    /**
     * <pre>
     * The amount of the input
     * </pre>
     *
     * <code>int64 valueIn = 3;</code>
     * @return The valueIn.
     */
    @java.lang.Override
    public long getValueIn() {
      return valueIn_;
    }
    /**
     * <pre>
     * The amount of the input
     * </pre>
     *
     * <code>int64 valueIn = 3;</code>
     * @param value The valueIn to set.
     */
    private void setValueIn(long value) {
      
      valueIn_ = value;
    }
    /**
     * <pre>
     * The amount of the input
     * </pre>
     *
     * <code>int64 valueIn = 3;</code>
     */
    private void clearValueIn() {
      
      valueIn_ = 0L;
    }

    public static final int BLOCKHEIGHT_FIELD_NUMBER = 4;
    private int blockHeight_;
    /**
     * <pre>
     * Creation block height
     * </pre>
     *
     * <code>uint32 blockHeight = 4;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public int getBlockHeight() {
      return blockHeight_;
    }
    /**
     * <pre>
     * Creation block height
     * </pre>
     *
     * <code>uint32 blockHeight = 4;</code>
     * @param value The blockHeight to set.
     */
    private void setBlockHeight(int value) {
      
      blockHeight_ = value;
    }
    /**
     * <pre>
     * Creation block height
     * </pre>
     *
     * <code>uint32 blockHeight = 4;</code>
     */
    private void clearBlockHeight() {
      
      blockHeight_ = 0;
    }

    public static final int BLOCKINDEX_FIELD_NUMBER = 5;
    private int blockIndex_;
    /**
     * <pre>
     * Index within the block
     * </pre>
     *
     * <code>uint32 blockIndex = 5;</code>
     * @return The blockIndex.
     */
    @java.lang.Override
    public int getBlockIndex() {
      return blockIndex_;
    }
    /**
     * <pre>
     * Index within the block
     * </pre>
     *
     * <code>uint32 blockIndex = 5;</code>
     * @param value The blockIndex to set.
     */
    private void setBlockIndex(int value) {
      
      blockIndex_ = value;
    }
    /**
     * <pre>
     * Index within the block
     * </pre>
     *
     * <code>uint32 blockIndex = 5;</code>
     */
    private void clearBlockIndex() {
      
      blockIndex_ = 0;
    }

    public static final int SCRIPT_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString script_;
    /**
     * <pre>
     * Computational script for confirming transaction authorization.
     * </pre>
     *
     * <code>bytes script = 6;</code>
     * @return The script.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }
    /**
     * <pre>
     * Computational script for confirming transaction authorization.
     * </pre>
     *
     * <code>bytes script = 6;</code>
     * @param value The script to set.
     */
    private void setScript(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      script_ = value;
    }
    /**
     * <pre>
     * Computational script for confirming transaction authorization.
     * </pre>
     *
     * <code>bytes script = 6;</code>
     */
    private void clearScript() {
      
      script_ = getDefaultInstance().getScript();
    }

    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.TransactionInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Decred.TransactionInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Decred transaction input.
     * </pre>
     *
     * Protobuf type {@code TW.Decred.Proto.TransactionInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Decred.TransactionInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Decred.Proto.TransactionInput)
        wallet.core.jni.proto.Decred.TransactionInputOrBuilder {
      // Construct using wallet.core.jni.proto.Decred.TransactionInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      @java.lang.Override
      public boolean hasPreviousOutput() {
        return instance.hasPreviousOutput();
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.OutPoint getPreviousOutput() {
        return instance.getPreviousOutput();
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder setPreviousOutput(wallet.core.jni.proto.Bitcoin.OutPoint value) {
        copyOnWrite();
        instance.setPreviousOutput(value);
        return this;
        }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder setPreviousOutput(
          wallet.core.jni.proto.Bitcoin.OutPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPreviousOutput(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder mergePreviousOutput(wallet.core.jni.proto.Bitcoin.OutPoint value) {
        copyOnWrite();
        instance.mergePreviousOutput(value);
        return this;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder clearPreviousOutput() {  copyOnWrite();
        instance.clearPreviousOutput();
        return this;
      }

      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 2;</code>
       * @return The sequence.
       */
      @java.lang.Override
      public int getSequence() {
        return instance.getSequence();
      }
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 2;</code>
       * @param value The sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequence(int value) {
        copyOnWrite();
        instance.setSequence(value);
        return this;
      }
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequence() {
        copyOnWrite();
        instance.clearSequence();
        return this;
      }

      /**
       * <pre>
       * The amount of the input
       * </pre>
       *
       * <code>int64 valueIn = 3;</code>
       * @return The valueIn.
       */
      @java.lang.Override
      public long getValueIn() {
        return instance.getValueIn();
      }
      /**
       * <pre>
       * The amount of the input
       * </pre>
       *
       * <code>int64 valueIn = 3;</code>
       * @param value The valueIn to set.
       * @return This builder for chaining.
       */
      public Builder setValueIn(long value) {
        copyOnWrite();
        instance.setValueIn(value);
        return this;
      }
      /**
       * <pre>
       * The amount of the input
       * </pre>
       *
       * <code>int64 valueIn = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueIn() {
        copyOnWrite();
        instance.clearValueIn();
        return this;
      }

      /**
       * <pre>
       * Creation block height
       * </pre>
       *
       * <code>uint32 blockHeight = 4;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public int getBlockHeight() {
        return instance.getBlockHeight();
      }
      /**
       * <pre>
       * Creation block height
       * </pre>
       *
       * <code>uint32 blockHeight = 4;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(int value) {
        copyOnWrite();
        instance.setBlockHeight(value);
        return this;
      }
      /**
       * <pre>
       * Creation block height
       * </pre>
       *
       * <code>uint32 blockHeight = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        copyOnWrite();
        instance.clearBlockHeight();
        return this;
      }

      /**
       * <pre>
       * Index within the block
       * </pre>
       *
       * <code>uint32 blockIndex = 5;</code>
       * @return The blockIndex.
       */
      @java.lang.Override
      public int getBlockIndex() {
        return instance.getBlockIndex();
      }
      /**
       * <pre>
       * Index within the block
       * </pre>
       *
       * <code>uint32 blockIndex = 5;</code>
       * @param value The blockIndex to set.
       * @return This builder for chaining.
       */
      public Builder setBlockIndex(int value) {
        copyOnWrite();
        instance.setBlockIndex(value);
        return this;
      }
      /**
       * <pre>
       * Index within the block
       * </pre>
       *
       * <code>uint32 blockIndex = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockIndex() {
        copyOnWrite();
        instance.clearBlockIndex();
        return this;
      }

      /**
       * <pre>
       * Computational script for confirming transaction authorization.
       * </pre>
       *
       * <code>bytes script = 6;</code>
       * @return The script.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getScript() {
        return instance.getScript();
      }
      /**
       * <pre>
       * Computational script for confirming transaction authorization.
       * </pre>
       *
       * <code>bytes script = 6;</code>
       * @param value The script to set.
       * @return This builder for chaining.
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setScript(value);
        return this;
      }
      /**
       * <pre>
       * Computational script for confirming transaction authorization.
       * </pre>
       *
       * <code>bytes script = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearScript() {
        copyOnWrite();
        instance.clearScript();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Decred.Proto.TransactionInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Decred.TransactionInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "previousOutput_",
              "sequence_",
              "valueIn_",
              "blockHeight_",
              "blockIndex_",
              "script_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\t\u0002\u000b" +
                "\u0003\u0002\u0004\u000b\u0005\u000b\u0006\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Decred.TransactionInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Decred.TransactionInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Decred.TransactionInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Decred.Proto.TransactionInput)
    private static final wallet.core.jni.proto.Decred.TransactionInput DEFAULT_INSTANCE;
    static {
      TransactionInput defaultInstance = new TransactionInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Decred.TransactionInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionInput> PARSER;

    public static com.google.protobuf.Parser<TransactionInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Decred.Proto.TransactionOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Transaction amount.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     * @return The value.
     */
    long getValue();

    /**
     * <pre>
     * Transaction output version.
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * Usually contains the public key as a Decred script setting up conditions to claim this output.
     * </pre>
     *
     * <code>bytes script = 3;</code>
     * @return The script.
     */
    com.google.protobuf.ByteString getScript();
  }
  /**
   * <pre>
   * Decred transaction output.
   * </pre>
   *
   * Protobuf type {@code TW.Decred.Proto.TransactionOutput}
   */
  public  static final class TransactionOutput extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionOutput, TransactionOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Decred.Proto.TransactionOutput)
      TransactionOutputOrBuilder {
    private TransactionOutput() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <pre>
     * Transaction amount.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public long getValue() {
      return value_;
    }
    /**
     * <pre>
     * Transaction amount.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     * @param value The value to set.
     */
    private void setValue(long value) {
      
      value_ = value;
    }
    /**
     * <pre>
     * Transaction amount.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     */
    private void clearValue() {
      
      value_ = 0L;
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    /**
     * <pre>
     * Transaction output version.
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Transaction output version.
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     * @param value The version to set.
     */
    private void setVersion(int value) {
      
      version_ = value;
    }
    /**
     * <pre>
     * Transaction output version.
     * </pre>
     *
     * <code>uint32 version = 2;</code>
     */
    private void clearVersion() {
      
      version_ = 0;
    }

    public static final int SCRIPT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString script_;
    /**
     * <pre>
     * Usually contains the public key as a Decred script setting up conditions to claim this output.
     * </pre>
     *
     * <code>bytes script = 3;</code>
     * @return The script.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }
    /**
     * <pre>
     * Usually contains the public key as a Decred script setting up conditions to claim this output.
     * </pre>
     *
     * <code>bytes script = 3;</code>
     * @param value The script to set.
     */
    private void setScript(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      script_ = value;
    }
    /**
     * <pre>
     * Usually contains the public key as a Decred script setting up conditions to claim this output.
     * </pre>
     *
     * <code>bytes script = 3;</code>
     */
    private void clearScript() {
      
      script_ = getDefaultInstance().getScript();
    }

    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.TransactionOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Decred.TransactionOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Decred transaction output.
     * </pre>
     *
     * Protobuf type {@code TW.Decred.Proto.TransactionOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Decred.TransactionOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Decred.Proto.TransactionOutput)
        wallet.core.jni.proto.Decred.TransactionOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Decred.TransactionOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Transaction amount.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public long getValue() {
        return instance.getValue();
      }
      /**
       * <pre>
       * Transaction amount.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(long value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <pre>
       * Transaction amount.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }

      /**
       * <pre>
       * Transaction output version.
       * </pre>
       *
       * <code>uint32 version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * Transaction output version.
       * </pre>
       *
       * <code>uint32 version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * Transaction output version.
       * </pre>
       *
       * <code>uint32 version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * Usually contains the public key as a Decred script setting up conditions to claim this output.
       * </pre>
       *
       * <code>bytes script = 3;</code>
       * @return The script.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getScript() {
        return instance.getScript();
      }
      /**
       * <pre>
       * Usually contains the public key as a Decred script setting up conditions to claim this output.
       * </pre>
       *
       * <code>bytes script = 3;</code>
       * @param value The script to set.
       * @return This builder for chaining.
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setScript(value);
        return this;
      }
      /**
       * <pre>
       * Usually contains the public key as a Decred script setting up conditions to claim this output.
       * </pre>
       *
       * <code>bytes script = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScript() {
        copyOnWrite();
        instance.clearScript();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Decred.Proto.TransactionOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Decred.TransactionOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "value_",
              "version_",
              "script_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0002\u0002\u000b" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Decred.TransactionOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Decred.TransactionOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Decred.TransactionOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Decred.Proto.TransactionOutput)
    private static final wallet.core.jni.proto.Decred.TransactionOutput DEFAULT_INSTANCE;
    static {
      TransactionOutput defaultInstance = new TransactionOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Decred.TransactionOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionOutput> PARSER;

    public static com.google.protobuf.Parser<TransactionOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Decred.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    boolean hasTransaction();
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    wallet.core.jni.proto.Decred.Transaction getTransaction();

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 2;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     * @return The transactionId.
     */
    java.lang.String getTransactionId();
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     * @return The bytes for transactionId.
     */
    com.google.protobuf.ByteString
        getTransactionIdBytes();

    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Decred.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Decred.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      transactionId_ = "";
    }
    public static final int TRANSACTION_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Decred.Transaction transaction_;
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Decred.Transaction getTransaction() {
      return transaction_ == null ? wallet.core.jni.proto.Decred.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     */
    private void setTransaction(wallet.core.jni.proto.Decred.Transaction value) {
      value.getClass();
  transaction_ = value;
      
      }
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTransaction(wallet.core.jni.proto.Decred.Transaction value) {
      value.getClass();
  if (transaction_ != null &&
          transaction_ != wallet.core.jni.proto.Decred.Transaction.getDefaultInstance()) {
        transaction_ =
          wallet.core.jni.proto.Decred.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
      } else {
        transaction_ = value;
      }
      
    }
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
     */
    private void clearTransaction() {  transaction_ = null;
      
    }

    public static final int ENCODED_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 2;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 2;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 2;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int TRANSACTION_ID_FIELD_NUMBER = 3;
    private java.lang.String transactionId_;
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     * @return The transactionId.
     */
    @java.lang.Override
    public java.lang.String getTransactionId() {
      return transactionId_;
    }
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     * @return The bytes for transactionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTransactionIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(transactionId_);
    }
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     * @param value The transactionId to set.
     */
    private void setTransactionId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      transactionId_ = value;
    }
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     */
    private void clearTransactionId() {
      
      transactionId_ = getDefaultInstance().getTransactionId();
    }
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 3;</code>
     * @param value The bytes for transactionId to set.
     */
    private void setTransactionIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      transactionId_ = value.toStringUtf8();
      
    }

    public static final int ERROR_FIELD_NUMBER = 4;
    private int error_;
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Decred.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Decred.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Decred.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Decred.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Decred.Proto.SigningOutput)
        wallet.core.jni.proto.Decred.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Decred.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
       */
      @java.lang.Override
      public boolean hasTransaction() {
        return instance.hasTransaction();
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Decred.Transaction getTransaction() {
        return instance.getTransaction();
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(wallet.core.jni.proto.Decred.Transaction value) {
        copyOnWrite();
        instance.setTransaction(value);
        return this;
        }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(
          wallet.core.jni.proto.Decred.Transaction.Builder builderForValue) {
        copyOnWrite();
        instance.setTransaction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
       */
      public Builder mergeTransaction(wallet.core.jni.proto.Decred.Transaction value) {
        copyOnWrite();
        instance.mergeTransaction(value);
        return this;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Decred.Proto.Transaction transaction = 1;</code>
       */
      public Builder clearTransaction() {  copyOnWrite();
        instance.clearTransaction();
        return this;
      }

      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 2;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 2;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 3;</code>
       * @return The transactionId.
       */
      @java.lang.Override
      public java.lang.String getTransactionId() {
        return instance.getTransactionId();
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 3;</code>
       * @return The bytes for transactionId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTransactionIdBytes() {
        return instance.getTransactionIdBytes();
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 3;</code>
       * @param value The transactionId to set.
       * @return This builder for chaining.
       */
      public Builder setTransactionId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTransactionId(value);
        return this;
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransactionId() {
        copyOnWrite();
        instance.clearTransactionId();
        return this;
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 3;</code>
       * @param value The bytes for transactionId to set.
       * @return This builder for chaining.
       */
      public Builder setTransactionIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTransactionIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Decred.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Decred.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "transaction_",
              "encoded_",
              "transactionId_",
              "error_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\t\u0002\n\u0003" +
                "\u0208\u0004\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Decred.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Decred.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Decred.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Decred.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Decred.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Decred.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
