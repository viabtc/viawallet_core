// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Elrond.proto

package wallet.core.jni.proto;

public final class Elrond {
  private Elrond() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GenericActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.GenericAction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return Whether the accounts field is set.
     */
    boolean hasAccounts();
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return The accounts.
     */
    wallet.core.jni.proto.Elrond.Accounts getAccounts();

    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     * @return The data.
     */
    java.lang.String getData();
    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     * @return The bytes for data.
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <pre>
     * transaction version
     * </pre>
     *
     * <code>uint32 version = 4;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * Currently, the "options" field should be ignored (not set) by applications using TW Core.
     * In the future, TW Core will handle specific transaction options 
     * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
     * when building and signing transactions.
     * </pre>
     *
     * <code>uint32 options = 5;</code>
     * @return The options.
     */
    int getOptions();
  }
  /**
   * <pre>
   * Generic action. Using one of the more specific actions (e.g. transfers, see below) is recommended.
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.GenericAction}
   */
  public  static final class GenericAction extends
      com.google.protobuf.GeneratedMessageLite<
          GenericAction, GenericAction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.GenericAction)
      GenericActionOrBuilder {
    private GenericAction() {
      value_ = "";
      data_ = "";
    }
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Elrond.Accounts accounts_;
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public boolean hasAccounts() {
      return accounts_ != null;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
      return accounts_ == null ? wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance() : accounts_;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  accounts_ = value;
      
      }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  if (accounts_ != null &&
          accounts_ != wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance()) {
        accounts_ =
          wallet.core.jni.proto.Elrond.Accounts.newBuilder(accounts_).mergeFrom(value).buildPartial();
      } else {
        accounts_ = value;
      }
      
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void clearAccounts() {  accounts_ = null;
      
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.String value_;
    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      return value_;
    }
    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(value_);
    }
    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     * @param value The value to set.
     */
    private void setValue(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      value_ = value;
    }
    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    private void clearValue() {
      
      value_ = getDefaultInstance().getValue();
    }
    /**
     * <pre>
     * amount
     * </pre>
     *
     * <code>string value = 2;</code>
     * @param value The bytes for value to set.
     */
    private void setValueBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      value_ = value.toStringUtf8();
      
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private java.lang.String data_;
    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public java.lang.String getData() {
      return data_;
    }
    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     * @return The bytes for data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(data_);
    }
    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     * @param value The data to set.
     */
    private void setData(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      data_ = value;
    }
    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }
    /**
     * <pre>
     * additional data
     * </pre>
     *
     * <code>string data = 3;</code>
     * @param value The bytes for data to set.
     */
    private void setDataBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      data_ = value.toStringUtf8();
      
    }

    public static final int VERSION_FIELD_NUMBER = 4;
    private int version_;
    /**
     * <pre>
     * transaction version
     * </pre>
     *
     * <code>uint32 version = 4;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * transaction version
     * </pre>
     *
     * <code>uint32 version = 4;</code>
     * @param value The version to set.
     */
    private void setVersion(int value) {
      
      version_ = value;
    }
    /**
     * <pre>
     * transaction version
     * </pre>
     *
     * <code>uint32 version = 4;</code>
     */
    private void clearVersion() {
      
      version_ = 0;
    }

    public static final int OPTIONS_FIELD_NUMBER = 5;
    private int options_;
    /**
     * <pre>
     * Currently, the "options" field should be ignored (not set) by applications using TW Core.
     * In the future, TW Core will handle specific transaction options 
     * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
     * when building and signing transactions.
     * </pre>
     *
     * <code>uint32 options = 5;</code>
     * @return The options.
     */
    @java.lang.Override
    public int getOptions() {
      return options_;
    }
    /**
     * <pre>
     * Currently, the "options" field should be ignored (not set) by applications using TW Core.
     * In the future, TW Core will handle specific transaction options 
     * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
     * when building and signing transactions.
     * </pre>
     *
     * <code>uint32 options = 5;</code>
     * @param value The options to set.
     */
    private void setOptions(int value) {
      
      options_ = value;
    }
    /**
     * <pre>
     * Currently, the "options" field should be ignored (not set) by applications using TW Core.
     * In the future, TW Core will handle specific transaction options 
     * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
     * when building and signing transactions.
     * </pre>
     *
     * <code>uint32 options = 5;</code>
     */
    private void clearOptions() {
      
      options_ = 0;
    }

    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.GenericAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.GenericAction prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Generic action. Using one of the more specific actions (e.g. transfers, see below) is recommended.
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.GenericAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.GenericAction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.GenericAction)
        wallet.core.jni.proto.Elrond.GenericActionOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.GenericAction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public boolean hasAccounts() {
        return instance.hasAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
        return instance.getAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.setAccounts(value);
        return this;
        }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(
          wallet.core.jni.proto.Elrond.Accounts.Builder builderForValue) {
        copyOnWrite();
        instance.setAccounts(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.mergeAccounts(value);
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder clearAccounts() {  copyOnWrite();
        instance.clearAccounts();
        return this;
      }

      /**
       * <pre>
       * amount
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        return instance.getValue();
      }
      /**
       * <pre>
       * amount
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        return instance.getValueBytes();
      }
      /**
       * <pre>
       * amount
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <pre>
       * amount
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <pre>
       * amount
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValueBytes(value);
        return this;
      }

      /**
       * <pre>
       * additional data
       * </pre>
       *
       * <code>string data = 3;</code>
       * @return The data.
       */
      @java.lang.Override
      public java.lang.String getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * additional data
       * </pre>
       *
       * <code>string data = 3;</code>
       * @return The bytes for data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDataBytes() {
        return instance.getDataBytes();
      }
      /**
       * <pre>
       * additional data
       * </pre>
       *
       * <code>string data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          java.lang.String value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * additional data
       * </pre>
       *
       * <code>string data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }
      /**
       * <pre>
       * additional data
       * </pre>
       *
       * <code>string data = 3;</code>
       * @param value The bytes for data to set.
       * @return This builder for chaining.
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataBytes(value);
        return this;
      }

      /**
       * <pre>
       * transaction version
       * </pre>
       *
       * <code>uint32 version = 4;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * transaction version
       * </pre>
       *
       * <code>uint32 version = 4;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * transaction version
       * </pre>
       *
       * <code>uint32 version = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * Currently, the "options" field should be ignored (not set) by applications using TW Core.
       * In the future, TW Core will handle specific transaction options 
       * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
       * when building and signing transactions.
       * </pre>
       *
       * <code>uint32 options = 5;</code>
       * @return The options.
       */
      @java.lang.Override
      public int getOptions() {
        return instance.getOptions();
      }
      /**
       * <pre>
       * Currently, the "options" field should be ignored (not set) by applications using TW Core.
       * In the future, TW Core will handle specific transaction options 
       * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
       * when building and signing transactions.
       * </pre>
       *
       * <code>uint32 options = 5;</code>
       * @param value The options to set.
       * @return This builder for chaining.
       */
      public Builder setOptions(int value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
      }
      /**
       * <pre>
       * Currently, the "options" field should be ignored (not set) by applications using TW Core.
       * In the future, TW Core will handle specific transaction options 
       * (such as the "SignedWithHash" flag, as seen in https://github.com/ElrondNetwork/elrond-go-core/blob/main/core/versioning/txVersionChecker.go)
       * when building and signing transactions.
       * </pre>
       *
       * <code>uint32 options = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptions() {
        copyOnWrite();
        instance.clearOptions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.GenericAction)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.GenericAction();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "accounts_",
              "value_",
              "data_",
              "version_",
              "options_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\t\u0002\u0208" +
                "\u0003\u0208\u0004\u000b\u0005\u000b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.GenericAction> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.GenericAction.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.GenericAction>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.GenericAction)
    private static final wallet.core.jni.proto.Elrond.GenericAction DEFAULT_INSTANCE;
    static {
      GenericAction defaultInstance = new GenericAction();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GenericAction.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.GenericAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GenericAction> PARSER;

    public static com.google.protobuf.Parser<GenericAction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EGLDTransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.EGLDTransfer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return Whether the accounts field is set.
     */
    boolean hasAccounts();
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return The accounts.
     */
    wallet.core.jni.proto.Elrond.Accounts getAccounts();

    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();
  }
  /**
   * <pre>
   * EGLD transfer (move balance).
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.EGLDTransfer}
   */
  public  static final class EGLDTransfer extends
      com.google.protobuf.GeneratedMessageLite<
          EGLDTransfer, EGLDTransfer.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.EGLDTransfer)
      EGLDTransferOrBuilder {
    private EGLDTransfer() {
      amount_ = "";
    }
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Elrond.Accounts accounts_;
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public boolean hasAccounts() {
      return accounts_ != null;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
      return accounts_ == null ? wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance() : accounts_;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  accounts_ = value;
      
      }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  if (accounts_ != null &&
          accounts_ != wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance()) {
        accounts_ =
          wallet.core.jni.proto.Elrond.Accounts.newBuilder(accounts_).mergeFrom(value).buildPartial();
      } else {
        accounts_ = value;
      }
      
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void clearAccounts() {  accounts_ = null;
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private java.lang.String amount_;
    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(amount_);
    }
    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     * @param value The amount to set.
     */
    private void setAmount(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      amount_ = value;
    }
    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = getDefaultInstance().getAmount();
    }
    /**
     * <pre>
     * Transfer amount (string)
     * </pre>
     *
     * <code>string amount = 2;</code>
     * @param value The bytes for amount to set.
     */
    private void setAmountBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      amount_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.EGLDTransfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.EGLDTransfer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * EGLD transfer (move balance).
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.EGLDTransfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.EGLDTransfer, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.EGLDTransfer)
        wallet.core.jni.proto.Elrond.EGLDTransferOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.EGLDTransfer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public boolean hasAccounts() {
        return instance.hasAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
        return instance.getAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.setAccounts(value);
        return this;
        }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(
          wallet.core.jni.proto.Elrond.Accounts.Builder builderForValue) {
        copyOnWrite();
        instance.setAccounts(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.mergeAccounts(value);
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder clearAccounts() {  copyOnWrite();
        instance.clearAccounts();
        return this;
      }

      /**
       * <pre>
       * Transfer amount (string)
       * </pre>
       *
       * <code>string amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public java.lang.String getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Transfer amount (string)
       * </pre>
       *
       * <code>string amount = 2;</code>
       * @return The bytes for amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAmountBytes() {
        return instance.getAmountBytes();
      }
      /**
       * <pre>
       * Transfer amount (string)
       * </pre>
       *
       * <code>string amount = 2;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Transfer amount (string)
       * </pre>
       *
       * <code>string amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * Transfer amount (string)
       * </pre>
       *
       * <code>string amount = 2;</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAmountBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.EGLDTransfer)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.EGLDTransfer();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "accounts_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.EGLDTransfer> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.EGLDTransfer.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.EGLDTransfer>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.EGLDTransfer)
    private static final wallet.core.jni.proto.Elrond.EGLDTransfer DEFAULT_INSTANCE;
    static {
      EGLDTransfer defaultInstance = new EGLDTransfer();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        EGLDTransfer.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.EGLDTransfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EGLDTransfer> PARSER;

    public static com.google.protobuf.Parser<EGLDTransfer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ESDTTransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.ESDTTransfer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return Whether the accounts field is set.
     */
    boolean hasAccounts();
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return The accounts.
     */
    wallet.core.jni.proto.Elrond.Accounts getAccounts();

    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     * @return The tokenIdentifier.
     */
    java.lang.String getTokenIdentifier();
    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     * @return The bytes for tokenIdentifier.
     */
    com.google.protobuf.ByteString
        getTokenIdentifierBytes();

    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();
  }
  /**
   * <pre>
   * ESDT transfer (transfer regular ESDTs - fungible tokens).
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.ESDTTransfer}
   */
  public  static final class ESDTTransfer extends
      com.google.protobuf.GeneratedMessageLite<
          ESDTTransfer, ESDTTransfer.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.ESDTTransfer)
      ESDTTransferOrBuilder {
    private ESDTTransfer() {
      tokenIdentifier_ = "";
      amount_ = "";
    }
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Elrond.Accounts accounts_;
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public boolean hasAccounts() {
      return accounts_ != null;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
      return accounts_ == null ? wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance() : accounts_;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  accounts_ = value;
      
      }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  if (accounts_ != null &&
          accounts_ != wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance()) {
        accounts_ =
          wallet.core.jni.proto.Elrond.Accounts.newBuilder(accounts_).mergeFrom(value).buildPartial();
      } else {
        accounts_ = value;
      }
      
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void clearAccounts() {  accounts_ = null;
      
    }

    public static final int TOKEN_IDENTIFIER_FIELD_NUMBER = 2;
    private java.lang.String tokenIdentifier_;
    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     * @return The tokenIdentifier.
     */
    @java.lang.Override
    public java.lang.String getTokenIdentifier() {
      return tokenIdentifier_;
    }
    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     * @return The bytes for tokenIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenIdentifierBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(tokenIdentifier_);
    }
    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     * @param value The tokenIdentifier to set.
     */
    private void setTokenIdentifier(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      tokenIdentifier_ = value;
    }
    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     */
    private void clearTokenIdentifier() {
      
      tokenIdentifier_ = getDefaultInstance().getTokenIdentifier();
    }
    /**
     * <pre>
     * Token ID
     * </pre>
     *
     * <code>string token_identifier = 2;</code>
     * @param value The bytes for tokenIdentifier to set.
     */
    private void setTokenIdentifierBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      tokenIdentifier_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private java.lang.String amount_;
    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(amount_);
    }
    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     * @param value The amount to set.
     */
    private void setAmount(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      amount_ = value;
    }
    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = getDefaultInstance().getAmount();
    }
    /**
     * <pre>
     * Transfer token amount (string)
     * </pre>
     *
     * <code>string amount = 3;</code>
     * @param value The bytes for amount to set.
     */
    private void setAmountBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      amount_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.ESDTTransfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.ESDTTransfer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ESDT transfer (transfer regular ESDTs - fungible tokens).
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.ESDTTransfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.ESDTTransfer, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.ESDTTransfer)
        wallet.core.jni.proto.Elrond.ESDTTransferOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.ESDTTransfer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public boolean hasAccounts() {
        return instance.hasAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
        return instance.getAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.setAccounts(value);
        return this;
        }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(
          wallet.core.jni.proto.Elrond.Accounts.Builder builderForValue) {
        copyOnWrite();
        instance.setAccounts(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.mergeAccounts(value);
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder clearAccounts() {  copyOnWrite();
        instance.clearAccounts();
        return this;
      }

      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string token_identifier = 2;</code>
       * @return The tokenIdentifier.
       */
      @java.lang.Override
      public java.lang.String getTokenIdentifier() {
        return instance.getTokenIdentifier();
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string token_identifier = 2;</code>
       * @return The bytes for tokenIdentifier.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenIdentifierBytes() {
        return instance.getTokenIdentifierBytes();
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string token_identifier = 2;</code>
       * @param value The tokenIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setTokenIdentifier(
          java.lang.String value) {
        copyOnWrite();
        instance.setTokenIdentifier(value);
        return this;
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string token_identifier = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenIdentifier() {
        copyOnWrite();
        instance.clearTokenIdentifier();
        return this;
      }
      /**
       * <pre>
       * Token ID
       * </pre>
       *
       * <code>string token_identifier = 2;</code>
       * @param value The bytes for tokenIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setTokenIdentifierBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenIdentifierBytes(value);
        return this;
      }

      /**
       * <pre>
       * Transfer token amount (string)
       * </pre>
       *
       * <code>string amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public java.lang.String getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Transfer token amount (string)
       * </pre>
       *
       * <code>string amount = 3;</code>
       * @return The bytes for amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAmountBytes() {
        return instance.getAmountBytes();
      }
      /**
       * <pre>
       * Transfer token amount (string)
       * </pre>
       *
       * <code>string amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Transfer token amount (string)
       * </pre>
       *
       * <code>string amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * Transfer token amount (string)
       * </pre>
       *
       * <code>string amount = 3;</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAmountBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.ESDTTransfer)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.ESDTTransfer();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "accounts_",
              "tokenIdentifier_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\t\u0002\u0208" +
                "\u0003\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.ESDTTransfer> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.ESDTTransfer.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.ESDTTransfer>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.ESDTTransfer)
    private static final wallet.core.jni.proto.Elrond.ESDTTransfer DEFAULT_INSTANCE;
    static {
      ESDTTransfer defaultInstance = new ESDTTransfer();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ESDTTransfer.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.ESDTTransfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ESDTTransfer> PARSER;

    public static com.google.protobuf.Parser<ESDTTransfer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ESDTNFTTransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.ESDTNFTTransfer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return Whether the accounts field is set.
     */
    boolean hasAccounts();
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     * @return The accounts.
     */
    wallet.core.jni.proto.Elrond.Accounts getAccounts();

    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     * @return The tokenCollection.
     */
    java.lang.String getTokenCollection();
    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     * @return The bytes for tokenCollection.
     */
    com.google.protobuf.ByteString
        getTokenCollectionBytes();

    /**
     * <pre>
     * nonce of the token
     * </pre>
     *
     * <code>uint64 token_nonce = 3;</code>
     * @return The tokenNonce.
     */
    long getTokenNonce();

    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();
  }
  /**
   * <pre>
   * ESDTNFT transfer (transfer NFTs, SFTs and Meta ESDTs).
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.ESDTNFTTransfer}
   */
  public  static final class ESDTNFTTransfer extends
      com.google.protobuf.GeneratedMessageLite<
          ESDTNFTTransfer, ESDTNFTTransfer.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.ESDTNFTTransfer)
      ESDTNFTTransferOrBuilder {
    private ESDTNFTTransfer() {
      tokenCollection_ = "";
      amount_ = "";
    }
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Elrond.Accounts accounts_;
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public boolean hasAccounts() {
      return accounts_ != null;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
      return accounts_ == null ? wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance() : accounts_;
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  accounts_ = value;
      
      }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
      value.getClass();
  if (accounts_ != null &&
          accounts_ != wallet.core.jni.proto.Elrond.Accounts.getDefaultInstance()) {
        accounts_ =
          wallet.core.jni.proto.Elrond.Accounts.newBuilder(accounts_).mergeFrom(value).buildPartial();
      } else {
        accounts_ = value;
      }
      
    }
    /**
     * <pre>
     * Accounts involved
     * </pre>
     *
     * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
     */
    private void clearAccounts() {  accounts_ = null;
      
    }

    public static final int TOKEN_COLLECTION_FIELD_NUMBER = 2;
    private java.lang.String tokenCollection_;
    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     * @return The tokenCollection.
     */
    @java.lang.Override
    public java.lang.String getTokenCollection() {
      return tokenCollection_;
    }
    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     * @return The bytes for tokenCollection.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenCollectionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(tokenCollection_);
    }
    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     * @param value The tokenCollection to set.
     */
    private void setTokenCollection(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      tokenCollection_ = value;
    }
    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     */
    private void clearTokenCollection() {
      
      tokenCollection_ = getDefaultInstance().getTokenCollection();
    }
    /**
     * <pre>
     * tokens
     * </pre>
     *
     * <code>string token_collection = 2;</code>
     * @param value The bytes for tokenCollection to set.
     */
    private void setTokenCollectionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      tokenCollection_ = value.toStringUtf8();
      
    }

    public static final int TOKEN_NONCE_FIELD_NUMBER = 3;
    private long tokenNonce_;
    /**
     * <pre>
     * nonce of the token
     * </pre>
     *
     * <code>uint64 token_nonce = 3;</code>
     * @return The tokenNonce.
     */
    @java.lang.Override
    public long getTokenNonce() {
      return tokenNonce_;
    }
    /**
     * <pre>
     * nonce of the token
     * </pre>
     *
     * <code>uint64 token_nonce = 3;</code>
     * @param value The tokenNonce to set.
     */
    private void setTokenNonce(long value) {
      
      tokenNonce_ = value;
    }
    /**
     * <pre>
     * nonce of the token
     * </pre>
     *
     * <code>uint64 token_nonce = 3;</code>
     */
    private void clearTokenNonce() {
      
      tokenNonce_ = 0L;
    }

    public static final int AMOUNT_FIELD_NUMBER = 4;
    private java.lang.String amount_;
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(amount_);
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     * @param value The amount to set.
     */
    private void setAmount(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      amount_ = value;
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     */
    private void clearAmount() {
      
      amount_ = getDefaultInstance().getAmount();
    }
    /**
     * <pre>
     * transfer amount
     * </pre>
     *
     * <code>string amount = 4;</code>
     * @param value The bytes for amount to set.
     */
    private void setAmountBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      amount_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.ESDTNFTTransfer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ESDTNFT transfer (transfer NFTs, SFTs and Meta ESDTs).
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.ESDTNFTTransfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.ESDTNFTTransfer, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.ESDTNFTTransfer)
        wallet.core.jni.proto.Elrond.ESDTNFTTransferOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.ESDTNFTTransfer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public boolean hasAccounts() {
        return instance.hasAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.Accounts getAccounts() {
        return instance.getAccounts();
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.setAccounts(value);
        return this;
        }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder setAccounts(
          wallet.core.jni.proto.Elrond.Accounts.Builder builderForValue) {
        copyOnWrite();
        instance.setAccounts(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder mergeAccounts(wallet.core.jni.proto.Elrond.Accounts value) {
        copyOnWrite();
        instance.mergeAccounts(value);
        return this;
      }
      /**
       * <pre>
       * Accounts involved
       * </pre>
       *
       * <code>.TW.Elrond.Proto.Accounts accounts = 1;</code>
       */
      public Builder clearAccounts() {  copyOnWrite();
        instance.clearAccounts();
        return this;
      }

      /**
       * <pre>
       * tokens
       * </pre>
       *
       * <code>string token_collection = 2;</code>
       * @return The tokenCollection.
       */
      @java.lang.Override
      public java.lang.String getTokenCollection() {
        return instance.getTokenCollection();
      }
      /**
       * <pre>
       * tokens
       * </pre>
       *
       * <code>string token_collection = 2;</code>
       * @return The bytes for tokenCollection.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenCollectionBytes() {
        return instance.getTokenCollectionBytes();
      }
      /**
       * <pre>
       * tokens
       * </pre>
       *
       * <code>string token_collection = 2;</code>
       * @param value The tokenCollection to set.
       * @return This builder for chaining.
       */
      public Builder setTokenCollection(
          java.lang.String value) {
        copyOnWrite();
        instance.setTokenCollection(value);
        return this;
      }
      /**
       * <pre>
       * tokens
       * </pre>
       *
       * <code>string token_collection = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenCollection() {
        copyOnWrite();
        instance.clearTokenCollection();
        return this;
      }
      /**
       * <pre>
       * tokens
       * </pre>
       *
       * <code>string token_collection = 2;</code>
       * @param value The bytes for tokenCollection to set.
       * @return This builder for chaining.
       */
      public Builder setTokenCollectionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenCollectionBytes(value);
        return this;
      }

      /**
       * <pre>
       * nonce of the token
       * </pre>
       *
       * <code>uint64 token_nonce = 3;</code>
       * @return The tokenNonce.
       */
      @java.lang.Override
      public long getTokenNonce() {
        return instance.getTokenNonce();
      }
      /**
       * <pre>
       * nonce of the token
       * </pre>
       *
       * <code>uint64 token_nonce = 3;</code>
       * @param value The tokenNonce to set.
       * @return This builder for chaining.
       */
      public Builder setTokenNonce(long value) {
        copyOnWrite();
        instance.setTokenNonce(value);
        return this;
      }
      /**
       * <pre>
       * nonce of the token
       * </pre>
       *
       * <code>uint64 token_nonce = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenNonce() {
        copyOnWrite();
        instance.clearTokenNonce();
        return this;
      }

      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>string amount = 4;</code>
       * @return The amount.
       */
      @java.lang.Override
      public java.lang.String getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>string amount = 4;</code>
       * @return The bytes for amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAmountBytes() {
        return instance.getAmountBytes();
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>string amount = 4;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>string amount = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }
      /**
       * <pre>
       * transfer amount
       * </pre>
       *
       * <code>string amount = 4;</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAmountBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.ESDTNFTTransfer)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.ESDTNFTTransfer();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "accounts_",
              "tokenCollection_",
              "tokenNonce_",
              "amount_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\t\u0002\u0208" +
                "\u0003\u0003\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.ESDTNFTTransfer> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.ESDTNFTTransfer.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.ESDTNFTTransfer>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.ESDTNFTTransfer)
    private static final wallet.core.jni.proto.Elrond.ESDTNFTTransfer DEFAULT_INSTANCE;
    static {
      ESDTNFTTransfer defaultInstance = new ESDTNFTTransfer();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ESDTNFTTransfer.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.ESDTNFTTransfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ESDTNFTTransfer> PARSER;

    public static com.google.protobuf.Parser<ESDTNFTTransfer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AccountsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.Accounts)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Nonce of the sender
     * </pre>
     *
     * <code>uint64 sender_nonce = 1;</code>
     * @return The senderNonce.
     */
    long getSenderNonce();

    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     * @return The sender.
     */
    java.lang.String getSender();
    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     * @return The bytes for sender.
     */
    com.google.protobuf.ByteString
        getSenderBytes();

    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     * @return The senderUsername.
     */
    java.lang.String getSenderUsername();
    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     * @return The bytes for senderUsername.
     */
    com.google.protobuf.ByteString
        getSenderUsernameBytes();

    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     * @return The receiver.
     */
    java.lang.String getReceiver();
    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     * @return The bytes for receiver.
     */
    com.google.protobuf.ByteString
        getReceiverBytes();

    /**
     * <code>string receiver_username = 5;</code>
     * @return The receiverUsername.
     */
    java.lang.String getReceiverUsername();
    /**
     * <code>string receiver_username = 5;</code>
     * @return The bytes for receiverUsername.
     */
    com.google.protobuf.ByteString
        getReceiverUsernameBytes();
  }
  /**
   * <pre>
   * Transaction sender &amp; receiver etc.
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.Accounts}
   */
  public  static final class Accounts extends
      com.google.protobuf.GeneratedMessageLite<
          Accounts, Accounts.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.Accounts)
      AccountsOrBuilder {
    private Accounts() {
      sender_ = "";
      senderUsername_ = "";
      receiver_ = "";
      receiverUsername_ = "";
    }
    public static final int SENDER_NONCE_FIELD_NUMBER = 1;
    private long senderNonce_;
    /**
     * <pre>
     * Nonce of the sender
     * </pre>
     *
     * <code>uint64 sender_nonce = 1;</code>
     * @return The senderNonce.
     */
    @java.lang.Override
    public long getSenderNonce() {
      return senderNonce_;
    }
    /**
     * <pre>
     * Nonce of the sender
     * </pre>
     *
     * <code>uint64 sender_nonce = 1;</code>
     * @param value The senderNonce to set.
     */
    private void setSenderNonce(long value) {
      
      senderNonce_ = value;
    }
    /**
     * <pre>
     * Nonce of the sender
     * </pre>
     *
     * <code>uint64 sender_nonce = 1;</code>
     */
    private void clearSenderNonce() {
      
      senderNonce_ = 0L;
    }

    public static final int SENDER_FIELD_NUMBER = 2;
    private java.lang.String sender_;
    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     * @return The sender.
     */
    @java.lang.Override
    public java.lang.String getSender() {
      return sender_;
    }
    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     * @return The bytes for sender.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSenderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(sender_);
    }
    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     * @param value The sender to set.
     */
    private void setSender(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      sender_ = value;
    }
    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     */
    private void clearSender() {
      
      sender_ = getDefaultInstance().getSender();
    }
    /**
     * <pre>
     * Sender address
     * </pre>
     *
     * <code>string sender = 2;</code>
     * @param value The bytes for sender to set.
     */
    private void setSenderBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      sender_ = value.toStringUtf8();
      
    }

    public static final int SENDER_USERNAME_FIELD_NUMBER = 3;
    private java.lang.String senderUsername_;
    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     * @return The senderUsername.
     */
    @java.lang.Override
    public java.lang.String getSenderUsername() {
      return senderUsername_;
    }
    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     * @return The bytes for senderUsername.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSenderUsernameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(senderUsername_);
    }
    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     * @param value The senderUsername to set.
     */
    private void setSenderUsername(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      senderUsername_ = value;
    }
    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     */
    private void clearSenderUsername() {
      
      senderUsername_ = getDefaultInstance().getSenderUsername();
    }
    /**
     * <pre>
     * Sender username
     * </pre>
     *
     * <code>string sender_username = 3;</code>
     * @param value The bytes for senderUsername to set.
     */
    private void setSenderUsernameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      senderUsername_ = value.toStringUtf8();
      
    }

    public static final int RECEIVER_FIELD_NUMBER = 4;
    private java.lang.String receiver_;
    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     * @return The receiver.
     */
    @java.lang.Override
    public java.lang.String getReceiver() {
      return receiver_;
    }
    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     * @return The bytes for receiver.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReceiverBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(receiver_);
    }
    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     * @param value The receiver to set.
     */
    private void setReceiver(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      receiver_ = value;
    }
    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     */
    private void clearReceiver() {
      
      receiver_ = getDefaultInstance().getReceiver();
    }
    /**
     * <pre>
     * Receiver address
     * </pre>
     *
     * <code>string receiver = 4;</code>
     * @param value The bytes for receiver to set.
     */
    private void setReceiverBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      receiver_ = value.toStringUtf8();
      
    }

    public static final int RECEIVER_USERNAME_FIELD_NUMBER = 5;
    private java.lang.String receiverUsername_;
    /**
     * <code>string receiver_username = 5;</code>
     * @return The receiverUsername.
     */
    @java.lang.Override
    public java.lang.String getReceiverUsername() {
      return receiverUsername_;
    }
    /**
     * <code>string receiver_username = 5;</code>
     * @return The bytes for receiverUsername.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReceiverUsernameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(receiverUsername_);
    }
    /**
     * <code>string receiver_username = 5;</code>
     * @param value The receiverUsername to set.
     */
    private void setReceiverUsername(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      receiverUsername_ = value;
    }
    /**
     * <code>string receiver_username = 5;</code>
     */
    private void clearReceiverUsername() {
      
      receiverUsername_ = getDefaultInstance().getReceiverUsername();
    }
    /**
     * <code>string receiver_username = 5;</code>
     * @param value The bytes for receiverUsername to set.
     */
    private void setReceiverUsernameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      receiverUsername_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.Accounts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.Accounts prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Transaction sender &amp; receiver etc.
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.Accounts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.Accounts, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.Accounts)
        wallet.core.jni.proto.Elrond.AccountsOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.Accounts.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Nonce of the sender
       * </pre>
       *
       * <code>uint64 sender_nonce = 1;</code>
       * @return The senderNonce.
       */
      @java.lang.Override
      public long getSenderNonce() {
        return instance.getSenderNonce();
      }
      /**
       * <pre>
       * Nonce of the sender
       * </pre>
       *
       * <code>uint64 sender_nonce = 1;</code>
       * @param value The senderNonce to set.
       * @return This builder for chaining.
       */
      public Builder setSenderNonce(long value) {
        copyOnWrite();
        instance.setSenderNonce(value);
        return this;
      }
      /**
       * <pre>
       * Nonce of the sender
       * </pre>
       *
       * <code>uint64 sender_nonce = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSenderNonce() {
        copyOnWrite();
        instance.clearSenderNonce();
        return this;
      }

      /**
       * <pre>
       * Sender address
       * </pre>
       *
       * <code>string sender = 2;</code>
       * @return The sender.
       */
      @java.lang.Override
      public java.lang.String getSender() {
        return instance.getSender();
      }
      /**
       * <pre>
       * Sender address
       * </pre>
       *
       * <code>string sender = 2;</code>
       * @return The bytes for sender.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSenderBytes() {
        return instance.getSenderBytes();
      }
      /**
       * <pre>
       * Sender address
       * </pre>
       *
       * <code>string sender = 2;</code>
       * @param value The sender to set.
       * @return This builder for chaining.
       */
      public Builder setSender(
          java.lang.String value) {
        copyOnWrite();
        instance.setSender(value);
        return this;
      }
      /**
       * <pre>
       * Sender address
       * </pre>
       *
       * <code>string sender = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSender() {
        copyOnWrite();
        instance.clearSender();
        return this;
      }
      /**
       * <pre>
       * Sender address
       * </pre>
       *
       * <code>string sender = 2;</code>
       * @param value The bytes for sender to set.
       * @return This builder for chaining.
       */
      public Builder setSenderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSenderBytes(value);
        return this;
      }

      /**
       * <pre>
       * Sender username
       * </pre>
       *
       * <code>string sender_username = 3;</code>
       * @return The senderUsername.
       */
      @java.lang.Override
      public java.lang.String getSenderUsername() {
        return instance.getSenderUsername();
      }
      /**
       * <pre>
       * Sender username
       * </pre>
       *
       * <code>string sender_username = 3;</code>
       * @return The bytes for senderUsername.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSenderUsernameBytes() {
        return instance.getSenderUsernameBytes();
      }
      /**
       * <pre>
       * Sender username
       * </pre>
       *
       * <code>string sender_username = 3;</code>
       * @param value The senderUsername to set.
       * @return This builder for chaining.
       */
      public Builder setSenderUsername(
          java.lang.String value) {
        copyOnWrite();
        instance.setSenderUsername(value);
        return this;
      }
      /**
       * <pre>
       * Sender username
       * </pre>
       *
       * <code>string sender_username = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSenderUsername() {
        copyOnWrite();
        instance.clearSenderUsername();
        return this;
      }
      /**
       * <pre>
       * Sender username
       * </pre>
       *
       * <code>string sender_username = 3;</code>
       * @param value The bytes for senderUsername to set.
       * @return This builder for chaining.
       */
      public Builder setSenderUsernameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSenderUsernameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Receiver address
       * </pre>
       *
       * <code>string receiver = 4;</code>
       * @return The receiver.
       */
      @java.lang.Override
      public java.lang.String getReceiver() {
        return instance.getReceiver();
      }
      /**
       * <pre>
       * Receiver address
       * </pre>
       *
       * <code>string receiver = 4;</code>
       * @return The bytes for receiver.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReceiverBytes() {
        return instance.getReceiverBytes();
      }
      /**
       * <pre>
       * Receiver address
       * </pre>
       *
       * <code>string receiver = 4;</code>
       * @param value The receiver to set.
       * @return This builder for chaining.
       */
      public Builder setReceiver(
          java.lang.String value) {
        copyOnWrite();
        instance.setReceiver(value);
        return this;
      }
      /**
       * <pre>
       * Receiver address
       * </pre>
       *
       * <code>string receiver = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearReceiver() {
        copyOnWrite();
        instance.clearReceiver();
        return this;
      }
      /**
       * <pre>
       * Receiver address
       * </pre>
       *
       * <code>string receiver = 4;</code>
       * @param value The bytes for receiver to set.
       * @return This builder for chaining.
       */
      public Builder setReceiverBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReceiverBytes(value);
        return this;
      }

      /**
       * <code>string receiver_username = 5;</code>
       * @return The receiverUsername.
       */
      @java.lang.Override
      public java.lang.String getReceiverUsername() {
        return instance.getReceiverUsername();
      }
      /**
       * <code>string receiver_username = 5;</code>
       * @return The bytes for receiverUsername.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReceiverUsernameBytes() {
        return instance.getReceiverUsernameBytes();
      }
      /**
       * <code>string receiver_username = 5;</code>
       * @param value The receiverUsername to set.
       * @return This builder for chaining.
       */
      public Builder setReceiverUsername(
          java.lang.String value) {
        copyOnWrite();
        instance.setReceiverUsername(value);
        return this;
      }
      /**
       * <code>string receiver_username = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearReceiverUsername() {
        copyOnWrite();
        instance.clearReceiverUsername();
        return this;
      }
      /**
       * <code>string receiver_username = 5;</code>
       * @param value The bytes for receiverUsername to set.
       * @return This builder for chaining.
       */
      public Builder setReceiverUsernameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReceiverUsernameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.Accounts)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.Accounts();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "senderNonce_",
              "sender_",
              "senderUsername_",
              "receiver_",
              "receiverUsername_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u0003\u0002\u0208" +
                "\u0003\u0208\u0004\u0208\u0005\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.Accounts> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.Accounts.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.Accounts>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.Accounts)
    private static final wallet.core.jni.proto.Elrond.Accounts DEFAULT_INSTANCE;
    static {
      Accounts defaultInstance = new Accounts();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Accounts.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.Accounts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Accounts> PARSER;

    public static com.google.protobuf.Parser<Accounts> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 1;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     * @return The chainId.
     */
    java.lang.String getChainId();
    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     * @return The bytes for chainId.
     */
    com.google.protobuf.ByteString
        getChainIdBytes();

    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 3;</code>
     * @return The gasPrice.
     */
    long getGasPrice();

    /**
     * <pre>
     * Limit for the gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 4;</code>
     * @return The gasLimit.
     */
    long getGasLimit();

    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     * @return Whether the genericAction field is set.
     */
    boolean hasGenericAction();
    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     * @return The genericAction.
     */
    wallet.core.jni.proto.Elrond.GenericAction getGenericAction();

    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     * @return Whether the egldTransfer field is set.
     */
    boolean hasEgldTransfer();
    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     * @return The egldTransfer.
     */
    wallet.core.jni.proto.Elrond.EGLDTransfer getEgldTransfer();

    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     * @return Whether the esdtTransfer field is set.
     */
    boolean hasEsdtTransfer();
    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     * @return The esdtTransfer.
     */
    wallet.core.jni.proto.Elrond.ESDTTransfer getEsdtTransfer();

    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     * @return Whether the esdtnftTransfer field is set.
     */
    boolean hasEsdtnftTransfer();
    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     * @return The esdtnftTransfer.
     */
    wallet.core.jni.proto.Elrond.ESDTNFTTransfer getEsdtnftTransfer();

    public wallet.core.jni.proto.Elrond.SigningInput.MessageOneofCase getMessageOneofCase();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
      chainId_ = "";
    }
    private int messageOneofCase_ = 0;
    private java.lang.Object messageOneof_;
    public enum MessageOneofCase {
      GENERIC_ACTION(5),
      EGLD_TRANSFER(6),
      ESDT_TRANSFER(7),
      ESDTNFT_TRANSFER(8),
      MESSAGEONEOF_NOT_SET(0);
      private final int value;
      private MessageOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageOneofCase forNumber(int value) {
        switch (value) {
          case 5: return GENERIC_ACTION;
          case 6: return EGLD_TRANSFER;
          case 7: return ESDT_TRANSFER;
          case 8: return ESDTNFT_TRANSFER;
          case 0: return MESSAGEONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public MessageOneofCase
    getMessageOneofCase() {
      return MessageOneofCase.forNumber(
          messageOneofCase_);
    }

    private void clearMessageOneof() {
      messageOneofCase_ = 0;
      messageOneof_ = null;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 1;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 1;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 1;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 2;
    private java.lang.String chainId_;
    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public java.lang.String getChainId() {
      return chainId_;
    }
    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     * @return The bytes for chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chainId_);
    }
    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     * @param value The chainId to set.
     */
    private void setChainId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      chainId_ = value;
    }
    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }
    /**
     * <pre>
     * Chain identifier, string
     * </pre>
     *
     * <code>string chain_id = 2;</code>
     * @param value The bytes for chainId to set.
     */
    private void setChainIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      chainId_ = value.toStringUtf8();
      
    }

    public static final int GAS_PRICE_FIELD_NUMBER = 3;
    private long gasPrice_;
    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 3;</code>
     * @return The gasPrice.
     */
    @java.lang.Override
    public long getGasPrice() {
      return gasPrice_;
    }
    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 3;</code>
     * @param value The gasPrice to set.
     */
    private void setGasPrice(long value) {
      
      gasPrice_ = value;
    }
    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 3;</code>
     */
    private void clearGasPrice() {
      
      gasPrice_ = 0L;
    }

    public static final int GAS_LIMIT_FIELD_NUMBER = 4;
    private long gasLimit_;
    /**
     * <pre>
     * Limit for the gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 4;</code>
     * @return The gasLimit.
     */
    @java.lang.Override
    public long getGasLimit() {
      return gasLimit_;
    }
    /**
     * <pre>
     * Limit for the gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 4;</code>
     * @param value The gasLimit to set.
     */
    private void setGasLimit(long value) {
      
      gasLimit_ = value;
    }
    /**
     * <pre>
     * Limit for the gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 4;</code>
     */
    private void clearGasLimit() {
      
      gasLimit_ = 0L;
    }

    public static final int GENERIC_ACTION_FIELD_NUMBER = 5;
    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     */
    @java.lang.Override
    public boolean hasGenericAction() {
      return messageOneofCase_ == 5;
    }
    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.GenericAction getGenericAction() {
      if (messageOneofCase_ == 5) {
         return (wallet.core.jni.proto.Elrond.GenericAction) messageOneof_;
      }
      return wallet.core.jni.proto.Elrond.GenericAction.getDefaultInstance();
    }
    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     */
    private void setGenericAction(wallet.core.jni.proto.Elrond.GenericAction value) {
      value.getClass();
  messageOneof_ = value;
      messageOneofCase_ = 5;
    }
    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     */
    private void mergeGenericAction(wallet.core.jni.proto.Elrond.GenericAction value) {
      value.getClass();
  if (messageOneofCase_ == 5 &&
          messageOneof_ != wallet.core.jni.proto.Elrond.GenericAction.getDefaultInstance()) {
        messageOneof_ = wallet.core.jni.proto.Elrond.GenericAction.newBuilder((wallet.core.jni.proto.Elrond.GenericAction) messageOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        messageOneof_ = value;
      }
      messageOneofCase_ = 5;
    }
    /**
     * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
     */
    private void clearGenericAction() {
      if (messageOneofCase_ == 5) {
        messageOneofCase_ = 0;
        messageOneof_ = null;
      }
    }

    public static final int EGLD_TRANSFER_FIELD_NUMBER = 6;
    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     */
    @java.lang.Override
    public boolean hasEgldTransfer() {
      return messageOneofCase_ == 6;
    }
    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.EGLDTransfer getEgldTransfer() {
      if (messageOneofCase_ == 6) {
         return (wallet.core.jni.proto.Elrond.EGLDTransfer) messageOneof_;
      }
      return wallet.core.jni.proto.Elrond.EGLDTransfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     */
    private void setEgldTransfer(wallet.core.jni.proto.Elrond.EGLDTransfer value) {
      value.getClass();
  messageOneof_ = value;
      messageOneofCase_ = 6;
    }
    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     */
    private void mergeEgldTransfer(wallet.core.jni.proto.Elrond.EGLDTransfer value) {
      value.getClass();
  if (messageOneofCase_ == 6 &&
          messageOneof_ != wallet.core.jni.proto.Elrond.EGLDTransfer.getDefaultInstance()) {
        messageOneof_ = wallet.core.jni.proto.Elrond.EGLDTransfer.newBuilder((wallet.core.jni.proto.Elrond.EGLDTransfer) messageOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        messageOneof_ = value;
      }
      messageOneofCase_ = 6;
    }
    /**
     * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
     */
    private void clearEgldTransfer() {
      if (messageOneofCase_ == 6) {
        messageOneofCase_ = 0;
        messageOneof_ = null;
      }
    }

    public static final int ESDT_TRANSFER_FIELD_NUMBER = 7;
    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     */
    @java.lang.Override
    public boolean hasEsdtTransfer() {
      return messageOneofCase_ == 7;
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.ESDTTransfer getEsdtTransfer() {
      if (messageOneofCase_ == 7) {
         return (wallet.core.jni.proto.Elrond.ESDTTransfer) messageOneof_;
      }
      return wallet.core.jni.proto.Elrond.ESDTTransfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     */
    private void setEsdtTransfer(wallet.core.jni.proto.Elrond.ESDTTransfer value) {
      value.getClass();
  messageOneof_ = value;
      messageOneofCase_ = 7;
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     */
    private void mergeEsdtTransfer(wallet.core.jni.proto.Elrond.ESDTTransfer value) {
      value.getClass();
  if (messageOneofCase_ == 7 &&
          messageOneof_ != wallet.core.jni.proto.Elrond.ESDTTransfer.getDefaultInstance()) {
        messageOneof_ = wallet.core.jni.proto.Elrond.ESDTTransfer.newBuilder((wallet.core.jni.proto.Elrond.ESDTTransfer) messageOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        messageOneof_ = value;
      }
      messageOneofCase_ = 7;
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
     */
    private void clearEsdtTransfer() {
      if (messageOneofCase_ == 7) {
        messageOneofCase_ = 0;
        messageOneof_ = null;
      }
    }

    public static final int ESDTNFT_TRANSFER_FIELD_NUMBER = 8;
    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     */
    @java.lang.Override
    public boolean hasEsdtnftTransfer() {
      return messageOneofCase_ == 8;
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Elrond.ESDTNFTTransfer getEsdtnftTransfer() {
      if (messageOneofCase_ == 8) {
         return (wallet.core.jni.proto.Elrond.ESDTNFTTransfer) messageOneof_;
      }
      return wallet.core.jni.proto.Elrond.ESDTNFTTransfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     */
    private void setEsdtnftTransfer(wallet.core.jni.proto.Elrond.ESDTNFTTransfer value) {
      value.getClass();
  messageOneof_ = value;
      messageOneofCase_ = 8;
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     */
    private void mergeEsdtnftTransfer(wallet.core.jni.proto.Elrond.ESDTNFTTransfer value) {
      value.getClass();
  if (messageOneofCase_ == 8 &&
          messageOneof_ != wallet.core.jni.proto.Elrond.ESDTNFTTransfer.getDefaultInstance()) {
        messageOneof_ = wallet.core.jni.proto.Elrond.ESDTNFTTransfer.newBuilder((wallet.core.jni.proto.Elrond.ESDTNFTTransfer) messageOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        messageOneof_ = value;
      }
      messageOneofCase_ = 8;
    }
    /**
     * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
     */
    private void clearEsdtnftTransfer() {
      if (messageOneofCase_ == 8) {
        messageOneofCase_ = 0;
        messageOneof_ = null;
      }
    }

    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.SigningInput)
        wallet.core.jni.proto.Elrond.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public MessageOneofCase
          getMessageOneofCase() {
        return instance.getMessageOneofCase();
      }

      public Builder clearMessageOneof() {
        copyOnWrite();
        instance.clearMessageOneof();
        return this;
      }


      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 1;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 1;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <pre>
       * Chain identifier, string
       * </pre>
       *
       * <code>string chain_id = 2;</code>
       * @return The chainId.
       */
      @java.lang.Override
      public java.lang.String getChainId() {
        return instance.getChainId();
      }
      /**
       * <pre>
       * Chain identifier, string
       * </pre>
       *
       * <code>string chain_id = 2;</code>
       * @return The bytes for chainId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        return instance.getChainIdBytes();
      }
      /**
       * <pre>
       * Chain identifier, string
       * </pre>
       *
       * <code>string chain_id = 2;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(
          java.lang.String value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <pre>
       * Chain identifier, string
       * </pre>
       *
       * <code>string chain_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }
      /**
       * <pre>
       * Chain identifier, string
       * </pre>
       *
       * <code>string chain_id = 2;</code>
       * @param value The bytes for chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Gas price
       * </pre>
       *
       * <code>uint64 gas_price = 3;</code>
       * @return The gasPrice.
       */
      @java.lang.Override
      public long getGasPrice() {
        return instance.getGasPrice();
      }
      /**
       * <pre>
       * Gas price
       * </pre>
       *
       * <code>uint64 gas_price = 3;</code>
       * @param value The gasPrice to set.
       * @return This builder for chaining.
       */
      public Builder setGasPrice(long value) {
        copyOnWrite();
        instance.setGasPrice(value);
        return this;
      }
      /**
       * <pre>
       * Gas price
       * </pre>
       *
       * <code>uint64 gas_price = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasPrice() {
        copyOnWrite();
        instance.clearGasPrice();
        return this;
      }

      /**
       * <pre>
       * Limit for the gas used
       * </pre>
       *
       * <code>uint64 gas_limit = 4;</code>
       * @return The gasLimit.
       */
      @java.lang.Override
      public long getGasLimit() {
        return instance.getGasLimit();
      }
      /**
       * <pre>
       * Limit for the gas used
       * </pre>
       *
       * <code>uint64 gas_limit = 4;</code>
       * @param value The gasLimit to set.
       * @return This builder for chaining.
       */
      public Builder setGasLimit(long value) {
        copyOnWrite();
        instance.setGasLimit(value);
        return this;
      }
      /**
       * <pre>
       * Limit for the gas used
       * </pre>
       *
       * <code>uint64 gas_limit = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasLimit() {
        copyOnWrite();
        instance.clearGasLimit();
        return this;
      }

      /**
       * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
       */
      @java.lang.Override
      public boolean hasGenericAction() {
        return instance.hasGenericAction();
      }
      /**
       * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.GenericAction getGenericAction() {
        return instance.getGenericAction();
      }
      /**
       * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
       */
      public Builder setGenericAction(wallet.core.jni.proto.Elrond.GenericAction value) {
        copyOnWrite();
        instance.setGenericAction(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
       */
      public Builder setGenericAction(
          wallet.core.jni.proto.Elrond.GenericAction.Builder builderForValue) {
        copyOnWrite();
        instance.setGenericAction(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
       */
      public Builder mergeGenericAction(wallet.core.jni.proto.Elrond.GenericAction value) {
        copyOnWrite();
        instance.mergeGenericAction(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.GenericAction generic_action = 5;</code>
       */
      public Builder clearGenericAction() {
        copyOnWrite();
        instance.clearGenericAction();
        return this;
      }

      /**
       * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
       */
      @java.lang.Override
      public boolean hasEgldTransfer() {
        return instance.hasEgldTransfer();
      }
      /**
       * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.EGLDTransfer getEgldTransfer() {
        return instance.getEgldTransfer();
      }
      /**
       * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
       */
      public Builder setEgldTransfer(wallet.core.jni.proto.Elrond.EGLDTransfer value) {
        copyOnWrite();
        instance.setEgldTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
       */
      public Builder setEgldTransfer(
          wallet.core.jni.proto.Elrond.EGLDTransfer.Builder builderForValue) {
        copyOnWrite();
        instance.setEgldTransfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
       */
      public Builder mergeEgldTransfer(wallet.core.jni.proto.Elrond.EGLDTransfer value) {
        copyOnWrite();
        instance.mergeEgldTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.EGLDTransfer egld_transfer = 6;</code>
       */
      public Builder clearEgldTransfer() {
        copyOnWrite();
        instance.clearEgldTransfer();
        return this;
      }

      /**
       * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
       */
      @java.lang.Override
      public boolean hasEsdtTransfer() {
        return instance.hasEsdtTransfer();
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.ESDTTransfer getEsdtTransfer() {
        return instance.getEsdtTransfer();
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
       */
      public Builder setEsdtTransfer(wallet.core.jni.proto.Elrond.ESDTTransfer value) {
        copyOnWrite();
        instance.setEsdtTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
       */
      public Builder setEsdtTransfer(
          wallet.core.jni.proto.Elrond.ESDTTransfer.Builder builderForValue) {
        copyOnWrite();
        instance.setEsdtTransfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
       */
      public Builder mergeEsdtTransfer(wallet.core.jni.proto.Elrond.ESDTTransfer value) {
        copyOnWrite();
        instance.mergeEsdtTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTTransfer esdt_transfer = 7;</code>
       */
      public Builder clearEsdtTransfer() {
        copyOnWrite();
        instance.clearEsdtTransfer();
        return this;
      }

      /**
       * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
       */
      @java.lang.Override
      public boolean hasEsdtnftTransfer() {
        return instance.hasEsdtnftTransfer();
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Elrond.ESDTNFTTransfer getEsdtnftTransfer() {
        return instance.getEsdtnftTransfer();
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
       */
      public Builder setEsdtnftTransfer(wallet.core.jni.proto.Elrond.ESDTNFTTransfer value) {
        copyOnWrite();
        instance.setEsdtnftTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
       */
      public Builder setEsdtnftTransfer(
          wallet.core.jni.proto.Elrond.ESDTNFTTransfer.Builder builderForValue) {
        copyOnWrite();
        instance.setEsdtnftTransfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
       */
      public Builder mergeEsdtnftTransfer(wallet.core.jni.proto.Elrond.ESDTNFTTransfer value) {
        copyOnWrite();
        instance.mergeEsdtnftTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Elrond.Proto.ESDTNFTTransfer esdtnft_transfer = 8;</code>
       */
      public Builder clearEsdtnftTransfer() {
        copyOnWrite();
        instance.clearEsdtnftTransfer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "messageOneof_",
              "messageOneofCase_",
              "privateKey_",
              "chainId_",
              "gasPrice_",
              "gasLimit_",
              wallet.core.jni.proto.Elrond.GenericAction.class,
              wallet.core.jni.proto.Elrond.EGLDTransfer.class,
              wallet.core.jni.proto.Elrond.ESDTTransfer.class,
              wallet.core.jni.proto.Elrond.ESDTNFTTransfer.class,
            };
            java.lang.String info =
                "\u0000\b\u0001\u0000\u0001\b\b\u0000\u0000\u0000\u0001\n\u0002\u0208\u0003\u0003" +
                "\u0004\u0003\u0005<\u0000\u0006<\u0000\u0007<\u0000\b<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.SigningInput)
    private static final wallet.core.jni.proto.Elrond.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Elrond.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string encoded = 1;</code>
     * @return The encoded.
     */
    java.lang.String getEncoded();
    /**
     * <code>string encoded = 1;</code>
     * @return The bytes for encoded.
     */
    com.google.protobuf.ByteString
        getEncodedBytes();

    /**
     * <code>string signature = 2;</code>
     * @return The signature.
     */
    java.lang.String getSignature();
    /**
     * <code>string signature = 2;</code>
     * @return The bytes for signature.
     */
    com.google.protobuf.ByteString
        getSignatureBytes();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Elrond.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Elrond.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = "";
      signature_ = "";
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private java.lang.String encoded_;
    /**
     * <code>string encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public java.lang.String getEncoded() {
      return encoded_;
    }
    /**
     * <code>string encoded = 1;</code>
     * @return The bytes for encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEncodedBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(encoded_);
    }
    /**
     * <code>string encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <code>string encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }
    /**
     * <code>string encoded = 1;</code>
     * @param value The bytes for encoded to set.
     */
    private void setEncodedBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      encoded_ = value.toStringUtf8();
      
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private java.lang.String signature_;
    /**
     * <code>string signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public java.lang.String getSignature() {
      return signature_;
    }
    /**
     * <code>string signature = 2;</code>
     * @return The bytes for signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSignatureBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(signature_);
    }
    /**
     * <code>string signature = 2;</code>
     * @param value The signature to set.
     */
    private void setSignature(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      signature_ = value;
    }
    /**
     * <code>string signature = 2;</code>
     */
    private void clearSignature() {
      
      signature_ = getDefaultInstance().getSignature();
    }
    /**
     * <code>string signature = 2;</code>
     * @param value The bytes for signature to set.
     */
    private void setSignatureBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      signature_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Elrond.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Elrond.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Elrond.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Elrond.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Elrond.Proto.SigningOutput)
        wallet.core.jni.proto.Elrond.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Elrond.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public java.lang.String getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <code>string encoded = 1;</code>
       * @return The bytes for encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEncodedBytes() {
        return instance.getEncodedBytes();
      }
      /**
       * <code>string encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(
          java.lang.String value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <code>string encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }
      /**
       * <code>string encoded = 1;</code>
       * @param value The bytes for encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncodedBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncodedBytes(value);
        return this;
      }

      /**
       * <code>string signature = 2;</code>
       * @return The signature.
       */
      @java.lang.Override
      public java.lang.String getSignature() {
        return instance.getSignature();
      }
      /**
       * <code>string signature = 2;</code>
       * @return The bytes for signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSignatureBytes() {
        return instance.getSignatureBytes();
      }
      /**
       * <code>string signature = 2;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(
          java.lang.String value) {
        copyOnWrite();
        instance.setSignature(value);
        return this;
      }
      /**
       * <code>string signature = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        copyOnWrite();
        instance.clearSignature();
        return this;
      }
      /**
       * <code>string signature = 2;</code>
       * @param value The bytes for signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignatureBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignatureBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Elrond.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Elrond.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "signature_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Elrond.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Elrond.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Elrond.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Elrond.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Elrond.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Elrond.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
