// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ethereum.proto

package wallet.core.jni.proto;

public final class Ethereum {
  private Ethereum() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * Transaction type
   * </pre>
   *
   * Protobuf enum {@code TW.Ethereum.Proto.TransactionMode}
   */
  public enum TransactionMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Legacy transaction, pre-EIP2718/EIP1559; for fee gasPrice/gasLimit is used
     * </pre>
     *
     * <code>Legacy = 0;</code>
     */
    Legacy(0),
    /**
     * <pre>
     * Enveloped transaction EIP2718 (with type 0x2), fee is according to EIP1559 (base fee, inclusion fee, ...) 
     * </pre>
     *
     * <code>Enveloped = 1;</code>
     */
    Enveloped(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Legacy transaction, pre-EIP2718/EIP1559; for fee gasPrice/gasLimit is used
     * </pre>
     *
     * <code>Legacy = 0;</code>
     */
    public static final int Legacy_VALUE = 0;
    /**
     * <pre>
     * Enveloped transaction EIP2718 (with type 0x2), fee is according to EIP1559 (base fee, inclusion fee, ...) 
     * </pre>
     *
     * <code>Enveloped = 1;</code>
     */
    public static final int Enveloped_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransactionMode valueOf(int value) {
      return forNumber(value);
    }

    public static TransactionMode forNumber(int value) {
      switch (value) {
        case 0: return Legacy;
        case 1: return Enveloped;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransactionMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransactionMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransactionMode>() {
            @java.lang.Override
            public TransactionMode findValueByNumber(int number) {
              return TransactionMode.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TransactionModeVerifier.INSTANCE;
    }

    private static final class TransactionModeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TransactionModeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return TransactionMode.forNumber(number) != null;
            }
          };

    private final int value;

    private TransactionMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TW.Ethereum.Proto.TransactionMode)
  }

  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     * @return Whether the transfer field is set.
     */
    boolean hasTransfer();
    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     * @return The transfer.
     */
    wallet.core.jni.proto.Ethereum.Transaction.Transfer getTransfer();

    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     * @return Whether the erc20Transfer field is set.
     */
    boolean hasErc20Transfer();
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     * @return The erc20Transfer.
     */
    wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer getErc20Transfer();

    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     * @return Whether the erc20Approve field is set.
     */
    boolean hasErc20Approve();
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     * @return The erc20Approve.
     */
    wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve getErc20Approve();

    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     * @return Whether the erc721Transfer field is set.
     */
    boolean hasErc721Transfer();
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     * @return The erc721Transfer.
     */
    wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer getErc721Transfer();

    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     * @return Whether the erc1155Transfer field is set.
     */
    boolean hasErc1155Transfer();
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     * @return The erc1155Transfer.
     */
    wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer getErc1155Transfer();

    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     * @return Whether the contractGeneric field is set.
     */
    boolean hasContractGeneric();
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     * @return The contractGeneric.
     */
    wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric getContractGeneric();

    public wallet.core.jni.proto.Ethereum.Transaction.TransactionOneofCase getTransactionOneofCase();
  }
  /**
   * <pre>
   * Transaction (transfer, smart contract call, ...)
   * </pre>
   *
   * Protobuf type {@code TW.Ethereum.Proto.Transaction}
   */
  public  static final class Transaction extends
      com.google.protobuf.GeneratedMessageLite<
          Transaction, Transaction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction)
      TransactionOrBuilder {
    private Transaction() {
    }
    public interface TransferOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction.Transfer)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       * @return The amount.
       */
      com.google.protobuf.ByteString getAmount();

      /**
       * <pre>
       * Optional payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * <pre>
     * Native coin transfer transaction
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction.Transfer}
     */
    public  static final class Transfer extends
        com.google.protobuf.GeneratedMessageLite<
            Transfer, Transfer.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction.Transfer)
        TransferOrBuilder {
      private Transfer() {
        amount_ = com.google.protobuf.ByteString.EMPTY;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }
      public static final int AMOUNT_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString amount_;
      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       * @return The amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       * @param value The amount to set.
       */
      private void setAmount(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        amount_ = value;
      }
      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       */
      private void clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString data_;
      /**
       * <pre>
       * Optional payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Optional payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       */
      private void setData(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        data_ = value;
      }
      /**
       * <pre>
       * Optional payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      private void clearData() {
        
        data_ = getDefaultInstance().getData();
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction.Transfer prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Native coin transfer transaction
       * </pre>
       *
       * Protobuf type {@code TW.Ethereum.Proto.Transaction.Transfer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Ethereum.Transaction.Transfer, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction.Transfer)
          wallet.core.jni.proto.Ethereum.Transaction.TransferOrBuilder {
        // Construct using wallet.core.jni.proto.Ethereum.Transaction.Transfer.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Amount to send in wei (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 1;</code>
         * @return The amount.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAmount() {
          return instance.getAmount();
        }
        /**
         * <pre>
         * Amount to send in wei (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 1;</code>
         * @param value The amount to set.
         * @return This builder for chaining.
         */
        public Builder setAmount(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAmount(value);
          return this;
        }
        /**
         * <pre>
         * Amount to send in wei (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmount() {
          copyOnWrite();
          instance.clearAmount();
          return this;
        }

        /**
         * <pre>
         * Optional payload data
         * </pre>
         *
         * <code>bytes data = 2;</code>
         * @return The data.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getData() {
          return instance.getData();
        }
        /**
         * <pre>
         * Optional payload data
         * </pre>
         *
         * <code>bytes data = 2;</code>
         * @param value The data to set.
         * @return This builder for chaining.
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setData(value);
          return this;
        }
        /**
         * <pre>
         * Optional payload data
         * </pre>
         *
         * <code>bytes data = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearData() {
          copyOnWrite();
          instance.clearData();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction.Transfer)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Ethereum.Transaction.Transfer();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "amount_",
                "data_",
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\n";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction.Transfer> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Ethereum.Transaction.Transfer.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction.Transfer>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction.Transfer)
      private static final wallet.core.jni.proto.Ethereum.Transaction.Transfer DEFAULT_INSTANCE;
      static {
        Transfer defaultInstance = new Transfer();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Transfer.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.Transfer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Transfer> PARSER;

      public static com.google.protobuf.Parser<Transfer> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ERC20TransferOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction.ERC20Transfer)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return The to.
       */
      java.lang.String getTo();
      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return The bytes for to.
       */
      com.google.protobuf.ByteString
          getToBytes();

      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       * @return The amount.
       */
      com.google.protobuf.ByteString getAmount();
    }
    /**
     * <pre>
     * ERC20 token transfer transaction
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC20Transfer}
     */
    public  static final class ERC20Transfer extends
        com.google.protobuf.GeneratedMessageLite<
            ERC20Transfer, ERC20Transfer.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction.ERC20Transfer)
        ERC20TransferOrBuilder {
      private ERC20Transfer() {
        to_ = "";
        amount_ = com.google.protobuf.ByteString.EMPTY;
      }
      public static final int TO_FIELD_NUMBER = 1;
      private java.lang.String to_;
      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return The to.
       */
      @java.lang.Override
      public java.lang.String getTo() {
        return to_;
      }
      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return The bytes for to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(to_);
      }
      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       * @param value The to to set.
       */
      private void setTo(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        to_ = value;
      }
      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       */
      private void clearTo() {
        
        to_ = getDefaultInstance().getTo();
      }
      /**
       * <pre>
       * destination address (string)
       * </pre>
       *
       * <code>string to = 1;</code>
       * @param value The bytes for to to set.
       */
      private void setToBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        to_ = value.toStringUtf8();
        
      }

      public static final int AMOUNT_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString amount_;
      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       * @param value The amount to set.
       */
      private void setAmount(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        amount_ = value;
      }
      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       */
      private void clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * ERC20 token transfer transaction
       * </pre>
       *
       * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC20Transfer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction.ERC20Transfer)
          wallet.core.jni.proto.Ethereum.Transaction.ERC20TransferOrBuilder {
        // Construct using wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * destination address (string)
         * </pre>
         *
         * <code>string to = 1;</code>
         * @return The to.
         */
        @java.lang.Override
        public java.lang.String getTo() {
          return instance.getTo();
        }
        /**
         * <pre>
         * destination address (string)
         * </pre>
         *
         * <code>string to = 1;</code>
         * @return The bytes for to.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getToBytes() {
          return instance.getToBytes();
        }
        /**
         * <pre>
         * destination address (string)
         * </pre>
         *
         * <code>string to = 1;</code>
         * @param value The to to set.
         * @return This builder for chaining.
         */
        public Builder setTo(
            java.lang.String value) {
          copyOnWrite();
          instance.setTo(value);
          return this;
        }
        /**
         * <pre>
         * destination address (string)
         * </pre>
         *
         * <code>string to = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTo() {
          copyOnWrite();
          instance.clearTo();
          return this;
        }
        /**
         * <pre>
         * destination address (string)
         * </pre>
         *
         * <code>string to = 1;</code>
         * @param value The bytes for to to set.
         * @return This builder for chaining.
         */
        public Builder setToBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setToBytes(value);
          return this;
        }

        /**
         * <pre>
         * Amount to send (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 2;</code>
         * @return The amount.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAmount() {
          return instance.getAmount();
        }
        /**
         * <pre>
         * Amount to send (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 2;</code>
         * @param value The amount to set.
         * @return This builder for chaining.
         */
        public Builder setAmount(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAmount(value);
          return this;
        }
        /**
         * <pre>
         * Amount to send (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmount() {
          copyOnWrite();
          instance.clearAmount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction.ERC20Transfer)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "to_",
                "amount_",
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\n" +
                  "";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction.ERC20Transfer)
      private static final wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer DEFAULT_INSTANCE;
      static {
        ERC20Transfer defaultInstance = new ERC20Transfer();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ERC20Transfer.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ERC20Transfer> PARSER;

      public static com.google.protobuf.Parser<ERC20Transfer> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ERC20ApproveOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction.ERC20Approve)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       * @return The spender.
       */
      java.lang.String getSpender();
      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       * @return The bytes for spender.
       */
      com.google.protobuf.ByteString
          getSpenderBytes();

      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       * @return The amount.
       */
      com.google.protobuf.ByteString getAmount();
    }
    /**
     * <pre>
     * ERC20 approve transaction
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC20Approve}
     */
    public  static final class ERC20Approve extends
        com.google.protobuf.GeneratedMessageLite<
            ERC20Approve, ERC20Approve.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction.ERC20Approve)
        ERC20ApproveOrBuilder {
      private ERC20Approve() {
        spender_ = "";
        amount_ = com.google.protobuf.ByteString.EMPTY;
      }
      public static final int SPENDER_FIELD_NUMBER = 1;
      private java.lang.String spender_;
      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       * @return The spender.
       */
      @java.lang.Override
      public java.lang.String getSpender() {
        return spender_;
      }
      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       * @return The bytes for spender.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSpenderBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(spender_);
      }
      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       * @param value The spender to set.
       */
      private void setSpender(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        spender_ = value;
      }
      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       */
      private void clearSpender() {
        
        spender_ = getDefaultInstance().getSpender();
      }
      /**
       * <pre>
       * Target of the approval
       * </pre>
       *
       * <code>string spender = 1;</code>
       * @param value The bytes for spender to set.
       */
      private void setSpenderBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        spender_ = value.toStringUtf8();
        
      }

      public static final int AMOUNT_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString amount_;
      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       * @param value The amount to set.
       */
      private void setAmount(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        amount_ = value;
      }
      /**
       * <pre>
       * Amount to send (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 2;</code>
       */
      private void clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * ERC20 approve transaction
       * </pre>
       *
       * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC20Approve}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction.ERC20Approve)
          wallet.core.jni.proto.Ethereum.Transaction.ERC20ApproveOrBuilder {
        // Construct using wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Target of the approval
         * </pre>
         *
         * <code>string spender = 1;</code>
         * @return The spender.
         */
        @java.lang.Override
        public java.lang.String getSpender() {
          return instance.getSpender();
        }
        /**
         * <pre>
         * Target of the approval
         * </pre>
         *
         * <code>string spender = 1;</code>
         * @return The bytes for spender.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getSpenderBytes() {
          return instance.getSpenderBytes();
        }
        /**
         * <pre>
         * Target of the approval
         * </pre>
         *
         * <code>string spender = 1;</code>
         * @param value The spender to set.
         * @return This builder for chaining.
         */
        public Builder setSpender(
            java.lang.String value) {
          copyOnWrite();
          instance.setSpender(value);
          return this;
        }
        /**
         * <pre>
         * Target of the approval
         * </pre>
         *
         * <code>string spender = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSpender() {
          copyOnWrite();
          instance.clearSpender();
          return this;
        }
        /**
         * <pre>
         * Target of the approval
         * </pre>
         *
         * <code>string spender = 1;</code>
         * @param value The bytes for spender to set.
         * @return This builder for chaining.
         */
        public Builder setSpenderBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setSpenderBytes(value);
          return this;
        }

        /**
         * <pre>
         * Amount to send (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 2;</code>
         * @return The amount.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAmount() {
          return instance.getAmount();
        }
        /**
         * <pre>
         * Amount to send (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 2;</code>
         * @param value The amount to set.
         * @return This builder for chaining.
         */
        public Builder setAmount(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAmount(value);
          return this;
        }
        /**
         * <pre>
         * Amount to send (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmount() {
          copyOnWrite();
          instance.clearAmount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction.ERC20Approve)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "spender_",
                "amount_",
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\n" +
                  "";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction.ERC20Approve)
      private static final wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve DEFAULT_INSTANCE;
      static {
        ERC20Approve defaultInstance = new ERC20Approve();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ERC20Approve.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ERC20Approve> PARSER;

      public static com.google.protobuf.Parser<ERC20Approve> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ERC721TransferOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction.ERC721Transfer)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      java.lang.String getFrom();
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      com.google.protobuf.ByteString
          getFromBytes();

      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      java.lang.String getTo();
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      com.google.protobuf.ByteString
          getToBytes();

      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       * @return The tokenId.
       */
      com.google.protobuf.ByteString getTokenId();
    }
    /**
     * <pre>
     * ERC721 NFT transfer transaction
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC721Transfer}
     */
    public  static final class ERC721Transfer extends
        com.google.protobuf.GeneratedMessageLite<
            ERC721Transfer, ERC721Transfer.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction.ERC721Transfer)
        ERC721TransferOrBuilder {
      private ERC721Transfer() {
        from_ = "";
        to_ = "";
        tokenId_ = com.google.protobuf.ByteString.EMPTY;
      }
      public static final int FROM_FIELD_NUMBER = 1;
      private java.lang.String from_;
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public java.lang.String getFrom() {
        return from_;
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFromBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(from_);
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The from to set.
       */
      private void setFrom(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        from_ = value;
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      private void clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The bytes for from to set.
       */
      private void setFromBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        from_ = value.toStringUtf8();
        
      }

      public static final int TO_FIELD_NUMBER = 2;
      private java.lang.String to_;
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public java.lang.String getTo() {
        return to_;
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(to_);
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @param value The to to set.
       */
      private void setTo(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        to_ = value;
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       */
      private void clearTo() {
        
        to_ = getDefaultInstance().getTo();
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @param value The bytes for to to set.
       */
      private void setToBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        to_ = value.toStringUtf8();
        
      }

      public static final int TOKEN_ID_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString tokenId_;
      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       * @return The tokenId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTokenId() {
        return tokenId_;
      }
      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       * @param value The tokenId to set.
       */
      private void setTokenId(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        tokenId_ = value;
      }
      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       */
      private void clearTokenId() {
        
        tokenId_ = getDefaultInstance().getTokenId();
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * ERC721 NFT transfer transaction
       * </pre>
       *
       * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC721Transfer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction.ERC721Transfer)
          wallet.core.jni.proto.Ethereum.Transaction.ERC721TransferOrBuilder {
        // Construct using wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The from.
         */
        @java.lang.Override
        public java.lang.String getFrom() {
          return instance.getFrom();
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The bytes for from.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFromBytes() {
          return instance.getFromBytes();
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The from to set.
         * @return This builder for chaining.
         */
        public Builder setFrom(
            java.lang.String value) {
          copyOnWrite();
          instance.setFrom(value);
          return this;
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrom() {
          copyOnWrite();
          instance.clearFrom();
          return this;
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The bytes for from to set.
         * @return This builder for chaining.
         */
        public Builder setFromBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setFromBytes(value);
          return this;
        }

        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return The to.
         */
        @java.lang.Override
        public java.lang.String getTo() {
          return instance.getTo();
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return The bytes for to.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getToBytes() {
          return instance.getToBytes();
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @param value The to to set.
         * @return This builder for chaining.
         */
        public Builder setTo(
            java.lang.String value) {
          copyOnWrite();
          instance.setTo(value);
          return this;
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTo() {
          copyOnWrite();
          instance.clearTo();
          return this;
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @param value The bytes for to to set.
         * @return This builder for chaining.
         */
        public Builder setToBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setToBytes(value);
          return this;
        }

        /**
         * <pre>
         * ID of the token (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes token_id = 3;</code>
         * @return The tokenId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getTokenId() {
          return instance.getTokenId();
        }
        /**
         * <pre>
         * ID of the token (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes token_id = 3;</code>
         * @param value The tokenId to set.
         * @return This builder for chaining.
         */
        public Builder setTokenId(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setTokenId(value);
          return this;
        }
        /**
         * <pre>
         * ID of the token (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes token_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTokenId() {
          copyOnWrite();
          instance.clearTokenId();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction.ERC721Transfer)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "from_",
                "to_",
                "tokenId_",
              };
              java.lang.String info =
                  "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                  "\u0003\n";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction.ERC721Transfer)
      private static final wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer DEFAULT_INSTANCE;
      static {
        ERC721Transfer defaultInstance = new ERC721Transfer();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ERC721Transfer.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ERC721Transfer> PARSER;

      public static com.google.protobuf.Parser<ERC721Transfer> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ERC1155TransferOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction.ERC1155Transfer)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      java.lang.String getFrom();
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      com.google.protobuf.ByteString
          getFromBytes();

      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      java.lang.String getTo();
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      com.google.protobuf.ByteString
          getToBytes();

      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       * @return The tokenId.
       */
      com.google.protobuf.ByteString getTokenId();

      /**
       * <pre>
       * The amount of tokens being transferred (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 4;</code>
       * @return The value.
       */
      com.google.protobuf.ByteString getValue();

      /**
       * <code>bytes data = 5;</code>
       * @return The data.
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * <pre>
     * ERC1155 NFT transfer transaction
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC1155Transfer}
     */
    public  static final class ERC1155Transfer extends
        com.google.protobuf.GeneratedMessageLite<
            ERC1155Transfer, ERC1155Transfer.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction.ERC1155Transfer)
        ERC1155TransferOrBuilder {
      private ERC1155Transfer() {
        from_ = "";
        to_ = "";
        tokenId_ = com.google.protobuf.ByteString.EMPTY;
        value_ = com.google.protobuf.ByteString.EMPTY;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }
      public static final int FROM_FIELD_NUMBER = 1;
      private java.lang.String from_;
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public java.lang.String getFrom() {
        return from_;
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFromBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(from_);
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The from to set.
       */
      private void setFrom(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        from_ = value;
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      private void clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
      }
      /**
       * <pre>
       * Source address
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The bytes for from to set.
       */
      private void setFromBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        from_ = value.toStringUtf8();
        
      }

      public static final int TO_FIELD_NUMBER = 2;
      private java.lang.String to_;
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public java.lang.String getTo() {
        return to_;
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(to_);
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @param value The to to set.
       */
      private void setTo(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        to_ = value;
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       */
      private void clearTo() {
        
        to_ = getDefaultInstance().getTo();
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to = 2;</code>
       * @param value The bytes for to to set.
       */
      private void setToBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        to_ = value.toStringUtf8();
        
      }

      public static final int TOKEN_ID_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString tokenId_;
      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       * @return The tokenId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTokenId() {
        return tokenId_;
      }
      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       * @param value The tokenId to set.
       */
      private void setTokenId(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        tokenId_ = value;
      }
      /**
       * <pre>
       * ID of the token (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes token_id = 3;</code>
       */
      private void clearTokenId() {
        
        tokenId_ = getDefaultInstance().getTokenId();
      }

      public static final int VALUE_FIELD_NUMBER = 4;
      private com.google.protobuf.ByteString value_;
      /**
       * <pre>
       * The amount of tokens being transferred (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 4;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <pre>
       * The amount of tokens being transferred (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 4;</code>
       * @param value The value to set.
       */
      private void setValue(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        value_ = value;
      }
      /**
       * <pre>
       * The amount of tokens being transferred (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 4;</code>
       */
      private void clearValue() {
        
        value_ = getDefaultInstance().getValue();
      }

      public static final int DATA_FIELD_NUMBER = 5;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>bytes data = 5;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 5;</code>
       * @param value The data to set.
       */
      private void setData(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        data_ = value;
      }
      /**
       * <code>bytes data = 5;</code>
       */
      private void clearData() {
        
        data_ = getDefaultInstance().getData();
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * ERC1155 NFT transfer transaction
       * </pre>
       *
       * Protobuf type {@code TW.Ethereum.Proto.Transaction.ERC1155Transfer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction.ERC1155Transfer)
          wallet.core.jni.proto.Ethereum.Transaction.ERC1155TransferOrBuilder {
        // Construct using wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The from.
         */
        @java.lang.Override
        public java.lang.String getFrom() {
          return instance.getFrom();
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The bytes for from.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFromBytes() {
          return instance.getFromBytes();
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The from to set.
         * @return This builder for chaining.
         */
        public Builder setFrom(
            java.lang.String value) {
          copyOnWrite();
          instance.setFrom(value);
          return this;
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrom() {
          copyOnWrite();
          instance.clearFrom();
          return this;
        }
        /**
         * <pre>
         * Source address
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The bytes for from to set.
         * @return This builder for chaining.
         */
        public Builder setFromBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setFromBytes(value);
          return this;
        }

        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return The to.
         */
        @java.lang.Override
        public java.lang.String getTo() {
          return instance.getTo();
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return The bytes for to.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getToBytes() {
          return instance.getToBytes();
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @param value The to to set.
         * @return This builder for chaining.
         */
        public Builder setTo(
            java.lang.String value) {
          copyOnWrite();
          instance.setTo(value);
          return this;
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTo() {
          copyOnWrite();
          instance.clearTo();
          return this;
        }
        /**
         * <pre>
         * Destination address
         * </pre>
         *
         * <code>string to = 2;</code>
         * @param value The bytes for to to set.
         * @return This builder for chaining.
         */
        public Builder setToBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setToBytes(value);
          return this;
        }

        /**
         * <pre>
         * ID of the token (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes token_id = 3;</code>
         * @return The tokenId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getTokenId() {
          return instance.getTokenId();
        }
        /**
         * <pre>
         * ID of the token (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes token_id = 3;</code>
         * @param value The tokenId to set.
         * @return This builder for chaining.
         */
        public Builder setTokenId(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setTokenId(value);
          return this;
        }
        /**
         * <pre>
         * ID of the token (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes token_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTokenId() {
          copyOnWrite();
          instance.clearTokenId();
          return this;
        }

        /**
         * <pre>
         * The amount of tokens being transferred (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes value = 4;</code>
         * @return The value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValue() {
          return instance.getValue();
        }
        /**
         * <pre>
         * The amount of tokens being transferred (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes value = 4;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setValue(value);
          return this;
        }
        /**
         * <pre>
         * The amount of tokens being transferred (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes value = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          copyOnWrite();
          instance.clearValue();
          return this;
        }

        /**
         * <code>bytes data = 5;</code>
         * @return The data.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getData() {
          return instance.getData();
        }
        /**
         * <code>bytes data = 5;</code>
         * @param value The data to set.
         * @return This builder for chaining.
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setData(value);
          return this;
        }
        /**
         * <code>bytes data = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearData() {
          copyOnWrite();
          instance.clearData();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction.ERC1155Transfer)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "from_",
                "to_",
                "tokenId_",
                "value_",
                "data_",
              };
              java.lang.String info =
                  "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                  "\u0003\n\u0004\n\u0005\n";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction.ERC1155Transfer)
      private static final wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer DEFAULT_INSTANCE;
      static {
        ERC1155Transfer defaultInstance = new ERC1155Transfer();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ERC1155Transfer.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ERC1155Transfer> PARSER;

      public static com.google.protobuf.Parser<ERC1155Transfer> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ContractGenericOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.Transaction.ContractGeneric)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       * @return The amount.
       */
      com.google.protobuf.ByteString getAmount();

      /**
       * <pre>
       * Contract call payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * <pre>
     * Generic smart contract transaction
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction.ContractGeneric}
     */
    public  static final class ContractGeneric extends
        com.google.protobuf.GeneratedMessageLite<
            ContractGeneric, ContractGeneric.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.Transaction.ContractGeneric)
        ContractGenericOrBuilder {
      private ContractGeneric() {
        amount_ = com.google.protobuf.ByteString.EMPTY;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }
      public static final int AMOUNT_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString amount_;
      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       * @return The amount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       * @param value The amount to set.
       */
      private void setAmount(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        amount_ = value;
      }
      /**
       * <pre>
       * Amount to send in wei (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes amount = 1;</code>
       */
      private void clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString data_;
      /**
       * <pre>
       * Contract call payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Contract call payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       */
      private void setData(com.google.protobuf.ByteString value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        data_ = value;
      }
      /**
       * <pre>
       * Contract call payload data
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      private void clearData() {
        
        data_ = getDefaultInstance().getData();
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Generic smart contract transaction
       * </pre>
       *
       * Protobuf type {@code TW.Ethereum.Proto.Transaction.ContractGeneric}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction.ContractGeneric)
          wallet.core.jni.proto.Ethereum.Transaction.ContractGenericOrBuilder {
        // Construct using wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Amount to send in wei (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 1;</code>
         * @return The amount.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAmount() {
          return instance.getAmount();
        }
        /**
         * <pre>
         * Amount to send in wei (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 1;</code>
         * @param value The amount to set.
         * @return This builder for chaining.
         */
        public Builder setAmount(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAmount(value);
          return this;
        }
        /**
         * <pre>
         * Amount to send in wei (uint256, serialized little endian)
         * </pre>
         *
         * <code>bytes amount = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmount() {
          copyOnWrite();
          instance.clearAmount();
          return this;
        }

        /**
         * <pre>
         * Contract call payload data
         * </pre>
         *
         * <code>bytes data = 2;</code>
         * @return The data.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getData() {
          return instance.getData();
        }
        /**
         * <pre>
         * Contract call payload data
         * </pre>
         *
         * <code>bytes data = 2;</code>
         * @param value The data to set.
         * @return This builder for chaining.
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setData(value);
          return this;
        }
        /**
         * <pre>
         * Contract call payload data
         * </pre>
         *
         * <code>bytes data = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearData() {
          copyOnWrite();
          instance.clearData();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction.ContractGeneric)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "amount_",
                "data_",
              };
              java.lang.String info =
                  "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\n";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric> parser = PARSER;
            if (parser == null) {
              synchronized (wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction.ContractGeneric)
      private static final wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric DEFAULT_INSTANCE;
      static {
        ContractGeneric defaultInstance = new ContractGeneric();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ContractGeneric.class, defaultInstance);
      }

      public static wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ContractGeneric> PARSER;

      public static com.google.protobuf.Parser<ContractGeneric> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int transactionOneofCase_ = 0;
    private java.lang.Object transactionOneof_;
    public enum TransactionOneofCase {
      TRANSFER(1),
      ERC20_TRANSFER(2),
      ERC20_APPROVE(3),
      ERC721_TRANSFER(4),
      ERC1155_TRANSFER(5),
      CONTRACT_GENERIC(6),
      TRANSACTIONONEOF_NOT_SET(0);
      private final int value;
      private TransactionOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TransactionOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static TransactionOneofCase forNumber(int value) {
        switch (value) {
          case 1: return TRANSFER;
          case 2: return ERC20_TRANSFER;
          case 3: return ERC20_APPROVE;
          case 4: return ERC721_TRANSFER;
          case 5: return ERC1155_TRANSFER;
          case 6: return CONTRACT_GENERIC;
          case 0: return TRANSACTIONONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public TransactionOneofCase
    getTransactionOneofCase() {
      return TransactionOneofCase.forNumber(
          transactionOneofCase_);
    }

    private void clearTransactionOneof() {
      transactionOneofCase_ = 0;
      transactionOneof_ = null;
    }

    public static final int TRANSFER_FIELD_NUMBER = 1;
    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     */
    @java.lang.Override
    public boolean hasTransfer() {
      return transactionOneofCase_ == 1;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction.Transfer getTransfer() {
      if (transactionOneofCase_ == 1) {
         return (wallet.core.jni.proto.Ethereum.Transaction.Transfer) transactionOneof_;
      }
      return wallet.core.jni.proto.Ethereum.Transaction.Transfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     */
    private void setTransfer(wallet.core.jni.proto.Ethereum.Transaction.Transfer value) {
      value.getClass();
  transactionOneof_ = value;
      transactionOneofCase_ = 1;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     */
    private void mergeTransfer(wallet.core.jni.proto.Ethereum.Transaction.Transfer value) {
      value.getClass();
  if (transactionOneofCase_ == 1 &&
          transactionOneof_ != wallet.core.jni.proto.Ethereum.Transaction.Transfer.getDefaultInstance()) {
        transactionOneof_ = wallet.core.jni.proto.Ethereum.Transaction.Transfer.newBuilder((wallet.core.jni.proto.Ethereum.Transaction.Transfer) transactionOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        transactionOneof_ = value;
      }
      transactionOneofCase_ = 1;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
     */
    private void clearTransfer() {
      if (transactionOneofCase_ == 1) {
        transactionOneofCase_ = 0;
        transactionOneof_ = null;
      }
    }

    public static final int ERC20_TRANSFER_FIELD_NUMBER = 2;
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     */
    @java.lang.Override
    public boolean hasErc20Transfer() {
      return transactionOneofCase_ == 2;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer getErc20Transfer() {
      if (transactionOneofCase_ == 2) {
         return (wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer) transactionOneof_;
      }
      return wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     */
    private void setErc20Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer value) {
      value.getClass();
  transactionOneof_ = value;
      transactionOneofCase_ = 2;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     */
    private void mergeErc20Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer value) {
      value.getClass();
  if (transactionOneofCase_ == 2 &&
          transactionOneof_ != wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.getDefaultInstance()) {
        transactionOneof_ = wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.newBuilder((wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer) transactionOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        transactionOneof_ = value;
      }
      transactionOneofCase_ = 2;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
     */
    private void clearErc20Transfer() {
      if (transactionOneofCase_ == 2) {
        transactionOneofCase_ = 0;
        transactionOneof_ = null;
      }
    }

    public static final int ERC20_APPROVE_FIELD_NUMBER = 3;
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     */
    @java.lang.Override
    public boolean hasErc20Approve() {
      return transactionOneofCase_ == 3;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve getErc20Approve() {
      if (transactionOneofCase_ == 3) {
         return (wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve) transactionOneof_;
      }
      return wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     */
    private void setErc20Approve(wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve value) {
      value.getClass();
  transactionOneof_ = value;
      transactionOneofCase_ = 3;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     */
    private void mergeErc20Approve(wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve value) {
      value.getClass();
  if (transactionOneofCase_ == 3 &&
          transactionOneof_ != wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.getDefaultInstance()) {
        transactionOneof_ = wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.newBuilder((wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve) transactionOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        transactionOneof_ = value;
      }
      transactionOneofCase_ = 3;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
     */
    private void clearErc20Approve() {
      if (transactionOneofCase_ == 3) {
        transactionOneofCase_ = 0;
        transactionOneof_ = null;
      }
    }

    public static final int ERC721_TRANSFER_FIELD_NUMBER = 4;
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     */
    @java.lang.Override
    public boolean hasErc721Transfer() {
      return transactionOneofCase_ == 4;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer getErc721Transfer() {
      if (transactionOneofCase_ == 4) {
         return (wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer) transactionOneof_;
      }
      return wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     */
    private void setErc721Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer value) {
      value.getClass();
  transactionOneof_ = value;
      transactionOneofCase_ = 4;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     */
    private void mergeErc721Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer value) {
      value.getClass();
  if (transactionOneofCase_ == 4 &&
          transactionOneof_ != wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.getDefaultInstance()) {
        transactionOneof_ = wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.newBuilder((wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer) transactionOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        transactionOneof_ = value;
      }
      transactionOneofCase_ = 4;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
     */
    private void clearErc721Transfer() {
      if (transactionOneofCase_ == 4) {
        transactionOneofCase_ = 0;
        transactionOneof_ = null;
      }
    }

    public static final int ERC1155_TRANSFER_FIELD_NUMBER = 5;
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     */
    @java.lang.Override
    public boolean hasErc1155Transfer() {
      return transactionOneofCase_ == 5;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer getErc1155Transfer() {
      if (transactionOneofCase_ == 5) {
         return (wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer) transactionOneof_;
      }
      return wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     */
    private void setErc1155Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer value) {
      value.getClass();
  transactionOneof_ = value;
      transactionOneofCase_ = 5;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     */
    private void mergeErc1155Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer value) {
      value.getClass();
  if (transactionOneofCase_ == 5 &&
          transactionOneof_ != wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.getDefaultInstance()) {
        transactionOneof_ = wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.newBuilder((wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer) transactionOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        transactionOneof_ = value;
      }
      transactionOneofCase_ = 5;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
     */
    private void clearErc1155Transfer() {
      if (transactionOneofCase_ == 5) {
        transactionOneofCase_ = 0;
        transactionOneof_ = null;
      }
    }

    public static final int CONTRACT_GENERIC_FIELD_NUMBER = 6;
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     */
    @java.lang.Override
    public boolean hasContractGeneric() {
      return transactionOneofCase_ == 6;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric getContractGeneric() {
      if (transactionOneofCase_ == 6) {
         return (wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric) transactionOneof_;
      }
      return wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     */
    private void setContractGeneric(wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric value) {
      value.getClass();
  transactionOneof_ = value;
      transactionOneofCase_ = 6;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     */
    private void mergeContractGeneric(wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric value) {
      value.getClass();
  if (transactionOneofCase_ == 6 &&
          transactionOneof_ != wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.getDefaultInstance()) {
        transactionOneof_ = wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.newBuilder((wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric) transactionOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        transactionOneof_ = value;
      }
      transactionOneofCase_ = 6;
    }
    /**
     * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
     */
    private void clearContractGeneric() {
      if (transactionOneofCase_ == 6) {
        transactionOneofCase_ = 0;
        transactionOneof_ = null;
      }
    }

    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ethereum.Transaction prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Transaction (transfer, smart contract call, ...)
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ethereum.Transaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.Transaction)
        wallet.core.jni.proto.Ethereum.TransactionOrBuilder {
      // Construct using wallet.core.jni.proto.Ethereum.Transaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public TransactionOneofCase
          getTransactionOneofCase() {
        return instance.getTransactionOneofCase();
      }

      public Builder clearTransactionOneof() {
        copyOnWrite();
        instance.clearTransactionOneof();
        return this;
      }


      /**
       * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
       */
      @java.lang.Override
      public boolean hasTransfer() {
        return instance.hasTransfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction.Transfer getTransfer() {
        return instance.getTransfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
       */
      public Builder setTransfer(wallet.core.jni.proto.Ethereum.Transaction.Transfer value) {
        copyOnWrite();
        instance.setTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
       */
      public Builder setTransfer(
          wallet.core.jni.proto.Ethereum.Transaction.Transfer.Builder builderForValue) {
        copyOnWrite();
        instance.setTransfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
       */
      public Builder mergeTransfer(wallet.core.jni.proto.Ethereum.Transaction.Transfer value) {
        copyOnWrite();
        instance.mergeTransfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.Transfer transfer = 1;</code>
       */
      public Builder clearTransfer() {
        copyOnWrite();
        instance.clearTransfer();
        return this;
      }

      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
       */
      @java.lang.Override
      public boolean hasErc20Transfer() {
        return instance.hasErc20Transfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer getErc20Transfer() {
        return instance.getErc20Transfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
       */
      public Builder setErc20Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer value) {
        copyOnWrite();
        instance.setErc20Transfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
       */
      public Builder setErc20Transfer(
          wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.Builder builderForValue) {
        copyOnWrite();
        instance.setErc20Transfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
       */
      public Builder mergeErc20Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer value) {
        copyOnWrite();
        instance.mergeErc20Transfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Transfer erc20_transfer = 2;</code>
       */
      public Builder clearErc20Transfer() {
        copyOnWrite();
        instance.clearErc20Transfer();
        return this;
      }

      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
       */
      @java.lang.Override
      public boolean hasErc20Approve() {
        return instance.hasErc20Approve();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve getErc20Approve() {
        return instance.getErc20Approve();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
       */
      public Builder setErc20Approve(wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve value) {
        copyOnWrite();
        instance.setErc20Approve(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
       */
      public Builder setErc20Approve(
          wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.Builder builderForValue) {
        copyOnWrite();
        instance.setErc20Approve(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
       */
      public Builder mergeErc20Approve(wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve value) {
        copyOnWrite();
        instance.mergeErc20Approve(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC20Approve erc20_approve = 3;</code>
       */
      public Builder clearErc20Approve() {
        copyOnWrite();
        instance.clearErc20Approve();
        return this;
      }

      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
       */
      @java.lang.Override
      public boolean hasErc721Transfer() {
        return instance.hasErc721Transfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer getErc721Transfer() {
        return instance.getErc721Transfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
       */
      public Builder setErc721Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer value) {
        copyOnWrite();
        instance.setErc721Transfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
       */
      public Builder setErc721Transfer(
          wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.Builder builderForValue) {
        copyOnWrite();
        instance.setErc721Transfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
       */
      public Builder mergeErc721Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer value) {
        copyOnWrite();
        instance.mergeErc721Transfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC721Transfer erc721_transfer = 4;</code>
       */
      public Builder clearErc721Transfer() {
        copyOnWrite();
        instance.clearErc721Transfer();
        return this;
      }

      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
       */
      @java.lang.Override
      public boolean hasErc1155Transfer() {
        return instance.hasErc1155Transfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer getErc1155Transfer() {
        return instance.getErc1155Transfer();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
       */
      public Builder setErc1155Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer value) {
        copyOnWrite();
        instance.setErc1155Transfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
       */
      public Builder setErc1155Transfer(
          wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.Builder builderForValue) {
        copyOnWrite();
        instance.setErc1155Transfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
       */
      public Builder mergeErc1155Transfer(wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer value) {
        copyOnWrite();
        instance.mergeErc1155Transfer(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ERC1155Transfer erc1155_transfer = 5;</code>
       */
      public Builder clearErc1155Transfer() {
        copyOnWrite();
        instance.clearErc1155Transfer();
        return this;
      }

      /**
       * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
       */
      @java.lang.Override
      public boolean hasContractGeneric() {
        return instance.hasContractGeneric();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric getContractGeneric() {
        return instance.getContractGeneric();
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
       */
      public Builder setContractGeneric(wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric value) {
        copyOnWrite();
        instance.setContractGeneric(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
       */
      public Builder setContractGeneric(
          wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.Builder builderForValue) {
        copyOnWrite();
        instance.setContractGeneric(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
       */
      public Builder mergeContractGeneric(wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric value) {
        copyOnWrite();
        instance.mergeContractGeneric(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.Transaction.ContractGeneric contract_generic = 6;</code>
       */
      public Builder clearContractGeneric() {
        copyOnWrite();
        instance.clearContractGeneric();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.Transaction)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ethereum.Transaction();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "transactionOneof_",
              "transactionOneofCase_",
              wallet.core.jni.proto.Ethereum.Transaction.Transfer.class,
              wallet.core.jni.proto.Ethereum.Transaction.ERC20Transfer.class,
              wallet.core.jni.proto.Ethereum.Transaction.ERC20Approve.class,
              wallet.core.jni.proto.Ethereum.Transaction.ERC721Transfer.class,
              wallet.core.jni.proto.Ethereum.Transaction.ERC1155Transfer.class,
              wallet.core.jni.proto.Ethereum.Transaction.ContractGeneric.class,
            };
            java.lang.String info =
                "\u0000\u0006\u0001\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001<\u0000\u0002<" +
                "\u0000\u0003<\u0000\u0004<\u0000\u0005<\u0000\u0006<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.Transaction> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ethereum.Transaction.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.Transaction>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.Transaction)
    private static final wallet.core.jni.proto.Ethereum.Transaction DEFAULT_INSTANCE;
    static {
      Transaction defaultInstance = new Transaction();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Transaction.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ethereum.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Transaction> PARSER;

    public static com.google.protobuf.Parser<Transaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Chain identifier (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes chain_id = 1;</code>
     * @return The chainId.
     */
    com.google.protobuf.ByteString getChainId();

    /**
     * <pre>
     * Nonce (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes nonce = 2;</code>
     * @return The nonce.
     */
    com.google.protobuf.ByteString getNonce();

    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     * @return The enum numeric value on the wire for txMode.
     */
    int getTxModeValue();
    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     * @return The txMode.
     */
    wallet.core.jni.proto.Ethereum.TransactionMode getTxMode();

    /**
     * <pre>
     * Gas price (uint256, serialized little endian)
     * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
     * </pre>
     *
     * <code>bytes gas_price = 4;</code>
     * @return The gasPrice.
     */
    com.google.protobuf.ByteString getGasPrice();

    /**
     * <pre>
     * Gas limit (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes gas_limit = 5;</code>
     * @return The gasLimit.
     */
    com.google.protobuf.ByteString getGasLimit();

    /**
     * <pre>
     * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_inclusion_fee_per_gas = 6;</code>
     * @return The maxInclusionFeePerGas.
     */
    com.google.protobuf.ByteString getMaxInclusionFeePerGas();

    /**
     * <pre>
     * Maximum fee (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_fee_per_gas = 7;</code>
     * @return The maxFeePerGas.
     */
    com.google.protobuf.ByteString getMaxFeePerGas();

    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     * @return The toAddress.
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     * @return The bytes for toAddress.
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     * @return Whether the transaction field is set.
     */
    boolean hasTransaction();
    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     * @return The transaction.
     */
    wallet.core.jni.proto.Ethereum.Transaction getTransaction();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * Legacy and EIP2718/EIP1559 transactions supported, see TransactionMode.
   * </pre>
   *
   * Protobuf type {@code TW.Ethereum.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      chainId_ = com.google.protobuf.ByteString.EMPTY;
      nonce_ = com.google.protobuf.ByteString.EMPTY;
      gasPrice_ = com.google.protobuf.ByteString.EMPTY;
      gasLimit_ = com.google.protobuf.ByteString.EMPTY;
      maxInclusionFeePerGas_ = com.google.protobuf.ByteString.EMPTY;
      maxFeePerGas_ = com.google.protobuf.ByteString.EMPTY;
      toAddress_ = "";
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int CHAIN_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString chainId_;
    /**
     * <pre>
     * Chain identifier (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes chain_id = 1;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getChainId() {
      return chainId_;
    }
    /**
     * <pre>
     * Chain identifier (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes chain_id = 1;</code>
     * @param value The chainId to set.
     */
    private void setChainId(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      chainId_ = value;
    }
    /**
     * <pre>
     * Chain identifier (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes chain_id = 1;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }

    public static final int NONCE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <pre>
     * Nonce (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes nonce = 2;</code>
     * @return The nonce.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }
    /**
     * <pre>
     * Nonce (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes nonce = 2;</code>
     * @param value The nonce to set.
     */
    private void setNonce(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      nonce_ = value;
    }
    /**
     * <pre>
     * Nonce (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes nonce = 2;</code>
     */
    private void clearNonce() {
      
      nonce_ = getDefaultInstance().getNonce();
    }

    public static final int TX_MODE_FIELD_NUMBER = 3;
    private int txMode_;
    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     * @return The enum numeric value on the wire for txMode.
     */
    @java.lang.Override
    public int getTxModeValue() {
      return txMode_;
    }
    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     * @return The txMode.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.TransactionMode getTxMode() {
      wallet.core.jni.proto.Ethereum.TransactionMode result = wallet.core.jni.proto.Ethereum.TransactionMode.forNumber(txMode_);
      return result == null ? wallet.core.jni.proto.Ethereum.TransactionMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     * @param value The enum numeric value on the wire for txMode to set.
     */
    private void setTxModeValue(int value) {
        txMode_ = value;
    }
    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     * @param value The txMode to set.
     */
    private void setTxMode(wallet.core.jni.proto.Ethereum.TransactionMode value) {
      txMode_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Transaction version selector: Legacy or enveloped, has impact on fee structure.
     * Default is Legacy (value 0)
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
     */
    private void clearTxMode() {
      
      txMode_ = 0;
    }

    public static final int GAS_PRICE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString gasPrice_;
    /**
     * <pre>
     * Gas price (uint256, serialized little endian)
     * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
     * </pre>
     *
     * <code>bytes gas_price = 4;</code>
     * @return The gasPrice.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getGasPrice() {
      return gasPrice_;
    }
    /**
     * <pre>
     * Gas price (uint256, serialized little endian)
     * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
     * </pre>
     *
     * <code>bytes gas_price = 4;</code>
     * @param value The gasPrice to set.
     */
    private void setGasPrice(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      gasPrice_ = value;
    }
    /**
     * <pre>
     * Gas price (uint256, serialized little endian)
     * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
     * </pre>
     *
     * <code>bytes gas_price = 4;</code>
     */
    private void clearGasPrice() {
      
      gasPrice_ = getDefaultInstance().getGasPrice();
    }

    public static final int GAS_LIMIT_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString gasLimit_;
    /**
     * <pre>
     * Gas limit (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes gas_limit = 5;</code>
     * @return The gasLimit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getGasLimit() {
      return gasLimit_;
    }
    /**
     * <pre>
     * Gas limit (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes gas_limit = 5;</code>
     * @param value The gasLimit to set.
     */
    private void setGasLimit(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      gasLimit_ = value;
    }
    /**
     * <pre>
     * Gas limit (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes gas_limit = 5;</code>
     */
    private void clearGasLimit() {
      
      gasLimit_ = getDefaultInstance().getGasLimit();
    }

    public static final int MAX_INCLUSION_FEE_PER_GAS_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString maxInclusionFeePerGas_;
    /**
     * <pre>
     * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_inclusion_fee_per_gas = 6;</code>
     * @return The maxInclusionFeePerGas.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMaxInclusionFeePerGas() {
      return maxInclusionFeePerGas_;
    }
    /**
     * <pre>
     * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_inclusion_fee_per_gas = 6;</code>
     * @param value The maxInclusionFeePerGas to set.
     */
    private void setMaxInclusionFeePerGas(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      maxInclusionFeePerGas_ = value;
    }
    /**
     * <pre>
     * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_inclusion_fee_per_gas = 6;</code>
     */
    private void clearMaxInclusionFeePerGas() {
      
      maxInclusionFeePerGas_ = getDefaultInstance().getMaxInclusionFeePerGas();
    }

    public static final int MAX_FEE_PER_GAS_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString maxFeePerGas_;
    /**
     * <pre>
     * Maximum fee (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_fee_per_gas = 7;</code>
     * @return The maxFeePerGas.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMaxFeePerGas() {
      return maxFeePerGas_;
    }
    /**
     * <pre>
     * Maximum fee (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_fee_per_gas = 7;</code>
     * @param value The maxFeePerGas to set.
     */
    private void setMaxFeePerGas(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      maxFeePerGas_ = value;
    }
    /**
     * <pre>
     * Maximum fee (uint256, serialized little endian)
     * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
     * </pre>
     *
     * <code>bytes max_fee_per_gas = 7;</code>
     */
    private void clearMaxFeePerGas() {
      
      maxFeePerGas_ = getDefaultInstance().getMaxFeePerGas();
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 8;
    private java.lang.String toAddress_;
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     * @return The toAddress.
     */
    @java.lang.Override
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     * @return The bytes for toAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     * @param value The toAddress to set.
     */
    private void setToAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAddress_ = value;
    }
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 8;</code>
     * @param value The bytes for toAddress to set.
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAddress_ = value.toStringUtf8();
      
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static final int TRANSACTION_FIELD_NUMBER = 10;
    private wallet.core.jni.proto.Ethereum.Transaction transaction_;
    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.Transaction getTransaction() {
      return transaction_ == null ? wallet.core.jni.proto.Ethereum.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     */
    private void setTransaction(wallet.core.jni.proto.Ethereum.Transaction value) {
      value.getClass();
  transaction_ = value;
      
      }
    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTransaction(wallet.core.jni.proto.Ethereum.Transaction value) {
      value.getClass();
  if (transaction_ != null &&
          transaction_ != wallet.core.jni.proto.Ethereum.Transaction.getDefaultInstance()) {
        transaction_ =
          wallet.core.jni.proto.Ethereum.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
      } else {
        transaction_ = value;
      }
      
    }
    /**
     * <pre>
     * The payload transaction
     * </pre>
     *
     * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
     */
    private void clearTransaction() {  transaction_ = null;
      
    }

    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ethereum.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * Legacy and EIP2718/EIP1559 transactions supported, see TransactionMode.
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ethereum.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.SigningInput)
        wallet.core.jni.proto.Ethereum.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.Ethereum.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Chain identifier (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes chain_id = 1;</code>
       * @return The chainId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getChainId() {
        return instance.getChainId();
      }
      /**
       * <pre>
       * Chain identifier (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes chain_id = 1;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <pre>
       * Chain identifier (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes chain_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }

      /**
       * <pre>
       * Nonce (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes nonce = 2;</code>
       * @return The nonce.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getNonce() {
        return instance.getNonce();
      }
      /**
       * <pre>
       * Nonce (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes nonce = 2;</code>
       * @param value The nonce to set.
       * @return This builder for chaining.
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNonce(value);
        return this;
      }
      /**
       * <pre>
       * Nonce (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes nonce = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNonce() {
        copyOnWrite();
        instance.clearNonce();
        return this;
      }

      /**
       * <pre>
       * Transaction version selector: Legacy or enveloped, has impact on fee structure.
       * Default is Legacy (value 0)
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
       * @return The enum numeric value on the wire for txMode.
       */
      @java.lang.Override
      public int getTxModeValue() {
        return instance.getTxModeValue();
      }
      /**
       * <pre>
       * Transaction version selector: Legacy or enveloped, has impact on fee structure.
       * Default is Legacy (value 0)
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
       * @param value The txMode to set.
       * @return This builder for chaining.
       */
      public Builder setTxModeValue(int value) {
        copyOnWrite();
        instance.setTxModeValue(value);
        return this;
      }
      /**
       * <pre>
       * Transaction version selector: Legacy or enveloped, has impact on fee structure.
       * Default is Legacy (value 0)
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
       * @return The txMode.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.TransactionMode getTxMode() {
        return instance.getTxMode();
      }
      /**
       * <pre>
       * Transaction version selector: Legacy or enveloped, has impact on fee structure.
       * Default is Legacy (value 0)
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
       * @param value The enum numeric value on the wire for txMode to set.
       * @return This builder for chaining.
       */
      public Builder setTxMode(wallet.core.jni.proto.Ethereum.TransactionMode value) {
        copyOnWrite();
        instance.setTxMode(value);
        return this;
      }
      /**
       * <pre>
       * Transaction version selector: Legacy or enveloped, has impact on fee structure.
       * Default is Legacy (value 0)
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.TransactionMode tx_mode = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxMode() {
        copyOnWrite();
        instance.clearTxMode();
        return this;
      }

      /**
       * <pre>
       * Gas price (uint256, serialized little endian)
       * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
       * </pre>
       *
       * <code>bytes gas_price = 4;</code>
       * @return The gasPrice.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getGasPrice() {
        return instance.getGasPrice();
      }
      /**
       * <pre>
       * Gas price (uint256, serialized little endian)
       * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
       * </pre>
       *
       * <code>bytes gas_price = 4;</code>
       * @param value The gasPrice to set.
       * @return This builder for chaining.
       */
      public Builder setGasPrice(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGasPrice(value);
        return this;
      }
      /**
       * <pre>
       * Gas price (uint256, serialized little endian)
       * Relevant for legacy transactions only (disregarded for enveloped/EIP1559)
       * </pre>
       *
       * <code>bytes gas_price = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasPrice() {
        copyOnWrite();
        instance.clearGasPrice();
        return this;
      }

      /**
       * <pre>
       * Gas limit (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes gas_limit = 5;</code>
       * @return The gasLimit.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getGasLimit() {
        return instance.getGasLimit();
      }
      /**
       * <pre>
       * Gas limit (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes gas_limit = 5;</code>
       * @param value The gasLimit to set.
       * @return This builder for chaining.
       */
      public Builder setGasLimit(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGasLimit(value);
        return this;
      }
      /**
       * <pre>
       * Gas limit (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes gas_limit = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasLimit() {
        copyOnWrite();
        instance.clearGasLimit();
        return this;
      }

      /**
       * <pre>
       * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
       * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
       * </pre>
       *
       * <code>bytes max_inclusion_fee_per_gas = 6;</code>
       * @return The maxInclusionFeePerGas.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMaxInclusionFeePerGas() {
        return instance.getMaxInclusionFeePerGas();
      }
      /**
       * <pre>
       * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
       * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
       * </pre>
       *
       * <code>bytes max_inclusion_fee_per_gas = 6;</code>
       * @param value The maxInclusionFeePerGas to set.
       * @return This builder for chaining.
       */
      public Builder setMaxInclusionFeePerGas(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMaxInclusionFeePerGas(value);
        return this;
      }
      /**
       * <pre>
       * Maximum optional inclusion fee (aka tip) (uint256, serialized little endian)
       * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
       * </pre>
       *
       * <code>bytes max_inclusion_fee_per_gas = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxInclusionFeePerGas() {
        copyOnWrite();
        instance.clearMaxInclusionFeePerGas();
        return this;
      }

      /**
       * <pre>
       * Maximum fee (uint256, serialized little endian)
       * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
       * </pre>
       *
       * <code>bytes max_fee_per_gas = 7;</code>
       * @return The maxFeePerGas.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMaxFeePerGas() {
        return instance.getMaxFeePerGas();
      }
      /**
       * <pre>
       * Maximum fee (uint256, serialized little endian)
       * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
       * </pre>
       *
       * <code>bytes max_fee_per_gas = 7;</code>
       * @param value The maxFeePerGas to set.
       * @return This builder for chaining.
       */
      public Builder setMaxFeePerGas(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMaxFeePerGas(value);
        return this;
      }
      /**
       * <pre>
       * Maximum fee (uint256, serialized little endian)
       * Relevant for enveloped/EIP1559 transactions only, tx_mode=Enveloped, (disregarded for legacy)
       * </pre>
       *
       * <code>bytes max_fee_per_gas = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxFeePerGas() {
        copyOnWrite();
        instance.clearMaxFeePerGas();
        return this;
      }

      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 8;</code>
       * @return The toAddress.
       */
      @java.lang.Override
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 8;</code>
       * @return The bytes for toAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 8;</code>
       * @param value The toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 8;</code>
       * @param value The bytes for toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <pre>
       * The payload transaction
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
       */
      @java.lang.Override
      public boolean hasTransaction() {
        return instance.hasTransaction();
      }
      /**
       * <pre>
       * The payload transaction
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.Transaction getTransaction() {
        return instance.getTransaction();
      }
      /**
       * <pre>
       * The payload transaction
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
       */
      public Builder setTransaction(wallet.core.jni.proto.Ethereum.Transaction value) {
        copyOnWrite();
        instance.setTransaction(value);
        return this;
        }
      /**
       * <pre>
       * The payload transaction
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
       */
      public Builder setTransaction(
          wallet.core.jni.proto.Ethereum.Transaction.Builder builderForValue) {
        copyOnWrite();
        instance.setTransaction(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The payload transaction
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
       */
      public Builder mergeTransaction(wallet.core.jni.proto.Ethereum.Transaction value) {
        copyOnWrite();
        instance.mergeTransaction(value);
        return this;
      }
      /**
       * <pre>
       * The payload transaction
       * </pre>
       *
       * <code>.TW.Ethereum.Proto.Transaction transaction = 10;</code>
       */
      public Builder clearTransaction() {  copyOnWrite();
        instance.clearTransaction();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ethereum.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "chainId_",
              "nonce_",
              "txMode_",
              "gasPrice_",
              "gasLimit_",
              "maxInclusionFeePerGas_",
              "maxFeePerGas_",
              "toAddress_",
              "privateKey_",
              "transaction_",
            };
            java.lang.String info =
                "\u0000\n\u0000\u0000\u0001\n\n\u0000\u0000\u0000\u0001\n\u0002\n\u0003\f\u0004\n" +
                "\u0005\n\u0006\n\u0007\n\b\u0208\t\n\n\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ethereum.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.SigningInput)
    private static final wallet.core.jni.proto.Ethereum.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ethereum.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ethereum.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes v = 2;</code>
     * @return The v.
     */
    com.google.protobuf.ByteString getV();

    /**
     * <code>bytes r = 3;</code>
     * @return The r.
     */
    com.google.protobuf.ByteString getR();

    /**
     * <code>bytes s = 4;</code>
     * @return The s.
     */
    com.google.protobuf.ByteString getS();

    /**
     * <pre>
     * The payload part, supplied in the input or assembled from input parameters
     * </pre>
     *
     * <code>bytes data = 5;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();

    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     * @return The errorMessage.
     */
    java.lang.String getErrorMessage();
    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     * @return The bytes for errorMessage.
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Ethereum.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ethereum.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      v_ = com.google.protobuf.ByteString.EMPTY;
      r_ = com.google.protobuf.ByteString.EMPTY;
      s_ = com.google.protobuf.ByteString.EMPTY;
      data_ = com.google.protobuf.ByteString.EMPTY;
      errorMessage_ = "";
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int V_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString v_;
    /**
     * <pre>
     * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes v = 2;</code>
     * @return The v.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getV() {
      return v_;
    }
    /**
     * <pre>
     * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes v = 2;</code>
     * @param value The v to set.
     */
    private void setV(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      v_ = value;
    }
    /**
     * <pre>
     * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes v = 2;</code>
     */
    private void clearV() {
      
      v_ = getDefaultInstance().getV();
    }

    public static final int R_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString r_;
    /**
     * <code>bytes r = 3;</code>
     * @return The r.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getR() {
      return r_;
    }
    /**
     * <code>bytes r = 3;</code>
     * @param value The r to set.
     */
    private void setR(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      r_ = value;
    }
    /**
     * <code>bytes r = 3;</code>
     */
    private void clearR() {
      
      r_ = getDefaultInstance().getR();
    }

    public static final int S_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString s_;
    /**
     * <code>bytes s = 4;</code>
     * @return The s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getS() {
      return s_;
    }
    /**
     * <code>bytes s = 4;</code>
     * @param value The s to set.
     */
    private void setS(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      s_ = value;
    }
    /**
     * <code>bytes s = 4;</code>
     */
    private void clearS() {
      
      s_ = getDefaultInstance().getS();
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The payload part, supplied in the input or assembled from input parameters
     * </pre>
     *
     * <code>bytes data = 5;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * The payload part, supplied in the input or assembled from input parameters
     * </pre>
     *
     * <code>bytes data = 5;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      data_ = value;
    }
    /**
     * <pre>
     * The payload part, supplied in the input or assembled from input parameters
     * </pre>
     *
     * <code>bytes data = 5;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static final int ERROR_FIELD_NUMBER = 6;
    private int error_;
    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * error code, 0 is ok, other codes will be treated as errors
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 6;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static final int ERROR_MESSAGE_FIELD_NUMBER = 7;
    private java.lang.String errorMessage_;
    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     * @return The errorMessage.
     */
    @java.lang.Override
    public java.lang.String getErrorMessage() {
      return errorMessage_;
    }
    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     * @return The bytes for errorMessage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(errorMessage_);
    }
    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     * @param value The errorMessage to set.
     */
    private void setErrorMessage(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      errorMessage_ = value;
    }
    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     */
    private void clearErrorMessage() {
      
      errorMessage_ = getDefaultInstance().getErrorMessage();
    }
    /**
     * <pre>
     * error code description
     * </pre>
     *
     * <code>string error_message = 7;</code>
     * @param value The bytes for errorMessage to set.
     */
    private void setErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      errorMessage_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ethereum.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ethereum.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Ethereum.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ethereum.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ethereum.Proto.SigningOutput)
        wallet.core.jni.proto.Ethereum.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Ethereum.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes v = 2;</code>
       * @return The v.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getV() {
        return instance.getV();
      }
      /**
       * <pre>
       * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes v = 2;</code>
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setV(value);
        return this;
      }
      /**
       * <pre>
       * The V, R, S components of the resulting signature, (each uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes v = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        copyOnWrite();
        instance.clearV();
        return this;
      }

      /**
       * <code>bytes r = 3;</code>
       * @return The r.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getR() {
        return instance.getR();
      }
      /**
       * <code>bytes r = 3;</code>
       * @param value The r to set.
       * @return This builder for chaining.
       */
      public Builder setR(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setR(value);
        return this;
      }
      /**
       * <code>bytes r = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearR() {
        copyOnWrite();
        instance.clearR();
        return this;
      }

      /**
       * <code>bytes s = 4;</code>
       * @return The s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getS() {
        return instance.getS();
      }
      /**
       * <code>bytes s = 4;</code>
       * @param value The s to set.
       * @return This builder for chaining.
       */
      public Builder setS(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setS(value);
        return this;
      }
      /**
       * <code>bytes s = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearS() {
        copyOnWrite();
        instance.clearS();
        return this;
      }

      /**
       * <pre>
       * The payload part, supplied in the input or assembled from input parameters
       * </pre>
       *
       * <code>bytes data = 5;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * The payload part, supplied in the input or assembled from input parameters
       * </pre>
       *
       * <code>bytes data = 5;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * The payload part, supplied in the input or assembled from input parameters
       * </pre>
       *
       * <code>bytes data = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <pre>
       * error code, 0 is ok, other codes will be treated as errors
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 6;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * error code, 0 is ok, other codes will be treated as errors
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 6;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * error code, 0 is ok, other codes will be treated as errors
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 6;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * error code, 0 is ok, other codes will be treated as errors
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 6;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * error code, 0 is ok, other codes will be treated as errors
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      /**
       * <pre>
       * error code description
       * </pre>
       *
       * <code>string error_message = 7;</code>
       * @return The errorMessage.
       */
      @java.lang.Override
      public java.lang.String getErrorMessage() {
        return instance.getErrorMessage();
      }
      /**
       * <pre>
       * error code description
       * </pre>
       *
       * <code>string error_message = 7;</code>
       * @return The bytes for errorMessage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        return instance.getErrorMessageBytes();
      }
      /**
       * <pre>
       * error code description
       * </pre>
       *
       * <code>string error_message = 7;</code>
       * @param value The errorMessage to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setErrorMessage(value);
        return this;
      }
      /**
       * <pre>
       * error code description
       * </pre>
       *
       * <code>string error_message = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorMessage() {
        copyOnWrite();
        instance.clearErrorMessage();
        return this;
      }
      /**
       * <pre>
       * error code description
       * </pre>
       *
       * <code>string error_message = 7;</code>
       * @param value The bytes for errorMessage to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setErrorMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ethereum.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ethereum.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "v_",
              "r_",
              "s_",
              "data_",
              "error_",
              "errorMessage_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\n\u0002\n\u0003" +
                "\n\u0004\n\u0005\n\u0006\f\u0007\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ethereum.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ethereum.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ethereum.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ethereum.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Ethereum.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ethereum.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
