// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NEO.proto

package wallet.core.jni.proto;

public final class NEO {
  private NEO() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface TransactionInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NEO.Proto.TransactionInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Previous tx hash
     * </pre>
     *
     * <code>bytes prev_hash = 1;</code>
     * @return The prevHash.
     */
    com.google.protobuf.ByteString getPrevHash();

    /**
     * <pre>
     * Output index
     * </pre>
     *
     * <code>fixed32 prev_index = 2;</code>
     * @return The prevIndex.
     */
    int getPrevIndex();

    /**
     * <pre>
     * unspent value of UTXO
     * </pre>
     *
     * <code>int64 value = 3;</code>
     * @return The value.
     */
    long getValue();

    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The assetId.
     */
    java.lang.String getAssetId();
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The bytes for assetId.
     */
    com.google.protobuf.ByteString
        getAssetIdBytes();
  }
  /**
   * <pre>
   * Input for a transaction (output of a prev tx)
   * </pre>
   *
   * Protobuf type {@code TW.NEO.Proto.TransactionInput}
   */
  public  static final class TransactionInput extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionInput, TransactionInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NEO.Proto.TransactionInput)
      TransactionInputOrBuilder {
    private TransactionInput() {
      prevHash_ = com.google.protobuf.ByteString.EMPTY;
      assetId_ = "";
    }
    public static final int PREV_HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString prevHash_;
    /**
     * <pre>
     * Previous tx hash
     * </pre>
     *
     * <code>bytes prev_hash = 1;</code>
     * @return The prevHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrevHash() {
      return prevHash_;
    }
    /**
     * <pre>
     * Previous tx hash
     * </pre>
     *
     * <code>bytes prev_hash = 1;</code>
     * @param value The prevHash to set.
     */
    private void setPrevHash(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      prevHash_ = value;
    }
    /**
     * <pre>
     * Previous tx hash
     * </pre>
     *
     * <code>bytes prev_hash = 1;</code>
     */
    private void clearPrevHash() {
      
      prevHash_ = getDefaultInstance().getPrevHash();
    }

    public static final int PREV_INDEX_FIELD_NUMBER = 2;
    private int prevIndex_;
    /**
     * <pre>
     * Output index
     * </pre>
     *
     * <code>fixed32 prev_index = 2;</code>
     * @return The prevIndex.
     */
    @java.lang.Override
    public int getPrevIndex() {
      return prevIndex_;
    }
    /**
     * <pre>
     * Output index
     * </pre>
     *
     * <code>fixed32 prev_index = 2;</code>
     * @param value The prevIndex to set.
     */
    private void setPrevIndex(int value) {
      
      prevIndex_ = value;
    }
    /**
     * <pre>
     * Output index
     * </pre>
     *
     * <code>fixed32 prev_index = 2;</code>
     */
    private void clearPrevIndex() {
      
      prevIndex_ = 0;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private long value_;
    /**
     * <pre>
     * unspent value of UTXO
     * </pre>
     *
     * <code>int64 value = 3;</code>
     * @return The value.
     */
    @java.lang.Override
    public long getValue() {
      return value_;
    }
    /**
     * <pre>
     * unspent value of UTXO
     * </pre>
     *
     * <code>int64 value = 3;</code>
     * @param value The value to set.
     */
    private void setValue(long value) {
      
      value_ = value;
    }
    /**
     * <pre>
     * unspent value of UTXO
     * </pre>
     *
     * <code>int64 value = 3;</code>
     */
    private void clearValue() {
      
      value_ = 0L;
    }

    public static final int ASSET_ID_FIELD_NUMBER = 4;
    private java.lang.String assetId_;
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The assetId.
     */
    @java.lang.Override
    public java.lang.String getAssetId() {
      return assetId_;
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The bytes for assetId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAssetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(assetId_);
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @param value The assetId to set.
     */
    private void setAssetId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      assetId_ = value;
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     */
    private void clearAssetId() {
      
      assetId_ = getDefaultInstance().getAssetId();
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @param value The bytes for assetId to set.
     */
    private void setAssetIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      assetId_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NEO.TransactionInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input for a transaction (output of a prev tx)
     * </pre>
     *
     * Protobuf type {@code TW.NEO.Proto.TransactionInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NEO.TransactionInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NEO.Proto.TransactionInput)
        wallet.core.jni.proto.NEO.TransactionInputOrBuilder {
      // Construct using wallet.core.jni.proto.NEO.TransactionInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Previous tx hash
       * </pre>
       *
       * <code>bytes prev_hash = 1;</code>
       * @return The prevHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrevHash() {
        return instance.getPrevHash();
      }
      /**
       * <pre>
       * Previous tx hash
       * </pre>
       *
       * <code>bytes prev_hash = 1;</code>
       * @param value The prevHash to set.
       * @return This builder for chaining.
       */
      public Builder setPrevHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrevHash(value);
        return this;
      }
      /**
       * <pre>
       * Previous tx hash
       * </pre>
       *
       * <code>bytes prev_hash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevHash() {
        copyOnWrite();
        instance.clearPrevHash();
        return this;
      }

      /**
       * <pre>
       * Output index
       * </pre>
       *
       * <code>fixed32 prev_index = 2;</code>
       * @return The prevIndex.
       */
      @java.lang.Override
      public int getPrevIndex() {
        return instance.getPrevIndex();
      }
      /**
       * <pre>
       * Output index
       * </pre>
       *
       * <code>fixed32 prev_index = 2;</code>
       * @param value The prevIndex to set.
       * @return This builder for chaining.
       */
      public Builder setPrevIndex(int value) {
        copyOnWrite();
        instance.setPrevIndex(value);
        return this;
      }
      /**
       * <pre>
       * Output index
       * </pre>
       *
       * <code>fixed32 prev_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevIndex() {
        copyOnWrite();
        instance.clearPrevIndex();
        return this;
      }

      /**
       * <pre>
       * unspent value of UTXO
       * </pre>
       *
       * <code>int64 value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public long getValue() {
        return instance.getValue();
      }
      /**
       * <pre>
       * unspent value of UTXO
       * </pre>
       *
       * <code>int64 value = 3;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(long value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <pre>
       * unspent value of UTXO
       * </pre>
       *
       * <code>int64 value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }

      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @return The assetId.
       */
      @java.lang.Override
      public java.lang.String getAssetId() {
        return instance.getAssetId();
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @return The bytes for assetId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAssetIdBytes() {
        return instance.getAssetIdBytes();
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @param value The assetId to set.
       * @return This builder for chaining.
       */
      public Builder setAssetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setAssetId(value);
        return this;
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssetId() {
        copyOnWrite();
        instance.clearAssetId();
        return this;
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @param value The bytes for assetId to set.
       * @return This builder for chaining.
       */
      public Builder setAssetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAssetIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NEO.Proto.TransactionInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NEO.TransactionInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "prevHash_",
              "prevIndex_",
              "value_",
              "assetId_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\n\u0002\u0006" +
                "\u0003\u0002\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NEO.TransactionInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NEO.TransactionInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NEO.TransactionInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NEO.Proto.TransactionInput)
    private static final wallet.core.jni.proto.NEO.TransactionInput DEFAULT_INSTANCE;
    static {
      TransactionInput defaultInstance = new TransactionInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NEO.TransactionInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionInput> PARSER;

    public static com.google.protobuf.Parser<TransactionInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NEO.Proto.TransactionOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     * @return The assetId.
     */
    java.lang.String getAssetId();
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     * @return The bytes for assetId.
     */
    com.google.protobuf.ByteString
        getAssetIdBytes();

    /**
     * <pre>
     * Amount (as string)
     * </pre>
     *
     * <code>sint64 amount = 2;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     * @return The toAddress.
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     * @return The bytes for toAddress.
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     * @return The changeAddress.
     */
    java.lang.String getChangeAddress();
    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     * @return The bytes for changeAddress.
     */
    com.google.protobuf.ByteString
        getChangeAddressBytes();
  }
  /**
   * <pre>
   * Output of a transaction
   * </pre>
   *
   * Protobuf type {@code TW.NEO.Proto.TransactionOutput}
   */
  public  static final class TransactionOutput extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionOutput, TransactionOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NEO.Proto.TransactionOutput)
      TransactionOutputOrBuilder {
    private TransactionOutput() {
      assetId_ = "";
      toAddress_ = "";
      changeAddress_ = "";
    }
    public static final int ASSET_ID_FIELD_NUMBER = 1;
    private java.lang.String assetId_;
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     * @return The assetId.
     */
    @java.lang.Override
    public java.lang.String getAssetId() {
      return assetId_;
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     * @return The bytes for assetId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAssetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(assetId_);
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     * @param value The assetId to set.
     */
    private void setAssetId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      assetId_ = value;
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     */
    private void clearAssetId() {
      
      assetId_ = getDefaultInstance().getAssetId();
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 1;</code>
     * @param value The bytes for assetId to set.
     */
    private void setAssetIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      assetId_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <pre>
     * Amount (as string)
     * </pre>
     *
     * <code>sint64 amount = 2;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Amount (as string)
     * </pre>
     *
     * <code>sint64 amount = 2;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * Amount (as string)
     * </pre>
     *
     * <code>sint64 amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 3;
    private java.lang.String toAddress_;
    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     * @return The toAddress.
     */
    @java.lang.Override
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     * @return The bytes for toAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     * @param value The toAddress to set.
     */
    private void setToAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAddress_ = value;
    }
    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <pre>
     * destination address
     * </pre>
     *
     * <code>string to_address = 3;</code>
     * @param value The bytes for toAddress to set.
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAddress_ = value.toStringUtf8();
      
    }

    public static final int CHANGE_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.String changeAddress_;
    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     * @return The changeAddress.
     */
    @java.lang.Override
    public java.lang.String getChangeAddress() {
      return changeAddress_;
    }
    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     * @return The bytes for changeAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChangeAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(changeAddress_);
    }
    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     * @param value The changeAddress to set.
     */
    private void setChangeAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      changeAddress_ = value;
    }
    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     */
    private void clearChangeAddress() {
      
      changeAddress_ = getDefaultInstance().getChangeAddress();
    }
    /**
     * <pre>
     * change address
     * </pre>
     *
     * <code>string change_address = 4;</code>
     * @param value The bytes for changeAddress to set.
     */
    private void setChangeAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      changeAddress_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NEO.TransactionOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Output of a transaction
     * </pre>
     *
     * Protobuf type {@code TW.NEO.Proto.TransactionOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NEO.TransactionOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NEO.Proto.TransactionOutput)
        wallet.core.jni.proto.NEO.TransactionOutputOrBuilder {
      // Construct using wallet.core.jni.proto.NEO.TransactionOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 1;</code>
       * @return The assetId.
       */
      @java.lang.Override
      public java.lang.String getAssetId() {
        return instance.getAssetId();
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 1;</code>
       * @return The bytes for assetId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAssetIdBytes() {
        return instance.getAssetIdBytes();
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 1;</code>
       * @param value The assetId to set.
       * @return This builder for chaining.
       */
      public Builder setAssetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setAssetId(value);
        return this;
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssetId() {
        copyOnWrite();
        instance.clearAssetId();
        return this;
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 1;</code>
       * @param value The bytes for assetId to set.
       * @return This builder for chaining.
       */
      public Builder setAssetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAssetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Amount (as string)
       * </pre>
       *
       * <code>sint64 amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Amount (as string)
       * </pre>
       *
       * <code>sint64 amount = 2;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Amount (as string)
       * </pre>
       *
       * <code>sint64 amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>string to_address = 3;</code>
       * @return The toAddress.
       */
      @java.lang.Override
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>string to_address = 3;</code>
       * @return The bytes for toAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>string to_address = 3;</code>
       * @param value The toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>string to_address = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <pre>
       * destination address
       * </pre>
       *
       * <code>string to_address = 3;</code>
       * @param value The bytes for toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * change address
       * </pre>
       *
       * <code>string change_address = 4;</code>
       * @return The changeAddress.
       */
      @java.lang.Override
      public java.lang.String getChangeAddress() {
        return instance.getChangeAddress();
      }
      /**
       * <pre>
       * change address
       * </pre>
       *
       * <code>string change_address = 4;</code>
       * @return The bytes for changeAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChangeAddressBytes() {
        return instance.getChangeAddressBytes();
      }
      /**
       * <pre>
       * change address
       * </pre>
       *
       * <code>string change_address = 4;</code>
       * @param value The changeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setChangeAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setChangeAddress(value);
        return this;
      }
      /**
       * <pre>
       * change address
       * </pre>
       *
       * <code>string change_address = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeAddress() {
        copyOnWrite();
        instance.clearChangeAddress();
        return this;
      }
      /**
       * <pre>
       * change address
       * </pre>
       *
       * <code>string change_address = 4;</code>
       * @param value The bytes for changeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChangeAddressBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NEO.Proto.TransactionOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NEO.TransactionOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "assetId_",
              "amount_",
              "toAddress_",
              "changeAddress_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u0010" +
                "\u0003\u0208\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NEO.TransactionOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NEO.TransactionOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NEO.TransactionOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NEO.Proto.TransactionOutput)
    private static final wallet.core.jni.proto.NEO.TransactionOutput DEFAULT_INSTANCE;
    static {
      TransactionOutput defaultInstance = new TransactionOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NEO.TransactionOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionOutput> PARSER;

    public static com.google.protobuf.Parser<TransactionOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NEO.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    java.util.List<wallet.core.jni.proto.NEO.TransactionInput> 
        getInputsList();
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    wallet.core.jni.proto.NEO.TransactionInput getInputs(int index);
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    int getInputsCount();

    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    java.util.List<wallet.core.jni.proto.NEO.TransactionOutput> 
        getOutputsList();
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    wallet.core.jni.proto.NEO.TransactionOutput getOutputs(int index);
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    int getOutputsCount();

    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 3;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <pre>
     * Fee
     * </pre>
     *
     * <code>int64 fee = 4;</code>
     * @return The fee.
     */
    long getFee();

    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     * @return The gasAssetId.
     */
    java.lang.String getGasAssetId();
    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     * @return The bytes for gasAssetId.
     */
    com.google.protobuf.ByteString
        getGasAssetIdBytes();

    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     * @return The gasChangeAddress.
     */
    java.lang.String getGasChangeAddress();
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     * @return The bytes for gasChangeAddress.
     */
    com.google.protobuf.ByteString
        getGasChangeAddressBytes();

    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     * @return Whether the plan field is set.
     */
    boolean hasPlan();
    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     * @return The plan.
     */
    wallet.core.jni.proto.NEO.TransactionPlan getPlan();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.NEO.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NEO.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      inputs_ = emptyProtobufList();
      outputs_ = emptyProtobufList();
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
      gasAssetId_ = "";
      gasChangeAddress_ = "";
    }
    public static final int INPUTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionInput> inputs_;
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.NEO.TransactionInput> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.NEO.TransactionInputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    @java.lang.Override
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NEO.TransactionInput getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    public wallet.core.jni.proto.NEO.TransactionInputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }
    private void ensureInputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionInput> tmp = inputs_;
      if (!tmp.isModifiable()) {
        inputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    private void setInputs(
        int index, wallet.core.jni.proto.NEO.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.set(index, value);
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    private void addInputs(wallet.core.jni.proto.NEO.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(value);
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    private void addInputs(
        int index, wallet.core.jni.proto.NEO.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(index, value);
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    private void addAllInputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionInput> values) {
      ensureInputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inputs_);
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    private void clearInputs() {
      inputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Available transaction inputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
     */
    private void removeInputs(int index) {
      ensureInputsIsMutable();
      inputs_.remove(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionOutput> outputs_;
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.NEO.TransactionOutput> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.NEO.TransactionOutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NEO.TransactionOutput getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    public wallet.core.jni.proto.NEO.TransactionOutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }
    private void ensureOutputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionOutput> tmp = outputs_;
      if (!tmp.isModifiable()) {
        outputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    private void setOutputs(
        int index, wallet.core.jni.proto.NEO.TransactionOutput value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.set(index, value);
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    private void addOutputs(wallet.core.jni.proto.NEO.TransactionOutput value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(value);
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    private void addOutputs(
        int index, wallet.core.jni.proto.NEO.TransactionOutput value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(index, value);
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    private void addAllOutputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionOutput> values) {
      ensureOutputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outputs_);
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    private void clearOutputs() {
      outputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Transaction outputs
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
     */
    private void removeOutputs(int index) {
      ensureOutputsIsMutable();
      outputs_.remove(index);
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 3;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 3;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 3;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static final int FEE_FIELD_NUMBER = 4;
    private long fee_;
    /**
     * <pre>
     * Fee
     * </pre>
     *
     * <code>int64 fee = 4;</code>
     * @return The fee.
     */
    @java.lang.Override
    public long getFee() {
      return fee_;
    }
    /**
     * <pre>
     * Fee
     * </pre>
     *
     * <code>int64 fee = 4;</code>
     * @param value The fee to set.
     */
    private void setFee(long value) {
      
      fee_ = value;
    }
    /**
     * <pre>
     * Fee
     * </pre>
     *
     * <code>int64 fee = 4;</code>
     */
    private void clearFee() {
      
      fee_ = 0L;
    }

    public static final int GAS_ASSET_ID_FIELD_NUMBER = 5;
    private java.lang.String gasAssetId_;
    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     * @return The gasAssetId.
     */
    @java.lang.Override
    public java.lang.String getGasAssetId() {
      return gasAssetId_;
    }
    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     * @return The bytes for gasAssetId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGasAssetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gasAssetId_);
    }
    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     * @param value The gasAssetId to set.
     */
    private void setGasAssetId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      gasAssetId_ = value;
    }
    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     */
    private void clearGasAssetId() {
      
      gasAssetId_ = getDefaultInstance().getGasAssetId();
    }
    /**
     * <pre>
     * Asset ID for gas
     * </pre>
     *
     * <code>string gas_asset_id = 5;</code>
     * @param value The bytes for gasAssetId to set.
     */
    private void setGasAssetIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      gasAssetId_ = value.toStringUtf8();
      
    }

    public static final int GAS_CHANGE_ADDRESS_FIELD_NUMBER = 6;
    private java.lang.String gasChangeAddress_;
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     * @return The gasChangeAddress.
     */
    @java.lang.Override
    public java.lang.String getGasChangeAddress() {
      return gasChangeAddress_;
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     * @return The bytes for gasChangeAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGasChangeAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gasChangeAddress_);
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     * @param value The gasChangeAddress to set.
     */
    private void setGasChangeAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      gasChangeAddress_ = value;
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     */
    private void clearGasChangeAddress() {
      
      gasChangeAddress_ = getDefaultInstance().getGasChangeAddress();
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string gas_change_address = 6;</code>
     * @param value The bytes for gasChangeAddress to set.
     */
    private void setGasChangeAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      gasChangeAddress_ = value.toStringUtf8();
      
    }

    public static final int PLAN_FIELD_NUMBER = 7;
    private wallet.core.jni.proto.NEO.TransactionPlan plan_;
    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     */
    @java.lang.Override
    public boolean hasPlan() {
      return plan_ != null;
    }
    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NEO.TransactionPlan getPlan() {
      return plan_ == null ? wallet.core.jni.proto.NEO.TransactionPlan.getDefaultInstance() : plan_;
    }
    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     */
    private void setPlan(wallet.core.jni.proto.NEO.TransactionPlan value) {
      value.getClass();
  plan_ = value;
      
      }
    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePlan(wallet.core.jni.proto.NEO.TransactionPlan value) {
      value.getClass();
  if (plan_ != null &&
          plan_ != wallet.core.jni.proto.NEO.TransactionPlan.getDefaultInstance()) {
        plan_ =
          wallet.core.jni.proto.NEO.TransactionPlan.newBuilder(plan_).mergeFrom(value).buildPartial();
      } else {
        plan_ = value;
      }
      
    }
    /**
     * <pre>
     * Optional transaction plan (if missing it will be computed)
     * </pre>
     *
     * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
     */
    private void clearPlan() {  plan_ = null;
      
    }

    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NEO.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.NEO.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NEO.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NEO.Proto.SigningInput)
        wallet.core.jni.proto.NEO.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.NEO.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.NEO.TransactionInput> getInputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getInputsList());
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      @java.lang.Override
      public int getInputsCount() {
        return instance.getInputsCount();
      }/**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NEO.TransactionInput getInputs(int index) {
        return instance.getInputs(index);
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput value) {
        copyOnWrite();
        instance.setInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.setInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder addInputs(wallet.core.jni.proto.NEO.TransactionInput value) {
        copyOnWrite();
        instance.addInputs(value);
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput value) {
        copyOnWrite();
        instance.addInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder addInputs(
          wallet.core.jni.proto.NEO.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionInput> values) {
        copyOnWrite();
        instance.addAllInputs(values);
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder clearInputs() {
        copyOnWrite();
        instance.clearInputs();
        return this;
      }
      /**
       * <pre>
       * Available transaction inputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 1;</code>
       */
      public Builder removeInputs(int index) {
        copyOnWrite();
        instance.removeInputs(index);
        return this;
      }

      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.NEO.TransactionOutput> getOutputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOutputsList());
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      @java.lang.Override
      public int getOutputsCount() {
        return instance.getOutputsCount();
      }/**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NEO.TransactionOutput getOutputs(int index) {
        return instance.getOutputs(index);
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutput value) {
        copyOnWrite();
        instance.setOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutput.Builder builderForValue) {
        copyOnWrite();
        instance.setOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder addOutputs(wallet.core.jni.proto.NEO.TransactionOutput value) {
        copyOnWrite();
        instance.addOutputs(value);
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutput value) {
        copyOnWrite();
        instance.addOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder addOutputs(
          wallet.core.jni.proto.NEO.TransactionOutput.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutput.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionOutput> values) {
        copyOnWrite();
        instance.addAllOutputs(values);
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder clearOutputs() {
        copyOnWrite();
        instance.clearOutputs();
        return this;
      }
      /**
       * <pre>
       * Transaction outputs
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutput outputs = 2;</code>
       */
      public Builder removeOutputs(int index) {
        copyOnWrite();
        instance.removeOutputs(index);
        return this;
      }

      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 3;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 3;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <pre>
       * Fee
       * </pre>
       *
       * <code>int64 fee = 4;</code>
       * @return The fee.
       */
      @java.lang.Override
      public long getFee() {
        return instance.getFee();
      }
      /**
       * <pre>
       * Fee
       * </pre>
       *
       * <code>int64 fee = 4;</code>
       * @param value The fee to set.
       * @return This builder for chaining.
       */
      public Builder setFee(long value) {
        copyOnWrite();
        instance.setFee(value);
        return this;
      }
      /**
       * <pre>
       * Fee
       * </pre>
       *
       * <code>int64 fee = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFee() {
        copyOnWrite();
        instance.clearFee();
        return this;
      }

      /**
       * <pre>
       * Asset ID for gas
       * </pre>
       *
       * <code>string gas_asset_id = 5;</code>
       * @return The gasAssetId.
       */
      @java.lang.Override
      public java.lang.String getGasAssetId() {
        return instance.getGasAssetId();
      }
      /**
       * <pre>
       * Asset ID for gas
       * </pre>
       *
       * <code>string gas_asset_id = 5;</code>
       * @return The bytes for gasAssetId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGasAssetIdBytes() {
        return instance.getGasAssetIdBytes();
      }
      /**
       * <pre>
       * Asset ID for gas
       * </pre>
       *
       * <code>string gas_asset_id = 5;</code>
       * @param value The gasAssetId to set.
       * @return This builder for chaining.
       */
      public Builder setGasAssetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setGasAssetId(value);
        return this;
      }
      /**
       * <pre>
       * Asset ID for gas
       * </pre>
       *
       * <code>string gas_asset_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasAssetId() {
        copyOnWrite();
        instance.clearGasAssetId();
        return this;
      }
      /**
       * <pre>
       * Asset ID for gas
       * </pre>
       *
       * <code>string gas_asset_id = 5;</code>
       * @param value The bytes for gasAssetId to set.
       * @return This builder for chaining.
       */
      public Builder setGasAssetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGasAssetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string gas_change_address = 6;</code>
       * @return The gasChangeAddress.
       */
      @java.lang.Override
      public java.lang.String getGasChangeAddress() {
        return instance.getGasChangeAddress();
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string gas_change_address = 6;</code>
       * @return The bytes for gasChangeAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGasChangeAddressBytes() {
        return instance.getGasChangeAddressBytes();
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string gas_change_address = 6;</code>
       * @param value The gasChangeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setGasChangeAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setGasChangeAddress(value);
        return this;
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string gas_change_address = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasChangeAddress() {
        copyOnWrite();
        instance.clearGasChangeAddress();
        return this;
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string gas_change_address = 6;</code>
       * @param value The bytes for gasChangeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setGasChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGasChangeAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Optional transaction plan (if missing it will be computed)
       * </pre>
       *
       * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
       */
      @java.lang.Override
      public boolean hasPlan() {
        return instance.hasPlan();
      }
      /**
       * <pre>
       * Optional transaction plan (if missing it will be computed)
       * </pre>
       *
       * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NEO.TransactionPlan getPlan() {
        return instance.getPlan();
      }
      /**
       * <pre>
       * Optional transaction plan (if missing it will be computed)
       * </pre>
       *
       * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
       */
      public Builder setPlan(wallet.core.jni.proto.NEO.TransactionPlan value) {
        copyOnWrite();
        instance.setPlan(value);
        return this;
        }
      /**
       * <pre>
       * Optional transaction plan (if missing it will be computed)
       * </pre>
       *
       * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
       */
      public Builder setPlan(
          wallet.core.jni.proto.NEO.TransactionPlan.Builder builderForValue) {
        copyOnWrite();
        instance.setPlan(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Optional transaction plan (if missing it will be computed)
       * </pre>
       *
       * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
       */
      public Builder mergePlan(wallet.core.jni.proto.NEO.TransactionPlan value) {
        copyOnWrite();
        instance.mergePlan(value);
        return this;
      }
      /**
       * <pre>
       * Optional transaction plan (if missing it will be computed)
       * </pre>
       *
       * <code>.TW.NEO.Proto.TransactionPlan plan = 7;</code>
       */
      public Builder clearPlan() {  copyOnWrite();
        instance.clearPlan();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NEO.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NEO.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "inputs_",
              wallet.core.jni.proto.NEO.TransactionInput.class,
              "outputs_",
              wallet.core.jni.proto.NEO.TransactionOutput.class,
              "privateKey_",
              "fee_",
              "gasAssetId_",
              "gasChangeAddress_",
              "plan_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0002\u0000\u0001\u001b\u0002\u001b" +
                "\u0003\n\u0004\u0002\u0005\u0208\u0006\u0208\u0007\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NEO.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NEO.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NEO.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NEO.Proto.SigningInput)
    private static final wallet.core.jni.proto.NEO.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NEO.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NEO.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.NEO.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NEO.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int ERROR_FIELD_NUMBER = 2;
    private int error_;
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NEO.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.NEO.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NEO.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NEO.Proto.SigningOutput)
        wallet.core.jni.proto.NEO.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.NEO.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NEO.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NEO.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "error_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NEO.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NEO.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NEO.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NEO.Proto.SigningOutput)
    private static final wallet.core.jni.proto.NEO.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NEO.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionOutputPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NEO.Proto.TransactionOutputPlan)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Amount to be received at the other end.
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * Maximum available amount.
     * </pre>
     *
     * <code>int64 available_amount = 2;</code>
     * @return The availableAmount.
     */
    long getAvailableAmount();

    /**
     * <pre>
     * Amount that is left as change
     * </pre>
     *
     * <code>int64 change = 3;</code>
     * @return The change.
     */
    long getChange();

    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The assetId.
     */
    java.lang.String getAssetId();
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The bytes for assetId.
     */
    com.google.protobuf.ByteString
        getAssetIdBytes();

    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     * @return The toAddress.
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     * @return The bytes for toAddress.
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     * @return The changeAddress.
     */
    java.lang.String getChangeAddress();
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     * @return The bytes for changeAddress.
     */
    com.google.protobuf.ByteString
        getChangeAddressBytes();
  }
  /**
   * <pre>
   * Describes a preliminary transaction output plan.
   * </pre>
   *
   * Protobuf type {@code TW.NEO.Proto.TransactionOutputPlan}
   */
  public  static final class TransactionOutputPlan extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionOutputPlan, TransactionOutputPlan.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NEO.Proto.TransactionOutputPlan)
      TransactionOutputPlanOrBuilder {
    private TransactionOutputPlan() {
      assetId_ = "";
      toAddress_ = "";
      changeAddress_ = "";
    }
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private long amount_;
    /**
     * <pre>
     * Amount to be received at the other end.
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Amount to be received at the other end.
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * Amount to be received at the other end.
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int AVAILABLE_AMOUNT_FIELD_NUMBER = 2;
    private long availableAmount_;
    /**
     * <pre>
     * Maximum available amount.
     * </pre>
     *
     * <code>int64 available_amount = 2;</code>
     * @return The availableAmount.
     */
    @java.lang.Override
    public long getAvailableAmount() {
      return availableAmount_;
    }
    /**
     * <pre>
     * Maximum available amount.
     * </pre>
     *
     * <code>int64 available_amount = 2;</code>
     * @param value The availableAmount to set.
     */
    private void setAvailableAmount(long value) {
      
      availableAmount_ = value;
    }
    /**
     * <pre>
     * Maximum available amount.
     * </pre>
     *
     * <code>int64 available_amount = 2;</code>
     */
    private void clearAvailableAmount() {
      
      availableAmount_ = 0L;
    }

    public static final int CHANGE_FIELD_NUMBER = 3;
    private long change_;
    /**
     * <pre>
     * Amount that is left as change
     * </pre>
     *
     * <code>int64 change = 3;</code>
     * @return The change.
     */
    @java.lang.Override
    public long getChange() {
      return change_;
    }
    /**
     * <pre>
     * Amount that is left as change
     * </pre>
     *
     * <code>int64 change = 3;</code>
     * @param value The change to set.
     */
    private void setChange(long value) {
      
      change_ = value;
    }
    /**
     * <pre>
     * Amount that is left as change
     * </pre>
     *
     * <code>int64 change = 3;</code>
     */
    private void clearChange() {
      
      change_ = 0L;
    }

    public static final int ASSET_ID_FIELD_NUMBER = 4;
    private java.lang.String assetId_;
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The assetId.
     */
    @java.lang.Override
    public java.lang.String getAssetId() {
      return assetId_;
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @return The bytes for assetId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAssetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(assetId_);
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @param value The assetId to set.
     */
    private void setAssetId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      assetId_ = value;
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     */
    private void clearAssetId() {
      
      assetId_ = getDefaultInstance().getAssetId();
    }
    /**
     * <pre>
     * Asset
     * </pre>
     *
     * <code>string asset_id = 4;</code>
     * @param value The bytes for assetId to set.
     */
    private void setAssetIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      assetId_ = value.toStringUtf8();
      
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 5;
    private java.lang.String toAddress_;
    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     * @return The toAddress.
     */
    @java.lang.Override
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     * @return The bytes for toAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     * @param value The toAddress to set.
     */
    private void setToAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAddress_ = value;
    }
    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <pre>
     * Destination address
     * </pre>
     *
     * <code>string to_address = 5;</code>
     * @param value The bytes for toAddress to set.
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAddress_ = value.toStringUtf8();
      
    }

    public static final int CHANGE_ADDRESS_FIELD_NUMBER = 6;
    private java.lang.String changeAddress_;
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     * @return The changeAddress.
     */
    @java.lang.Override
    public java.lang.String getChangeAddress() {
      return changeAddress_;
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     * @return The bytes for changeAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChangeAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(changeAddress_);
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     * @param value The changeAddress to set.
     */
    private void setChangeAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      changeAddress_ = value;
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     */
    private void clearChangeAddress() {
      
      changeAddress_ = getDefaultInstance().getChangeAddress();
    }
    /**
     * <pre>
     * Address for the change
     * </pre>
     *
     * <code>string change_address = 6;</code>
     * @param value The bytes for changeAddress to set.
     */
    private void setChangeAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      changeAddress_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionOutputPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NEO.TransactionOutputPlan prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Describes a preliminary transaction output plan.
     * </pre>
     *
     * Protobuf type {@code TW.NEO.Proto.TransactionOutputPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NEO.TransactionOutputPlan, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NEO.Proto.TransactionOutputPlan)
        wallet.core.jni.proto.NEO.TransactionOutputPlanOrBuilder {
      // Construct using wallet.core.jni.proto.NEO.TransactionOutputPlan.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Amount to be received at the other end.
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Amount to be received at the other end.
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Amount to be received at the other end.
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * Maximum available amount.
       * </pre>
       *
       * <code>int64 available_amount = 2;</code>
       * @return The availableAmount.
       */
      @java.lang.Override
      public long getAvailableAmount() {
        return instance.getAvailableAmount();
      }
      /**
       * <pre>
       * Maximum available amount.
       * </pre>
       *
       * <code>int64 available_amount = 2;</code>
       * @param value The availableAmount to set.
       * @return This builder for chaining.
       */
      public Builder setAvailableAmount(long value) {
        copyOnWrite();
        instance.setAvailableAmount(value);
        return this;
      }
      /**
       * <pre>
       * Maximum available amount.
       * </pre>
       *
       * <code>int64 available_amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvailableAmount() {
        copyOnWrite();
        instance.clearAvailableAmount();
        return this;
      }

      /**
       * <pre>
       * Amount that is left as change
       * </pre>
       *
       * <code>int64 change = 3;</code>
       * @return The change.
       */
      @java.lang.Override
      public long getChange() {
        return instance.getChange();
      }
      /**
       * <pre>
       * Amount that is left as change
       * </pre>
       *
       * <code>int64 change = 3;</code>
       * @param value The change to set.
       * @return This builder for chaining.
       */
      public Builder setChange(long value) {
        copyOnWrite();
        instance.setChange(value);
        return this;
      }
      /**
       * <pre>
       * Amount that is left as change
       * </pre>
       *
       * <code>int64 change = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChange() {
        copyOnWrite();
        instance.clearChange();
        return this;
      }

      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @return The assetId.
       */
      @java.lang.Override
      public java.lang.String getAssetId() {
        return instance.getAssetId();
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @return The bytes for assetId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAssetIdBytes() {
        return instance.getAssetIdBytes();
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @param value The assetId to set.
       * @return This builder for chaining.
       */
      public Builder setAssetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setAssetId(value);
        return this;
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssetId() {
        copyOnWrite();
        instance.clearAssetId();
        return this;
      }
      /**
       * <pre>
       * Asset
       * </pre>
       *
       * <code>string asset_id = 4;</code>
       * @param value The bytes for assetId to set.
       * @return This builder for chaining.
       */
      public Builder setAssetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAssetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to_address = 5;</code>
       * @return The toAddress.
       */
      @java.lang.Override
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to_address = 5;</code>
       * @return The bytes for toAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to_address = 5;</code>
       * @param value The toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to_address = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <pre>
       * Destination address
       * </pre>
       *
       * <code>string to_address = 5;</code>
       * @param value The bytes for toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string change_address = 6;</code>
       * @return The changeAddress.
       */
      @java.lang.Override
      public java.lang.String getChangeAddress() {
        return instance.getChangeAddress();
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string change_address = 6;</code>
       * @return The bytes for changeAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChangeAddressBytes() {
        return instance.getChangeAddressBytes();
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string change_address = 6;</code>
       * @param value The changeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setChangeAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setChangeAddress(value);
        return this;
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string change_address = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeAddress() {
        copyOnWrite();
        instance.clearChangeAddress();
        return this;
      }
      /**
       * <pre>
       * Address for the change
       * </pre>
       *
       * <code>string change_address = 6;</code>
       * @param value The bytes for changeAddress to set.
       * @return This builder for chaining.
       */
      public Builder setChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChangeAddressBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NEO.Proto.TransactionOutputPlan)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NEO.TransactionOutputPlan();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "amount_",
              "availableAmount_",
              "change_",
              "assetId_",
              "toAddress_",
              "changeAddress_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u0002\u0002\u0002" +
                "\u0003\u0002\u0004\u0208\u0005\u0208\u0006\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NEO.TransactionOutputPlan> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NEO.TransactionOutputPlan.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NEO.TransactionOutputPlan>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NEO.Proto.TransactionOutputPlan)
    private static final wallet.core.jni.proto.NEO.TransactionOutputPlan DEFAULT_INSTANCE;
    static {
      TransactionOutputPlan defaultInstance = new TransactionOutputPlan();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionOutputPlan.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NEO.TransactionOutputPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionOutputPlan> PARSER;

    public static com.google.protobuf.Parser<TransactionOutputPlan> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NEO.Proto.TransactionPlan)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    java.util.List<wallet.core.jni.proto.NEO.TransactionOutputPlan> 
        getOutputsList();
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    wallet.core.jni.proto.NEO.TransactionOutputPlan getOutputs(int index);
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    int getOutputsCount();

    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    java.util.List<wallet.core.jni.proto.NEO.TransactionInput> 
        getInputsList();
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    wallet.core.jni.proto.NEO.TransactionInput getInputs(int index);
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    int getInputsCount();

    /**
     * <pre>
     * GAS used
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     * @return The fee.
     */
    long getFee();

    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();
  }
  /**
   * <pre>
   * Describes a preliminary transaction plan.
   * </pre>
   *
   * Protobuf type {@code TW.NEO.Proto.TransactionPlan}
   */
  public  static final class TransactionPlan extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionPlan, TransactionPlan.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NEO.Proto.TransactionPlan)
      TransactionPlanOrBuilder {
    private TransactionPlan() {
      outputs_ = emptyProtobufList();
      inputs_ = emptyProtobufList();
    }
    public static final int OUTPUTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionOutputPlan> outputs_;
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.NEO.TransactionOutputPlan> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.NEO.TransactionOutputPlanOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NEO.TransactionOutputPlan getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    public wallet.core.jni.proto.NEO.TransactionOutputPlanOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }
    private void ensureOutputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionOutputPlan> tmp = outputs_;
      if (!tmp.isModifiable()) {
        outputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    private void setOutputs(
        int index, wallet.core.jni.proto.NEO.TransactionOutputPlan value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.set(index, value);
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    private void addOutputs(wallet.core.jni.proto.NEO.TransactionOutputPlan value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(value);
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    private void addOutputs(
        int index, wallet.core.jni.proto.NEO.TransactionOutputPlan value) {
      value.getClass();
  ensureOutputsIsMutable();
      outputs_.add(index, value);
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    private void addAllOutputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionOutputPlan> values) {
      ensureOutputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outputs_);
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    private void clearOutputs() {
      outputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Used assets
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
     */
    private void removeOutputs(int index) {
      ensureOutputsIsMutable();
      outputs_.remove(index);
    }

    public static final int INPUTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionInput> inputs_;
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.NEO.TransactionInput> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.NEO.TransactionInputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    @java.lang.Override
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NEO.TransactionInput getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    public wallet.core.jni.proto.NEO.TransactionInputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }
    private void ensureInputsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NEO.TransactionInput> tmp = inputs_;
      if (!tmp.isModifiable()) {
        inputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    private void setInputs(
        int index, wallet.core.jni.proto.NEO.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.set(index, value);
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    private void addInputs(wallet.core.jni.proto.NEO.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(value);
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    private void addInputs(
        int index, wallet.core.jni.proto.NEO.TransactionInput value) {
      value.getClass();
  ensureInputsIsMutable();
      inputs_.add(index, value);
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    private void addAllInputs(
        java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionInput> values) {
      ensureInputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inputs_);
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    private void clearInputs() {
      inputs_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
     */
    private void removeInputs(int index) {
      ensureInputsIsMutable();
      inputs_.remove(index);
    }

    public static final int FEE_FIELD_NUMBER = 3;
    private long fee_;
    /**
     * <pre>
     * GAS used
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     * @return The fee.
     */
    @java.lang.Override
    public long getFee() {
      return fee_;
    }
    /**
     * <pre>
     * GAS used
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     * @param value The fee to set.
     */
    private void setFee(long value) {
      
      fee_ = value;
    }
    /**
     * <pre>
     * GAS used
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     */
    private void clearFee() {
      
      fee_ = 0L;
    }

    public static final int ERROR_FIELD_NUMBER = 4;
    private int error_;
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 4;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NEO.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NEO.TransactionPlan prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Describes a preliminary transaction plan.
     * </pre>
     *
     * Protobuf type {@code TW.NEO.Proto.TransactionPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NEO.TransactionPlan, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NEO.Proto.TransactionPlan)
        wallet.core.jni.proto.NEO.TransactionPlanOrBuilder {
      // Construct using wallet.core.jni.proto.NEO.TransactionPlan.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.NEO.TransactionOutputPlan> getOutputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOutputsList());
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      @java.lang.Override
      public int getOutputsCount() {
        return instance.getOutputsCount();
      }/**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NEO.TransactionOutputPlan getOutputs(int index) {
        return instance.getOutputs(index);
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutputPlan value) {
        copyOnWrite();
        instance.setOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutputPlan.Builder builderForValue) {
        copyOnWrite();
        instance.setOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder addOutputs(wallet.core.jni.proto.NEO.TransactionOutputPlan value) {
        copyOnWrite();
        instance.addOutputs(value);
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutputPlan value) {
        copyOnWrite();
        instance.addOutputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder addOutputs(
          wallet.core.jni.proto.NEO.TransactionOutputPlan.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.NEO.TransactionOutputPlan.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionOutputPlan> values) {
        copyOnWrite();
        instance.addAllOutputs(values);
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder clearOutputs() {
        copyOnWrite();
        instance.clearOutputs();
        return this;
      }
      /**
       * <pre>
       * Used assets
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionOutputPlan outputs = 1;</code>
       */
      public Builder removeOutputs(int index) {
        copyOnWrite();
        instance.removeOutputs(index);
        return this;
      }

      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.NEO.TransactionInput> getInputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getInputsList());
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      @java.lang.Override
      public int getInputsCount() {
        return instance.getInputsCount();
      }/**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NEO.TransactionInput getInputs(int index) {
        return instance.getInputs(index);
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput value) {
        copyOnWrite();
        instance.setInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.setInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder addInputs(wallet.core.jni.proto.NEO.TransactionInput value) {
        copyOnWrite();
        instance.addInputs(value);
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput value) {
        copyOnWrite();
        instance.addInputs(index, value);
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder addInputs(
          wallet.core.jni.proto.NEO.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.NEO.TransactionInput.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.NEO.TransactionInput> values) {
        copyOnWrite();
        instance.addAllInputs(values);
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder clearInputs() {
        copyOnWrite();
        instance.clearInputs();
        return this;
      }
      /**
       * <pre>
       * Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.NEO.Proto.TransactionInput inputs = 2;</code>
       */
      public Builder removeInputs(int index) {
        copyOnWrite();
        instance.removeInputs(index);
        return this;
      }

      /**
       * <pre>
       * GAS used
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       * @return The fee.
       */
      @java.lang.Override
      public long getFee() {
        return instance.getFee();
      }
      /**
       * <pre>
       * GAS used
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       * @param value The fee to set.
       * @return This builder for chaining.
       */
      public Builder setFee(long value) {
        copyOnWrite();
        instance.setFee(value);
        return this;
      }
      /**
       * <pre>
       * GAS used
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFee() {
        copyOnWrite();
        instance.clearFee();
        return this;
      }

      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NEO.Proto.TransactionPlan)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NEO.TransactionPlan();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "outputs_",
              wallet.core.jni.proto.NEO.TransactionOutputPlan.class,
              "inputs_",
              wallet.core.jni.proto.NEO.TransactionInput.class,
              "fee_",
              "error_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0002\u0000\u0001\u001b\u0002\u001b" +
                "\u0003\u0002\u0004\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NEO.TransactionPlan> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NEO.TransactionPlan.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NEO.TransactionPlan>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NEO.Proto.TransactionPlan)
    private static final wallet.core.jni.proto.NEO.TransactionPlan DEFAULT_INSTANCE;
    static {
      TransactionPlan defaultInstance = new TransactionPlan();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionPlan.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NEO.TransactionPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionPlan> PARSER;

    public static com.google.protobuf.Parser<TransactionPlan> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
