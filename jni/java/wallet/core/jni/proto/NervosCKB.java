// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NervosCKB.proto

package wallet.core.jni.proto;

public final class NervosCKB {
  private NervosCKB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code TW.NervosCKB.Proto.TransferError}
   */
  public enum TransferError
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>TransferAmountLessThanMinCapacity = 1;</code>
     */
    TransferAmountLessThanMinCapacity(1),
    /**
     * <code>ChangeAmountLessThanMinCapacity = 2;</code>
     */
    ChangeAmountLessThanMinCapacity(2),
    /**
     * <code>InsufficientBalance = 3;</code>
     */
    InsufficientBalance(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>TransferAmountLessThanMinCapacity = 1;</code>
     */
    public static final int TransferAmountLessThanMinCapacity_VALUE = 1;
    /**
     * <code>ChangeAmountLessThanMinCapacity = 2;</code>
     */
    public static final int ChangeAmountLessThanMinCapacity_VALUE = 2;
    /**
     * <code>InsufficientBalance = 3;</code>
     */
    public static final int InsufficientBalance_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransferError valueOf(int value) {
      return forNumber(value);
    }

    public static TransferError forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return TransferAmountLessThanMinCapacity;
        case 2: return ChangeAmountLessThanMinCapacity;
        case 3: return InsufficientBalance;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransferError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransferError> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransferError>() {
            @java.lang.Override
            public TransferError findValueByNumber(int number) {
              return TransferError.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TransferErrorVerifier.INSTANCE;
    }

    private static final class TransferErrorVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TransferErrorVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return TransferError.forNumber(number) != null;
            }
          };

    private final int value;

    private TransferError(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TW.NervosCKB.Proto.TransferError)
  }

  public interface OutPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.OutPoint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes txHash = 1;</code>
     * @return The txHash.
     */
    com.google.protobuf.ByteString getTxHash();

    /**
     * <code>uint32 index = 2;</code>
     * @return The index.
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code TW.NervosCKB.Proto.OutPoint}
   */
  public  static final class OutPoint extends
      com.google.protobuf.GeneratedMessageLite<
          OutPoint, OutPoint.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.OutPoint)
      OutPointOrBuilder {
    private OutPoint() {
      txHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int TXHASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString txHash_;
    /**
     * <code>bytes txHash = 1;</code>
     * @return The txHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTxHash() {
      return txHash_;
    }
    /**
     * <code>bytes txHash = 1;</code>
     * @param value The txHash to set.
     */
    private void setTxHash(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      txHash_ = value;
    }
    /**
     * <code>bytes txHash = 1;</code>
     */
    private void clearTxHash() {
      
      txHash_ = getDefaultInstance().getTxHash();
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <code>uint32 index = 2;</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }
    /**
     * <code>uint32 index = 2;</code>
     * @param value The index to set.
     */
    private void setIndex(int value) {
      
      index_ = value;
    }
    /**
     * <code>uint32 index = 2;</code>
     */
    private void clearIndex() {
      
      index_ = 0;
    }

    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.OutPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.OutPoint prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.NervosCKB.Proto.OutPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.OutPoint, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.OutPoint)
        wallet.core.jni.proto.NervosCKB.OutPointOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.OutPoint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes txHash = 1;</code>
       * @return The txHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTxHash() {
        return instance.getTxHash();
      }
      /**
       * <code>bytes txHash = 1;</code>
       * @param value The txHash to set.
       * @return This builder for chaining.
       */
      public Builder setTxHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTxHash(value);
        return this;
      }
      /**
       * <code>bytes txHash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxHash() {
        copyOnWrite();
        instance.clearTxHash();
        return this;
      }

      /**
       * <code>uint32 index = 2;</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>uint32 index = 2;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>uint32 index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.OutPoint)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.OutPoint();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "txHash_",
              "index_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\u000b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.OutPoint> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.OutPoint.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.OutPoint>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.OutPoint)
    private static final wallet.core.jni.proto.NervosCKB.OutPoint DEFAULT_INSTANCE;
    static {
      OutPoint defaultInstance = new OutPoint();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        OutPoint.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.OutPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OutPoint> PARSER;

    public static com.google.protobuf.Parser<OutPoint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CellInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.CellInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     * @return Whether the previousOutput field is set.
     */
    boolean hasPreviousOutput();
    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     * @return The previousOutput.
     */
    wallet.core.jni.proto.NervosCKB.OutPoint getPreviousOutput();

    /**
     * <code>int64 since = 2;</code>
     * @return The since.
     */
    long getSince();

    /**
     * <code>int64 capacity = 3;</code>
     * @return The capacity.
     */
    long getCapacity();
  }
  /**
   * Protobuf type {@code TW.NervosCKB.Proto.CellInput}
   */
  public  static final class CellInput extends
      com.google.protobuf.GeneratedMessageLite<
          CellInput, CellInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.CellInput)
      CellInputOrBuilder {
    private CellInput() {
    }
    public static final int PREVIOUS_OUTPUT_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.NervosCKB.OutPoint previousOutput_;
    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     */
    @java.lang.Override
    public boolean hasPreviousOutput() {
      return previousOutput_ != null;
    }
    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NervosCKB.OutPoint getPreviousOutput() {
      return previousOutput_ == null ? wallet.core.jni.proto.NervosCKB.OutPoint.getDefaultInstance() : previousOutput_;
    }
    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     */
    private void setPreviousOutput(wallet.core.jni.proto.NervosCKB.OutPoint value) {
      value.getClass();
  previousOutput_ = value;
      
      }
    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePreviousOutput(wallet.core.jni.proto.NervosCKB.OutPoint value) {
      value.getClass();
  if (previousOutput_ != null &&
          previousOutput_ != wallet.core.jni.proto.NervosCKB.OutPoint.getDefaultInstance()) {
        previousOutput_ =
          wallet.core.jni.proto.NervosCKB.OutPoint.newBuilder(previousOutput_).mergeFrom(value).buildPartial();
      } else {
        previousOutput_ = value;
      }
      
    }
    /**
     * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
     */
    private void clearPreviousOutput() {  previousOutput_ = null;
      
    }

    public static final int SINCE_FIELD_NUMBER = 2;
    private long since_;
    /**
     * <code>int64 since = 2;</code>
     * @return The since.
     */
    @java.lang.Override
    public long getSince() {
      return since_;
    }
    /**
     * <code>int64 since = 2;</code>
     * @param value The since to set.
     */
    private void setSince(long value) {
      
      since_ = value;
    }
    /**
     * <code>int64 since = 2;</code>
     */
    private void clearSince() {
      
      since_ = 0L;
    }

    public static final int CAPACITY_FIELD_NUMBER = 3;
    private long capacity_;
    /**
     * <code>int64 capacity = 3;</code>
     * @return The capacity.
     */
    @java.lang.Override
    public long getCapacity() {
      return capacity_;
    }
    /**
     * <code>int64 capacity = 3;</code>
     * @param value The capacity to set.
     */
    private void setCapacity(long value) {
      
      capacity_ = value;
    }
    /**
     * <code>int64 capacity = 3;</code>
     */
    private void clearCapacity() {
      
      capacity_ = 0L;
    }

    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.CellInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.CellInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.NervosCKB.Proto.CellInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.CellInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.CellInput)
        wallet.core.jni.proto.NervosCKB.CellInputOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.CellInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
       */
      @java.lang.Override
      public boolean hasPreviousOutput() {
        return instance.hasPreviousOutput();
      }
      /**
       * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NervosCKB.OutPoint getPreviousOutput() {
        return instance.getPreviousOutput();
      }
      /**
       * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
       */
      public Builder setPreviousOutput(wallet.core.jni.proto.NervosCKB.OutPoint value) {
        copyOnWrite();
        instance.setPreviousOutput(value);
        return this;
        }
      /**
       * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
       */
      public Builder setPreviousOutput(
          wallet.core.jni.proto.NervosCKB.OutPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPreviousOutput(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
       */
      public Builder mergePreviousOutput(wallet.core.jni.proto.NervosCKB.OutPoint value) {
        copyOnWrite();
        instance.mergePreviousOutput(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.OutPoint previous_output = 1;</code>
       */
      public Builder clearPreviousOutput() {  copyOnWrite();
        instance.clearPreviousOutput();
        return this;
      }

      /**
       * <code>int64 since = 2;</code>
       * @return The since.
       */
      @java.lang.Override
      public long getSince() {
        return instance.getSince();
      }
      /**
       * <code>int64 since = 2;</code>
       * @param value The since to set.
       * @return This builder for chaining.
       */
      public Builder setSince(long value) {
        copyOnWrite();
        instance.setSince(value);
        return this;
      }
      /**
       * <code>int64 since = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSince() {
        copyOnWrite();
        instance.clearSince();
        return this;
      }

      /**
       * <code>int64 capacity = 3;</code>
       * @return The capacity.
       */
      @java.lang.Override
      public long getCapacity() {
        return instance.getCapacity();
      }
      /**
       * <code>int64 capacity = 3;</code>
       * @param value The capacity to set.
       * @return This builder for chaining.
       */
      public Builder setCapacity(long value) {
        copyOnWrite();
        instance.setCapacity(value);
        return this;
      }
      /**
       * <code>int64 capacity = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCapacity() {
        copyOnWrite();
        instance.clearCapacity();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.CellInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.CellInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "previousOutput_",
              "since_",
              "capacity_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\t\u0002\u0002" +
                "\u0003\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.CellInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.CellInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.CellInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.CellInput)
    private static final wallet.core.jni.proto.NervosCKB.CellInput DEFAULT_INSTANCE;
    static {
      CellInput defaultInstance = new CellInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CellInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.CellInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CellInput> PARSER;

    public static com.google.protobuf.Parser<CellInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransferMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.TransferMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes private_key = 1;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <code>int64 amount = 2;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <code>int64 fee_rate = 3;</code>
     * @return The feeRate.
     */
    long getFeeRate();

    /**
     * <code>string to = 4;</code>
     * @return The to.
     */
    java.lang.String getTo();
    /**
     * <code>string to = 4;</code>
     * @return The bytes for to.
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <pre>
     * If sending max amount.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     * @return The useMaxAmount.
     */
    boolean getUseMaxAmount();

    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    java.util.List<wallet.core.jni.proto.NervosCKB.CellInput> 
        getCellsList();
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    wallet.core.jni.proto.NervosCKB.CellInput getCells(int index);
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    int getCellsCount();
  }
  /**
   * Protobuf type {@code TW.NervosCKB.Proto.TransferMessage}
   */
  public  static final class TransferMessage extends
      com.google.protobuf.GeneratedMessageLite<
          TransferMessage, TransferMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.TransferMessage)
      TransferMessageOrBuilder {
    private TransferMessage() {
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
      to_ = "";
      cells_ = emptyProtobufList();
    }
    public static final int PRIVATE_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <code>bytes private_key = 1;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <code>bytes private_key = 1;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <code>bytes private_key = 1;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <code>int64 amount = 2;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <code>int64 amount = 2;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <code>int64 amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int FEE_RATE_FIELD_NUMBER = 3;
    private long feeRate_;
    /**
     * <code>int64 fee_rate = 3;</code>
     * @return The feeRate.
     */
    @java.lang.Override
    public long getFeeRate() {
      return feeRate_;
    }
    /**
     * <code>int64 fee_rate = 3;</code>
     * @param value The feeRate to set.
     */
    private void setFeeRate(long value) {
      
      feeRate_ = value;
    }
    /**
     * <code>int64 fee_rate = 3;</code>
     */
    private void clearFeeRate() {
      
      feeRate_ = 0L;
    }

    public static final int TO_FIELD_NUMBER = 4;
    private java.lang.String to_;
    /**
     * <code>string to = 4;</code>
     * @return The to.
     */
    @java.lang.Override
    public java.lang.String getTo() {
      return to_;
    }
    /**
     * <code>string to = 4;</code>
     * @return The bytes for to.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(to_);
    }
    /**
     * <code>string to = 4;</code>
     * @param value The to to set.
     */
    private void setTo(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      to_ = value;
    }
    /**
     * <code>string to = 4;</code>
     */
    private void clearTo() {
      
      to_ = getDefaultInstance().getTo();
    }
    /**
     * <code>string to = 4;</code>
     * @param value The bytes for to to set.
     */
    private void setToBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      to_ = value.toStringUtf8();
      
    }

    public static final int USE_MAX_AMOUNT_FIELD_NUMBER = 5;
    private boolean useMaxAmount_;
    /**
     * <pre>
     * If sending max amount.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     * @return The useMaxAmount.
     */
    @java.lang.Override
    public boolean getUseMaxAmount() {
      return useMaxAmount_;
    }
    /**
     * <pre>
     * If sending max amount.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     * @param value The useMaxAmount to set.
     */
    private void setUseMaxAmount(boolean value) {
      
      useMaxAmount_ = value;
    }
    /**
     * <pre>
     * If sending max amount.
     * </pre>
     *
     * <code>bool use_max_amount = 5;</code>
     */
    private void clearUseMaxAmount() {
      
      useMaxAmount_ = false;
    }

    public static final int CELLS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NervosCKB.CellInput> cells_;
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.NervosCKB.CellInput> getCellsList() {
      return cells_;
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.NervosCKB.CellInputOrBuilder> 
        getCellsOrBuilderList() {
      return cells_;
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    @java.lang.Override
    public int getCellsCount() {
      return cells_.size();
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NervosCKB.CellInput getCells(int index) {
      return cells_.get(index);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    public wallet.core.jni.proto.NervosCKB.CellInputOrBuilder getCellsOrBuilder(
        int index) {
      return cells_.get(index);
    }
    private void ensureCellsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NervosCKB.CellInput> tmp = cells_;
      if (!tmp.isModifiable()) {
        cells_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void setCells(
        int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
      value.getClass();
  ensureCellsIsMutable();
      cells_.set(index, value);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void addCells(wallet.core.jni.proto.NervosCKB.CellInput value) {
      value.getClass();
  ensureCellsIsMutable();
      cells_.add(value);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void addCells(
        int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
      value.getClass();
  ensureCellsIsMutable();
      cells_.add(index, value);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void addAllCells(
        java.lang.Iterable<? extends wallet.core.jni.proto.NervosCKB.CellInput> values) {
      ensureCellsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, cells_);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void clearCells() {
      cells_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void removeCells(int index) {
      ensureCellsIsMutable();
      cells_.remove(index);
    }

    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.TransferMessage prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.NervosCKB.Proto.TransferMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.TransferMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.TransferMessage)
        wallet.core.jni.proto.NervosCKB.TransferMessageOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.TransferMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes private_key = 1;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <code>bytes private_key = 1;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <code>bytes private_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <code>int64 amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>int64 amount = 2;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <code>int64 amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <code>int64 fee_rate = 3;</code>
       * @return The feeRate.
       */
      @java.lang.Override
      public long getFeeRate() {
        return instance.getFeeRate();
      }
      /**
       * <code>int64 fee_rate = 3;</code>
       * @param value The feeRate to set.
       * @return This builder for chaining.
       */
      public Builder setFeeRate(long value) {
        copyOnWrite();
        instance.setFeeRate(value);
        return this;
      }
      /**
       * <code>int64 fee_rate = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFeeRate() {
        copyOnWrite();
        instance.clearFeeRate();
        return this;
      }

      /**
       * <code>string to = 4;</code>
       * @return The to.
       */
      @java.lang.Override
      public java.lang.String getTo() {
        return instance.getTo();
      }
      /**
       * <code>string to = 4;</code>
       * @return The bytes for to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToBytes() {
        return instance.getToBytes();
      }
      /**
       * <code>string to = 4;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(
          java.lang.String value) {
        copyOnWrite();
        instance.setTo(value);
        return this;
      }
      /**
       * <code>string to = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        copyOnWrite();
        instance.clearTo();
        return this;
      }
      /**
       * <code>string to = 4;</code>
       * @param value The bytes for to to set.
       * @return This builder for chaining.
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToBytes(value);
        return this;
      }

      /**
       * <pre>
       * If sending max amount.
       * </pre>
       *
       * <code>bool use_max_amount = 5;</code>
       * @return The useMaxAmount.
       */
      @java.lang.Override
      public boolean getUseMaxAmount() {
        return instance.getUseMaxAmount();
      }
      /**
       * <pre>
       * If sending max amount.
       * </pre>
       *
       * <code>bool use_max_amount = 5;</code>
       * @param value The useMaxAmount to set.
       * @return This builder for chaining.
       */
      public Builder setUseMaxAmount(boolean value) {
        copyOnWrite();
        instance.setUseMaxAmount(value);
        return this;
      }
      /**
       * <pre>
       * If sending max amount.
       * </pre>
       *
       * <code>bool use_max_amount = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseMaxAmount() {
        copyOnWrite();
        instance.clearUseMaxAmount();
        return this;
      }

      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.NervosCKB.CellInput> getCellsList() {
        return java.util.Collections.unmodifiableList(
            instance.getCellsList());
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      @java.lang.Override
      public int getCellsCount() {
        return instance.getCellsCount();
      }/**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NervosCKB.CellInput getCells(int index) {
        return instance.getCells(index);
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder setCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
        copyOnWrite();
        instance.setCells(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder setCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput.Builder builderForValue) {
        copyOnWrite();
        instance.setCells(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(wallet.core.jni.proto.NervosCKB.CellInput value) {
        copyOnWrite();
        instance.addCells(value);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
        copyOnWrite();
        instance.addCells(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(
          wallet.core.jni.proto.NervosCKB.CellInput.Builder builderForValue) {
        copyOnWrite();
        instance.addCells(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput.Builder builderForValue) {
        copyOnWrite();
        instance.addCells(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addAllCells(
          java.lang.Iterable<? extends wallet.core.jni.proto.NervosCKB.CellInput> values) {
        copyOnWrite();
        instance.addAllCells(values);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder clearCells() {
        copyOnWrite();
        instance.clearCells();
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder removeCells(int index) {
        copyOnWrite();
        instance.removeCells(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.TransferMessage)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.TransferMessage();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "privateKey_",
              "amount_",
              "feeRate_",
              "to_",
              "useMaxAmount_",
              "cells_",
              wallet.core.jni.proto.NervosCKB.CellInput.class,
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0001\u0000\u0001\n\u0002\u0002" +
                "\u0003\u0002\u0004\u0208\u0005\u0007\u0006\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.TransferMessage> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.TransferMessage.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.TransferMessage>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.TransferMessage)
    private static final wallet.core.jni.proto.NervosCKB.TransferMessage DEFAULT_INSTANCE;
    static {
      TransferMessage defaultInstance = new TransferMessage();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransferMessage.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.TransferMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransferMessage> PARSER;

    public static com.google.protobuf.Parser<TransferMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransferPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.TransferPlan)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int64 amount = 1;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <code>int64 available_amount = 2;</code>
     * @return The availableAmount.
     */
    long getAvailableAmount();

    /**
     * <code>int64 fee = 3;</code>
     * @return The fee.
     */
    long getFee();

    /**
     * <code>int64 change = 4;</code>
     * @return The change.
     */
    long getChange();

    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     * @return The error.
     */
    wallet.core.jni.proto.NervosCKB.TransferError getError();

    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    java.util.List<wallet.core.jni.proto.NervosCKB.CellInput> 
        getCellsList();
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    wallet.core.jni.proto.NervosCKB.CellInput getCells(int index);
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    int getCellsCount();
  }
  /**
   * Protobuf type {@code TW.NervosCKB.Proto.TransferPlan}
   */
  public  static final class TransferPlan extends
      com.google.protobuf.GeneratedMessageLite<
          TransferPlan, TransferPlan.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.TransferPlan)
      TransferPlanOrBuilder {
    private TransferPlan() {
      cells_ = emptyProtobufList();
    }
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private long amount_;
    /**
     * <code>int64 amount = 1;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <code>int64 amount = 1;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <code>int64 amount = 1;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int AVAILABLE_AMOUNT_FIELD_NUMBER = 2;
    private long availableAmount_;
    /**
     * <code>int64 available_amount = 2;</code>
     * @return The availableAmount.
     */
    @java.lang.Override
    public long getAvailableAmount() {
      return availableAmount_;
    }
    /**
     * <code>int64 available_amount = 2;</code>
     * @param value The availableAmount to set.
     */
    private void setAvailableAmount(long value) {
      
      availableAmount_ = value;
    }
    /**
     * <code>int64 available_amount = 2;</code>
     */
    private void clearAvailableAmount() {
      
      availableAmount_ = 0L;
    }

    public static final int FEE_FIELD_NUMBER = 3;
    private long fee_;
    /**
     * <code>int64 fee = 3;</code>
     * @return The fee.
     */
    @java.lang.Override
    public long getFee() {
      return fee_;
    }
    /**
     * <code>int64 fee = 3;</code>
     * @param value The fee to set.
     */
    private void setFee(long value) {
      
      fee_ = value;
    }
    /**
     * <code>int64 fee = 3;</code>
     */
    private void clearFee() {
      
      fee_ = 0L;
    }

    public static final int CHANGE_FIELD_NUMBER = 4;
    private long change_;
    /**
     * <code>int64 change = 4;</code>
     * @return The change.
     */
    @java.lang.Override
    public long getChange() {
      return change_;
    }
    /**
     * <code>int64 change = 4;</code>
     * @param value The change to set.
     */
    private void setChange(long value) {
      
      change_ = value;
    }
    /**
     * <code>int64 change = 4;</code>
     */
    private void clearChange() {
      
      change_ = 0L;
    }

    public static final int ERROR_FIELD_NUMBER = 5;
    private int error_;
    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.NervosCKB.TransferError getError() {
      wallet.core.jni.proto.NervosCKB.TransferError result = wallet.core.jni.proto.NervosCKB.TransferError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.NervosCKB.TransferError.UNRECOGNIZED : result;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.NervosCKB.TransferError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static final int CELLS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NervosCKB.CellInput> cells_;
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.NervosCKB.CellInput> getCellsList() {
      return cells_;
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.NervosCKB.CellInputOrBuilder> 
        getCellsOrBuilderList() {
      return cells_;
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    @java.lang.Override
    public int getCellsCount() {
      return cells_.size();
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NervosCKB.CellInput getCells(int index) {
      return cells_.get(index);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    public wallet.core.jni.proto.NervosCKB.CellInputOrBuilder getCellsOrBuilder(
        int index) {
      return cells_.get(index);
    }
    private void ensureCellsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.NervosCKB.CellInput> tmp = cells_;
      if (!tmp.isModifiable()) {
        cells_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void setCells(
        int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
      value.getClass();
  ensureCellsIsMutable();
      cells_.set(index, value);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void addCells(wallet.core.jni.proto.NervosCKB.CellInput value) {
      value.getClass();
  ensureCellsIsMutable();
      cells_.add(value);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void addCells(
        int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
      value.getClass();
  ensureCellsIsMutable();
      cells_.add(index, value);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void addAllCells(
        java.lang.Iterable<? extends wallet.core.jni.proto.NervosCKB.CellInput> values) {
      ensureCellsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, cells_);
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void clearCells() {
      cells_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
     */
    private void removeCells(int index) {
      ensureCellsIsMutable();
      cells_.remove(index);
    }

    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransferPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.TransferPlan prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.NervosCKB.Proto.TransferPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.TransferPlan, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.TransferPlan)
        wallet.core.jni.proto.NervosCKB.TransferPlanOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.TransferPlan.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int64 amount = 1;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>int64 amount = 1;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <code>int64 amount = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <code>int64 available_amount = 2;</code>
       * @return The availableAmount.
       */
      @java.lang.Override
      public long getAvailableAmount() {
        return instance.getAvailableAmount();
      }
      /**
       * <code>int64 available_amount = 2;</code>
       * @param value The availableAmount to set.
       * @return This builder for chaining.
       */
      public Builder setAvailableAmount(long value) {
        copyOnWrite();
        instance.setAvailableAmount(value);
        return this;
      }
      /**
       * <code>int64 available_amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvailableAmount() {
        copyOnWrite();
        instance.clearAvailableAmount();
        return this;
      }

      /**
       * <code>int64 fee = 3;</code>
       * @return The fee.
       */
      @java.lang.Override
      public long getFee() {
        return instance.getFee();
      }
      /**
       * <code>int64 fee = 3;</code>
       * @param value The fee to set.
       * @return This builder for chaining.
       */
      public Builder setFee(long value) {
        copyOnWrite();
        instance.setFee(value);
        return this;
      }
      /**
       * <code>int64 fee = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFee() {
        copyOnWrite();
        instance.clearFee();
        return this;
      }

      /**
       * <code>int64 change = 4;</code>
       * @return The change.
       */
      @java.lang.Override
      public long getChange() {
        return instance.getChange();
      }
      /**
       * <code>int64 change = 4;</code>
       * @param value The change to set.
       * @return This builder for chaining.
       */
      public Builder setChange(long value) {
        copyOnWrite();
        instance.setChange(value);
        return this;
      }
      /**
       * <code>int64 change = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChange() {
        copyOnWrite();
        instance.clearChange();
        return this;
      }

      /**
       * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.NervosCKB.TransferError getError() {
        return instance.getError();
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.NervosCKB.TransferError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferError error = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.NervosCKB.CellInput> getCellsList() {
        return java.util.Collections.unmodifiableList(
            instance.getCellsList());
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      @java.lang.Override
      public int getCellsCount() {
        return instance.getCellsCount();
      }/**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NervosCKB.CellInput getCells(int index) {
        return instance.getCells(index);
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder setCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
        copyOnWrite();
        instance.setCells(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder setCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput.Builder builderForValue) {
        copyOnWrite();
        instance.setCells(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(wallet.core.jni.proto.NervosCKB.CellInput value) {
        copyOnWrite();
        instance.addCells(value);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput value) {
        copyOnWrite();
        instance.addCells(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(
          wallet.core.jni.proto.NervosCKB.CellInput.Builder builderForValue) {
        copyOnWrite();
        instance.addCells(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addCells(
          int index, wallet.core.jni.proto.NervosCKB.CellInput.Builder builderForValue) {
        copyOnWrite();
        instance.addCells(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder addAllCells(
          java.lang.Iterable<? extends wallet.core.jni.proto.NervosCKB.CellInput> values) {
        copyOnWrite();
        instance.addAllCells(values);
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder clearCells() {
        copyOnWrite();
        instance.clearCells();
        return this;
      }
      /**
       * <code>repeated .TW.NervosCKB.Proto.CellInput cells = 6;</code>
       */
      public Builder removeCells(int index) {
        copyOnWrite();
        instance.removeCells(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.TransferPlan)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.TransferPlan();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "amount_",
              "availableAmount_",
              "fee_",
              "change_",
              "error_",
              "cells_",
              wallet.core.jni.proto.NervosCKB.CellInput.class,
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0001\u0000\u0001\u0002\u0002\u0002" +
                "\u0003\u0002\u0004\u0002\u0005\f\u0006\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.TransferPlan> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.TransferPlan.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.TransferPlan>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.TransferPlan)
    private static final wallet.core.jni.proto.NervosCKB.TransferPlan DEFAULT_INSTANCE;
    static {
      TransferPlan defaultInstance = new TransferPlan();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransferPlan.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.TransferPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransferPlan> PARSER;

    public static com.google.protobuf.Parser<TransferPlan> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TransactionPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.TransactionPlan)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     * @return Whether the transfer field is set.
     */
    boolean hasTransfer();
    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     * @return The transfer.
     */
    wallet.core.jni.proto.NervosCKB.TransferPlan getTransfer();

    public wallet.core.jni.proto.NervosCKB.TransactionPlan.MessageOneofCase getMessageOneofCase();
  }
  /**
   * Protobuf type {@code TW.NervosCKB.Proto.TransactionPlan}
   */
  public  static final class TransactionPlan extends
      com.google.protobuf.GeneratedMessageLite<
          TransactionPlan, TransactionPlan.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.TransactionPlan)
      TransactionPlanOrBuilder {
    private TransactionPlan() {
    }
    private int messageOneofCase_ = 0;
    private java.lang.Object messageOneof_;
    public enum MessageOneofCase {
      TRANSFER(1),
      MESSAGEONEOF_NOT_SET(0);
      private final int value;
      private MessageOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageOneofCase forNumber(int value) {
        switch (value) {
          case 1: return TRANSFER;
          case 0: return MESSAGEONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public MessageOneofCase
    getMessageOneofCase() {
      return MessageOneofCase.forNumber(
          messageOneofCase_);
    }

    private void clearMessageOneof() {
      messageOneofCase_ = 0;
      messageOneof_ = null;
    }

    public static final int TRANSFER_FIELD_NUMBER = 1;
    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     */
    @java.lang.Override
    public boolean hasTransfer() {
      return messageOneofCase_ == 1;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NervosCKB.TransferPlan getTransfer() {
      if (messageOneofCase_ == 1) {
         return (wallet.core.jni.proto.NervosCKB.TransferPlan) messageOneof_;
      }
      return wallet.core.jni.proto.NervosCKB.TransferPlan.getDefaultInstance();
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     */
    private void setTransfer(wallet.core.jni.proto.NervosCKB.TransferPlan value) {
      value.getClass();
  messageOneof_ = value;
      messageOneofCase_ = 1;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     */
    private void mergeTransfer(wallet.core.jni.proto.NervosCKB.TransferPlan value) {
      value.getClass();
  if (messageOneofCase_ == 1 &&
          messageOneof_ != wallet.core.jni.proto.NervosCKB.TransferPlan.getDefaultInstance()) {
        messageOneof_ = wallet.core.jni.proto.NervosCKB.TransferPlan.newBuilder((wallet.core.jni.proto.NervosCKB.TransferPlan) messageOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        messageOneof_ = value;
      }
      messageOneofCase_ = 1;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
     */
    private void clearTransfer() {
      if (messageOneofCase_ == 1) {
        messageOneofCase_ = 0;
        messageOneof_ = null;
      }
    }

    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.TransactionPlan prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.NervosCKB.Proto.TransactionPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.TransactionPlan, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.TransactionPlan)
        wallet.core.jni.proto.NervosCKB.TransactionPlanOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.TransactionPlan.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public MessageOneofCase
          getMessageOneofCase() {
        return instance.getMessageOneofCase();
      }

      public Builder clearMessageOneof() {
        copyOnWrite();
        instance.clearMessageOneof();
        return this;
      }


      /**
       * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
       */
      @java.lang.Override
      public boolean hasTransfer() {
        return instance.hasTransfer();
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NervosCKB.TransferPlan getTransfer() {
        return instance.getTransfer();
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
       */
      public Builder setTransfer(wallet.core.jni.proto.NervosCKB.TransferPlan value) {
        copyOnWrite();
        instance.setTransfer(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
       */
      public Builder setTransfer(
          wallet.core.jni.proto.NervosCKB.TransferPlan.Builder builderForValue) {
        copyOnWrite();
        instance.setTransfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
       */
      public Builder mergeTransfer(wallet.core.jni.proto.NervosCKB.TransferPlan value) {
        copyOnWrite();
        instance.mergeTransfer(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferPlan transfer = 1;</code>
       */
      public Builder clearTransfer() {
        copyOnWrite();
        instance.clearTransfer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.TransactionPlan)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.TransactionPlan();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "messageOneof_",
              "messageOneofCase_",
              wallet.core.jni.proto.NervosCKB.TransferPlan.class,
            };
            java.lang.String info =
                "\u0000\u0001\u0001\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.TransactionPlan> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.TransactionPlan.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.TransactionPlan>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.TransactionPlan)
    private static final wallet.core.jni.proto.NervosCKB.TransactionPlan DEFAULT_INSTANCE;
    static {
      TransactionPlan defaultInstance = new TransactionPlan();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TransactionPlan.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.TransactionPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TransactionPlan> PARSER;

    public static com.google.protobuf.Parser<TransactionPlan> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     * @return Whether the transfer field is set.
     */
    boolean hasTransfer();
    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     * @return The transfer.
     */
    wallet.core.jni.proto.NervosCKB.TransferMessage getTransfer();

    public wallet.core.jni.proto.NervosCKB.SigningInput.MessageOneofCase getMessageOneofCase();
  }
  /**
   * Protobuf type {@code TW.NervosCKB.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
    }
    private int messageOneofCase_ = 0;
    private java.lang.Object messageOneof_;
    public enum MessageOneofCase {
      TRANSFER(1),
      MESSAGEONEOF_NOT_SET(0);
      private final int value;
      private MessageOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageOneofCase forNumber(int value) {
        switch (value) {
          case 1: return TRANSFER;
          case 0: return MESSAGEONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public MessageOneofCase
    getMessageOneofCase() {
      return MessageOneofCase.forNumber(
          messageOneofCase_);
    }

    private void clearMessageOneof() {
      messageOneofCase_ = 0;
      messageOneof_ = null;
    }

    public static final int TRANSFER_FIELD_NUMBER = 1;
    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     */
    @java.lang.Override
    public boolean hasTransfer() {
      return messageOneofCase_ == 1;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.NervosCKB.TransferMessage getTransfer() {
      if (messageOneofCase_ == 1) {
         return (wallet.core.jni.proto.NervosCKB.TransferMessage) messageOneof_;
      }
      return wallet.core.jni.proto.NervosCKB.TransferMessage.getDefaultInstance();
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     */
    private void setTransfer(wallet.core.jni.proto.NervosCKB.TransferMessage value) {
      value.getClass();
  messageOneof_ = value;
      messageOneofCase_ = 1;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     */
    private void mergeTransfer(wallet.core.jni.proto.NervosCKB.TransferMessage value) {
      value.getClass();
  if (messageOneofCase_ == 1 &&
          messageOneof_ != wallet.core.jni.proto.NervosCKB.TransferMessage.getDefaultInstance()) {
        messageOneof_ = wallet.core.jni.proto.NervosCKB.TransferMessage.newBuilder((wallet.core.jni.proto.NervosCKB.TransferMessage) messageOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        messageOneof_ = value;
      }
      messageOneofCase_ = 1;
    }
    /**
     * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
     */
    private void clearTransfer() {
      if (messageOneofCase_ == 1) {
        messageOneofCase_ = 0;
        messageOneof_ = null;
      }
    }

    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code TW.NervosCKB.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.SigningInput)
        wallet.core.jni.proto.NervosCKB.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public MessageOneofCase
          getMessageOneofCase() {
        return instance.getMessageOneofCase();
      }

      public Builder clearMessageOneof() {
        copyOnWrite();
        instance.clearMessageOneof();
        return this;
      }


      /**
       * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
       */
      @java.lang.Override
      public boolean hasTransfer() {
        return instance.hasTransfer();
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.NervosCKB.TransferMessage getTransfer() {
        return instance.getTransfer();
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
       */
      public Builder setTransfer(wallet.core.jni.proto.NervosCKB.TransferMessage value) {
        copyOnWrite();
        instance.setTransfer(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
       */
      public Builder setTransfer(
          wallet.core.jni.proto.NervosCKB.TransferMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setTransfer(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
       */
      public Builder mergeTransfer(wallet.core.jni.proto.NervosCKB.TransferMessage value) {
        copyOnWrite();
        instance.mergeTransfer(value);
        return this;
      }
      /**
       * <code>.TW.NervosCKB.Proto.TransferMessage transfer = 1;</code>
       */
      public Builder clearTransfer() {
        copyOnWrite();
        instance.clearTransfer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "messageOneof_",
              "messageOneofCase_",
              wallet.core.jni.proto.NervosCKB.TransferMessage.class,
            };
            java.lang.String info =
                "\u0000\u0001\u0001\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.SigningInput)
    private static final wallet.core.jni.proto.NervosCKB.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.NervosCKB.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     * @return The json.
     */
    java.lang.String getJson();
    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     * @return The bytes for json.
     */
    com.google.protobuf.ByteString
        getJsonBytes();
  }
  /**
   * <pre>
   * Transaction signing output.
   * </pre>
   *
   * Protobuf type {@code TW.NervosCKB.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.NervosCKB.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      json_ = "";
    }
    public static final int JSON_FIELD_NUMBER = 1;
    private java.lang.String json_;
    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     * @return The json.
     */
    @java.lang.Override
    public java.lang.String getJson() {
      return json_;
    }
    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     * @return The bytes for json.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJsonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(json_);
    }
    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     * @param value The json to set.
     */
    private void setJson(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      json_ = value;
    }
    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     */
    private void clearJson() {
      
      json_ = getDefaultInstance().getJson();
    }
    /**
     * <pre>
     * Signed transaction in JSON.
     * </pre>
     *
     * <code>string json = 1;</code>
     * @param value The bytes for json to set.
     */
    private void setJsonBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      json_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.NervosCKB.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.NervosCKB.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Transaction signing output.
     * </pre>
     *
     * Protobuf type {@code TW.NervosCKB.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.NervosCKB.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.NervosCKB.Proto.SigningOutput)
        wallet.core.jni.proto.NervosCKB.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.NervosCKB.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Signed transaction in JSON.
       * </pre>
       *
       * <code>string json = 1;</code>
       * @return The json.
       */
      @java.lang.Override
      public java.lang.String getJson() {
        return instance.getJson();
      }
      /**
       * <pre>
       * Signed transaction in JSON.
       * </pre>
       *
       * <code>string json = 1;</code>
       * @return The bytes for json.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getJsonBytes() {
        return instance.getJsonBytes();
      }
      /**
       * <pre>
       * Signed transaction in JSON.
       * </pre>
       *
       * <code>string json = 1;</code>
       * @param value The json to set.
       * @return This builder for chaining.
       */
      public Builder setJson(
          java.lang.String value) {
        copyOnWrite();
        instance.setJson(value);
        return this;
      }
      /**
       * <pre>
       * Signed transaction in JSON.
       * </pre>
       *
       * <code>string json = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearJson() {
        copyOnWrite();
        instance.clearJson();
        return this;
      }
      /**
       * <pre>
       * Signed transaction in JSON.
       * </pre>
       *
       * <code>string json = 1;</code>
       * @param value The bytes for json to set.
       * @return This builder for chaining.
       */
      public Builder setJsonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setJsonBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.NervosCKB.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.NervosCKB.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "json_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.NervosCKB.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.NervosCKB.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.NervosCKB.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.NervosCKB.Proto.SigningOutput)
    private static final wallet.core.jni.proto.NervosCKB.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.NervosCKB.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
