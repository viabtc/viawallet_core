// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ontology.proto

package wallet.core.jni.proto;

public final class Ontology {
  private Ontology() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ontology.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     * @return The contract.
     */
    java.lang.String getContract();
    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     * @return The bytes for contract.
     */
    com.google.protobuf.ByteString
        getContractBytes();

    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     * @return The method.
     */
    java.lang.String getMethod();
    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     * @return The bytes for method.
     */
    com.google.protobuf.ByteString
        getMethodBytes();

    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes owner_private_key = 3;</code>
     * @return The ownerPrivateKey.
     */
    com.google.protobuf.ByteString getOwnerPrivateKey();

    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The toAddress.
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The bytes for toAddress.
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>uint64 amount = 5;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * Private key of the payer
     * </pre>
     *
     * <code>bytes payer_private_key = 6;</code>
     * @return The payerPrivateKey.
     */
    com.google.protobuf.ByteString getPayerPrivateKey();

    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 7;</code>
     * @return The gasPrice.
     */
    long getGasPrice();

    /**
     * <pre>
     * Limit for gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 8;</code>
     * @return The gasLimit.
     */
    long getGasLimit();

    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     * @return The queryAddress.
     */
    java.lang.String getQueryAddress();
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     * @return The bytes for queryAddress.
     */
    com.google.protobuf.ByteString
        getQueryAddressBytes();

    /**
     * <pre>
     * Nonce (should be larger than in the last transaction of the account)
     * </pre>
     *
     * <code>uint32 nonce = 10;</code>
     * @return The nonce.
     */
    int getNonce();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Ontology.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ontology.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      contract_ = "";
      method_ = "";
      ownerPrivateKey_ = com.google.protobuf.ByteString.EMPTY;
      toAddress_ = "";
      payerPrivateKey_ = com.google.protobuf.ByteString.EMPTY;
      queryAddress_ = "";
    }
    public static final int CONTRACT_FIELD_NUMBER = 1;
    private java.lang.String contract_;
    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     * @return The contract.
     */
    @java.lang.Override
    public java.lang.String getContract() {
      return contract_;
    }
    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     * @return The bytes for contract.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getContractBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contract_);
    }
    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     * @param value The contract to set.
     */
    private void setContract(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      contract_ = value;
    }
    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     */
    private void clearContract() {
      
      contract_ = getDefaultInstance().getContract();
    }
    /**
     * <pre>
     * Contract ID, e.g. "ONT"
     * </pre>
     *
     * <code>string contract = 1;</code>
     * @param value The bytes for contract to set.
     */
    private void setContractBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      contract_ = value.toStringUtf8();
      
    }

    public static final int METHOD_FIELD_NUMBER = 2;
    private java.lang.String method_;
    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     * @return The method.
     */
    @java.lang.Override
    public java.lang.String getMethod() {
      return method_;
    }
    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     * @return The bytes for method.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMethodBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(method_);
    }
    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     * @param value The method to set.
     */
    private void setMethod(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      method_ = value;
    }
    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     */
    private void clearMethod() {
      
      method_ = getDefaultInstance().getMethod();
    }
    /**
     * <pre>
     * Method, e.g. "transfer"
     * </pre>
     *
     * <code>string method = 2;</code>
     * @param value The bytes for method to set.
     */
    private void setMethodBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      method_ = value.toStringUtf8();
      
    }

    public static final int OWNER_PRIVATE_KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString ownerPrivateKey_;
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes owner_private_key = 3;</code>
     * @return The ownerPrivateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOwnerPrivateKey() {
      return ownerPrivateKey_;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes owner_private_key = 3;</code>
     * @param value The ownerPrivateKey to set.
     */
    private void setOwnerPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      ownerPrivateKey_ = value;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes owner_private_key = 3;</code>
     */
    private void clearOwnerPrivateKey() {
      
      ownerPrivateKey_ = getDefaultInstance().getOwnerPrivateKey();
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.String toAddress_;
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The toAddress.
     */
    @java.lang.Override
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The bytes for toAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @param value The toAddress to set.
     */
    private void setToAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAddress_ = value;
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @param value The bytes for toAddress to set.
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAddress_ = value.toStringUtf8();
      
    }

    public static final int AMOUNT_FIELD_NUMBER = 5;
    private long amount_;
    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>uint64 amount = 5;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>uint64 amount = 5;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>uint64 amount = 5;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int PAYER_PRIVATE_KEY_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString payerPrivateKey_;
    /**
     * <pre>
     * Private key of the payer
     * </pre>
     *
     * <code>bytes payer_private_key = 6;</code>
     * @return The payerPrivateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayerPrivateKey() {
      return payerPrivateKey_;
    }
    /**
     * <pre>
     * Private key of the payer
     * </pre>
     *
     * <code>bytes payer_private_key = 6;</code>
     * @param value The payerPrivateKey to set.
     */
    private void setPayerPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      payerPrivateKey_ = value;
    }
    /**
     * <pre>
     * Private key of the payer
     * </pre>
     *
     * <code>bytes payer_private_key = 6;</code>
     */
    private void clearPayerPrivateKey() {
      
      payerPrivateKey_ = getDefaultInstance().getPayerPrivateKey();
    }

    public static final int GAS_PRICE_FIELD_NUMBER = 7;
    private long gasPrice_;
    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 7;</code>
     * @return The gasPrice.
     */
    @java.lang.Override
    public long getGasPrice() {
      return gasPrice_;
    }
    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 7;</code>
     * @param value The gasPrice to set.
     */
    private void setGasPrice(long value) {
      
      gasPrice_ = value;
    }
    /**
     * <pre>
     * Gas price
     * </pre>
     *
     * <code>uint64 gas_price = 7;</code>
     */
    private void clearGasPrice() {
      
      gasPrice_ = 0L;
    }

    public static final int GAS_LIMIT_FIELD_NUMBER = 8;
    private long gasLimit_;
    /**
     * <pre>
     * Limit for gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 8;</code>
     * @return The gasLimit.
     */
    @java.lang.Override
    public long getGasLimit() {
      return gasLimit_;
    }
    /**
     * <pre>
     * Limit for gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 8;</code>
     * @param value The gasLimit to set.
     */
    private void setGasLimit(long value) {
      
      gasLimit_ = value;
    }
    /**
     * <pre>
     * Limit for gas used
     * </pre>
     *
     * <code>uint64 gas_limit = 8;</code>
     */
    private void clearGasLimit() {
      
      gasLimit_ = 0L;
    }

    public static final int QUERY_ADDRESS_FIELD_NUMBER = 9;
    private java.lang.String queryAddress_;
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     * @return The queryAddress.
     */
    @java.lang.Override
    public java.lang.String getQueryAddress() {
      return queryAddress_;
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     * @return The bytes for queryAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getQueryAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(queryAddress_);
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     * @param value The queryAddress to set.
     */
    private void setQueryAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      queryAddress_ = value;
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     */
    private void clearQueryAddress() {
      
      queryAddress_ = getDefaultInstance().getQueryAddress();
    }
    /**
     * <pre>
     * base58 encode address string (160-bit number)
     * </pre>
     *
     * <code>string query_address = 9;</code>
     * @param value The bytes for queryAddress to set.
     */
    private void setQueryAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      queryAddress_ = value.toStringUtf8();
      
    }

    public static final int NONCE_FIELD_NUMBER = 10;
    private int nonce_;
    /**
     * <pre>
     * Nonce (should be larger than in the last transaction of the account)
     * </pre>
     *
     * <code>uint32 nonce = 10;</code>
     * @return The nonce.
     */
    @java.lang.Override
    public int getNonce() {
      return nonce_;
    }
    /**
     * <pre>
     * Nonce (should be larger than in the last transaction of the account)
     * </pre>
     *
     * <code>uint32 nonce = 10;</code>
     * @param value The nonce to set.
     */
    private void setNonce(int value) {
      
      nonce_ = value;
    }
    /**
     * <pre>
     * Nonce (should be larger than in the last transaction of the account)
     * </pre>
     *
     * <code>uint32 nonce = 10;</code>
     */
    private void clearNonce() {
      
      nonce_ = 0;
    }

    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ontology.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ontology.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Ontology.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ontology.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ontology.Proto.SigningInput)
        wallet.core.jni.proto.Ontology.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.Ontology.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Contract ID, e.g. "ONT"
       * </pre>
       *
       * <code>string contract = 1;</code>
       * @return The contract.
       */
      @java.lang.Override
      public java.lang.String getContract() {
        return instance.getContract();
      }
      /**
       * <pre>
       * Contract ID, e.g. "ONT"
       * </pre>
       *
       * <code>string contract = 1;</code>
       * @return The bytes for contract.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getContractBytes() {
        return instance.getContractBytes();
      }
      /**
       * <pre>
       * Contract ID, e.g. "ONT"
       * </pre>
       *
       * <code>string contract = 1;</code>
       * @param value The contract to set.
       * @return This builder for chaining.
       */
      public Builder setContract(
          java.lang.String value) {
        copyOnWrite();
        instance.setContract(value);
        return this;
      }
      /**
       * <pre>
       * Contract ID, e.g. "ONT"
       * </pre>
       *
       * <code>string contract = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContract() {
        copyOnWrite();
        instance.clearContract();
        return this;
      }
      /**
       * <pre>
       * Contract ID, e.g. "ONT"
       * </pre>
       *
       * <code>string contract = 1;</code>
       * @param value The bytes for contract to set.
       * @return This builder for chaining.
       */
      public Builder setContractBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContractBytes(value);
        return this;
      }

      /**
       * <pre>
       * Method, e.g. "transfer"
       * </pre>
       *
       * <code>string method = 2;</code>
       * @return The method.
       */
      @java.lang.Override
      public java.lang.String getMethod() {
        return instance.getMethod();
      }
      /**
       * <pre>
       * Method, e.g. "transfer"
       * </pre>
       *
       * <code>string method = 2;</code>
       * @return The bytes for method.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMethodBytes() {
        return instance.getMethodBytes();
      }
      /**
       * <pre>
       * Method, e.g. "transfer"
       * </pre>
       *
       * <code>string method = 2;</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(
          java.lang.String value) {
        copyOnWrite();
        instance.setMethod(value);
        return this;
      }
      /**
       * <pre>
       * Method, e.g. "transfer"
       * </pre>
       *
       * <code>string method = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        copyOnWrite();
        instance.clearMethod();
        return this;
      }
      /**
       * <pre>
       * Method, e.g. "transfer"
       * </pre>
       *
       * <code>string method = 2;</code>
       * @param value The bytes for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMethodBytes(value);
        return this;
      }

      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes owner_private_key = 3;</code>
       * @return The ownerPrivateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getOwnerPrivateKey() {
        return instance.getOwnerPrivateKey();
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes owner_private_key = 3;</code>
       * @param value The ownerPrivateKey to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOwnerPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes owner_private_key = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerPrivateKey() {
        copyOnWrite();
        instance.clearOwnerPrivateKey();
        return this;
      }

      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @return The toAddress.
       */
      @java.lang.Override
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @return The bytes for toAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @param value The toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @param value The bytes for toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Transfer amount
       * </pre>
       *
       * <code>uint64 amount = 5;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Transfer amount
       * </pre>
       *
       * <code>uint64 amount = 5;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Transfer amount
       * </pre>
       *
       * <code>uint64 amount = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * Private key of the payer
       * </pre>
       *
       * <code>bytes payer_private_key = 6;</code>
       * @return The payerPrivateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayerPrivateKey() {
        return instance.getPayerPrivateKey();
      }
      /**
       * <pre>
       * Private key of the payer
       * </pre>
       *
       * <code>bytes payer_private_key = 6;</code>
       * @param value The payerPrivateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPayerPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPayerPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * Private key of the payer
       * </pre>
       *
       * <code>bytes payer_private_key = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayerPrivateKey() {
        copyOnWrite();
        instance.clearPayerPrivateKey();
        return this;
      }

      /**
       * <pre>
       * Gas price
       * </pre>
       *
       * <code>uint64 gas_price = 7;</code>
       * @return The gasPrice.
       */
      @java.lang.Override
      public long getGasPrice() {
        return instance.getGasPrice();
      }
      /**
       * <pre>
       * Gas price
       * </pre>
       *
       * <code>uint64 gas_price = 7;</code>
       * @param value The gasPrice to set.
       * @return This builder for chaining.
       */
      public Builder setGasPrice(long value) {
        copyOnWrite();
        instance.setGasPrice(value);
        return this;
      }
      /**
       * <pre>
       * Gas price
       * </pre>
       *
       * <code>uint64 gas_price = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasPrice() {
        copyOnWrite();
        instance.clearGasPrice();
        return this;
      }

      /**
       * <pre>
       * Limit for gas used
       * </pre>
       *
       * <code>uint64 gas_limit = 8;</code>
       * @return The gasLimit.
       */
      @java.lang.Override
      public long getGasLimit() {
        return instance.getGasLimit();
      }
      /**
       * <pre>
       * Limit for gas used
       * </pre>
       *
       * <code>uint64 gas_limit = 8;</code>
       * @param value The gasLimit to set.
       * @return This builder for chaining.
       */
      public Builder setGasLimit(long value) {
        copyOnWrite();
        instance.setGasLimit(value);
        return this;
      }
      /**
       * <pre>
       * Limit for gas used
       * </pre>
       *
       * <code>uint64 gas_limit = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasLimit() {
        copyOnWrite();
        instance.clearGasLimit();
        return this;
      }

      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string query_address = 9;</code>
       * @return The queryAddress.
       */
      @java.lang.Override
      public java.lang.String getQueryAddress() {
        return instance.getQueryAddress();
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string query_address = 9;</code>
       * @return The bytes for queryAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getQueryAddressBytes() {
        return instance.getQueryAddressBytes();
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string query_address = 9;</code>
       * @param value The queryAddress to set.
       * @return This builder for chaining.
       */
      public Builder setQueryAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setQueryAddress(value);
        return this;
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string query_address = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearQueryAddress() {
        copyOnWrite();
        instance.clearQueryAddress();
        return this;
      }
      /**
       * <pre>
       * base58 encode address string (160-bit number)
       * </pre>
       *
       * <code>string query_address = 9;</code>
       * @param value The bytes for queryAddress to set.
       * @return This builder for chaining.
       */
      public Builder setQueryAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setQueryAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Nonce (should be larger than in the last transaction of the account)
       * </pre>
       *
       * <code>uint32 nonce = 10;</code>
       * @return The nonce.
       */
      @java.lang.Override
      public int getNonce() {
        return instance.getNonce();
      }
      /**
       * <pre>
       * Nonce (should be larger than in the last transaction of the account)
       * </pre>
       *
       * <code>uint32 nonce = 10;</code>
       * @param value The nonce to set.
       * @return This builder for chaining.
       */
      public Builder setNonce(int value) {
        copyOnWrite();
        instance.setNonce(value);
        return this;
      }
      /**
       * <pre>
       * Nonce (should be larger than in the last transaction of the account)
       * </pre>
       *
       * <code>uint32 nonce = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearNonce() {
        copyOnWrite();
        instance.clearNonce();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ontology.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ontology.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "contract_",
              "method_",
              "ownerPrivateKey_",
              "toAddress_",
              "amount_",
              "payerPrivateKey_",
              "gasPrice_",
              "gasLimit_",
              "queryAddress_",
              "nonce_",
            };
            java.lang.String info =
                "\u0000\n\u0000\u0000\u0001\n\n\u0000\u0000\u0000\u0001\u0208\u0002\u0208\u0003\n" +
                "\u0004\u0208\u0005\u0003\u0006\n\u0007\u0003\b\u0003\t\u0208\n\u000b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ontology.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ontology.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ontology.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ontology.Proto.SigningInput)
    private static final wallet.core.jni.proto.Ontology.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ontology.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ontology.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Ontology.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ontology.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ontology.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ontology.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Ontology.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ontology.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ontology.Proto.SigningOutput)
        wallet.core.jni.proto.Ontology.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Ontology.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ontology.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ontology.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ontology.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ontology.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ontology.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ontology.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Ontology.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ontology.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
