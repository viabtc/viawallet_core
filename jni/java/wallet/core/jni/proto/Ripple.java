// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ripple.proto

package wallet.core.jni.proto;

public final class Ripple {
  private Ripple() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ripple.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * Transfer fee
     * </pre>
     *
     * <code>int64 fee = 2;</code>
     * @return The fee.
     */
    long getFee();

    /**
     * <pre>
     * Account sequence number
     * </pre>
     *
     * <code>int32 sequence = 3;</code>
     * @return The sequence.
     */
    int getSequence();

    /**
     * <pre>
     * Ledger sequence number
     * </pre>
     *
     * <code>int32 last_ledger_sequence = 4;</code>
     * @return The lastLedgerSequence.
     */
    int getLastLedgerSequence();

    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     * @return The account.
     */
    java.lang.String getAccount();
    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     * @return The bytes for account.
     */
    com.google.protobuf.ByteString
        getAccountBytes();

    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     * @return The destination.
     */
    java.lang.String getDestination();
    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     * @return The bytes for destination.
     */
    com.google.protobuf.ByteString
        getDestinationBytes();

    /**
     * <pre>
     * A Destination Tag
     * </pre>
     *
     * <code>int64 destination_tag = 7;</code>
     * @return The destinationTag.
     */
    long getDestinationTag();

    /**
     * <pre>
     * Transaction flags, optional
     * </pre>
     *
     * <code>int64 flags = 8;</code>
     * @return The flags.
     */
    long getFlags();

    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Ripple.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ripple.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      account_ = "";
      destination_ = "";
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private long amount_;
    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     * @param value The amount to set.
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * Transfer amount
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int FEE_FIELD_NUMBER = 2;
    private long fee_;
    /**
     * <pre>
     * Transfer fee
     * </pre>
     *
     * <code>int64 fee = 2;</code>
     * @return The fee.
     */
    @java.lang.Override
    public long getFee() {
      return fee_;
    }
    /**
     * <pre>
     * Transfer fee
     * </pre>
     *
     * <code>int64 fee = 2;</code>
     * @param value The fee to set.
     */
    private void setFee(long value) {
      
      fee_ = value;
    }
    /**
     * <pre>
     * Transfer fee
     * </pre>
     *
     * <code>int64 fee = 2;</code>
     */
    private void clearFee() {
      
      fee_ = 0L;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private int sequence_;
    /**
     * <pre>
     * Account sequence number
     * </pre>
     *
     * <code>int32 sequence = 3;</code>
     * @return The sequence.
     */
    @java.lang.Override
    public int getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * Account sequence number
     * </pre>
     *
     * <code>int32 sequence = 3;</code>
     * @param value The sequence to set.
     */
    private void setSequence(int value) {
      
      sequence_ = value;
    }
    /**
     * <pre>
     * Account sequence number
     * </pre>
     *
     * <code>int32 sequence = 3;</code>
     */
    private void clearSequence() {
      
      sequence_ = 0;
    }

    public static final int LAST_LEDGER_SEQUENCE_FIELD_NUMBER = 4;
    private int lastLedgerSequence_;
    /**
     * <pre>
     * Ledger sequence number
     * </pre>
     *
     * <code>int32 last_ledger_sequence = 4;</code>
     * @return The lastLedgerSequence.
     */
    @java.lang.Override
    public int getLastLedgerSequence() {
      return lastLedgerSequence_;
    }
    /**
     * <pre>
     * Ledger sequence number
     * </pre>
     *
     * <code>int32 last_ledger_sequence = 4;</code>
     * @param value The lastLedgerSequence to set.
     */
    private void setLastLedgerSequence(int value) {
      
      lastLedgerSequence_ = value;
    }
    /**
     * <pre>
     * Ledger sequence number
     * </pre>
     *
     * <code>int32 last_ledger_sequence = 4;</code>
     */
    private void clearLastLedgerSequence() {
      
      lastLedgerSequence_ = 0;
    }

    public static final int ACCOUNT_FIELD_NUMBER = 5;
    private java.lang.String account_;
    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     * @return The account.
     */
    @java.lang.Override
    public java.lang.String getAccount() {
      return account_;
    }
    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     * @return The bytes for account.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccountBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(account_);
    }
    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     * @param value The account to set.
     */
    private void setAccount(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      account_ = value;
    }
    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     */
    private void clearAccount() {
      
      account_ = getDefaultInstance().getAccount();
    }
    /**
     * <pre>
     * Source account
     * </pre>
     *
     * <code>string account = 5;</code>
     * @param value The bytes for account to set.
     */
    private void setAccountBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      account_ = value.toStringUtf8();
      
    }

    public static final int DESTINATION_FIELD_NUMBER = 6;
    private java.lang.String destination_;
    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     * @return The destination.
     */
    @java.lang.Override
    public java.lang.String getDestination() {
      return destination_;
    }
    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     * @return The bytes for destination.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDestinationBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(destination_);
    }
    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     * @param value The destination to set.
     */
    private void setDestination(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      destination_ = value;
    }
    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     */
    private void clearDestination() {
      
      destination_ = getDefaultInstance().getDestination();
    }
    /**
     * <pre>
     * Target account
     * </pre>
     *
     * <code>string destination = 6;</code>
     * @param value The bytes for destination to set.
     */
    private void setDestinationBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      destination_ = value.toStringUtf8();
      
    }

    public static final int DESTINATION_TAG_FIELD_NUMBER = 7;
    private long destinationTag_;
    /**
     * <pre>
     * A Destination Tag
     * </pre>
     *
     * <code>int64 destination_tag = 7;</code>
     * @return The destinationTag.
     */
    @java.lang.Override
    public long getDestinationTag() {
      return destinationTag_;
    }
    /**
     * <pre>
     * A Destination Tag
     * </pre>
     *
     * <code>int64 destination_tag = 7;</code>
     * @param value The destinationTag to set.
     */
    private void setDestinationTag(long value) {
      
      destinationTag_ = value;
    }
    /**
     * <pre>
     * A Destination Tag
     * </pre>
     *
     * <code>int64 destination_tag = 7;</code>
     */
    private void clearDestinationTag() {
      
      destinationTag_ = 0L;
    }

    public static final int FLAGS_FIELD_NUMBER = 8;
    private long flags_;
    /**
     * <pre>
     * Transaction flags, optional
     * </pre>
     *
     * <code>int64 flags = 8;</code>
     * @return The flags.
     */
    @java.lang.Override
    public long getFlags() {
      return flags_;
    }
    /**
     * <pre>
     * Transaction flags, optional
     * </pre>
     *
     * <code>int64 flags = 8;</code>
     * @param value The flags to set.
     */
    private void setFlags(long value) {
      
      flags_ = value;
    }
    /**
     * <pre>
     * Transaction flags, optional
     * </pre>
     *
     * <code>int64 flags = 8;</code>
     */
    private void clearFlags() {
      
      flags_ = 0L;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <pre>
     * The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ripple.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ripple.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Ripple.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ripple.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ripple.Proto.SigningInput)
        wallet.core.jni.proto.Ripple.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.Ripple.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Transfer amount
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * Transfer amount
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * Transfer amount
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <pre>
       * Transfer fee
       * </pre>
       *
       * <code>int64 fee = 2;</code>
       * @return The fee.
       */
      @java.lang.Override
      public long getFee() {
        return instance.getFee();
      }
      /**
       * <pre>
       * Transfer fee
       * </pre>
       *
       * <code>int64 fee = 2;</code>
       * @param value The fee to set.
       * @return This builder for chaining.
       */
      public Builder setFee(long value) {
        copyOnWrite();
        instance.setFee(value);
        return this;
      }
      /**
       * <pre>
       * Transfer fee
       * </pre>
       *
       * <code>int64 fee = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFee() {
        copyOnWrite();
        instance.clearFee();
        return this;
      }

      /**
       * <pre>
       * Account sequence number
       * </pre>
       *
       * <code>int32 sequence = 3;</code>
       * @return The sequence.
       */
      @java.lang.Override
      public int getSequence() {
        return instance.getSequence();
      }
      /**
       * <pre>
       * Account sequence number
       * </pre>
       *
       * <code>int32 sequence = 3;</code>
       * @param value The sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequence(int value) {
        copyOnWrite();
        instance.setSequence(value);
        return this;
      }
      /**
       * <pre>
       * Account sequence number
       * </pre>
       *
       * <code>int32 sequence = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequence() {
        copyOnWrite();
        instance.clearSequence();
        return this;
      }

      /**
       * <pre>
       * Ledger sequence number
       * </pre>
       *
       * <code>int32 last_ledger_sequence = 4;</code>
       * @return The lastLedgerSequence.
       */
      @java.lang.Override
      public int getLastLedgerSequence() {
        return instance.getLastLedgerSequence();
      }
      /**
       * <pre>
       * Ledger sequence number
       * </pre>
       *
       * <code>int32 last_ledger_sequence = 4;</code>
       * @param value The lastLedgerSequence to set.
       * @return This builder for chaining.
       */
      public Builder setLastLedgerSequence(int value) {
        copyOnWrite();
        instance.setLastLedgerSequence(value);
        return this;
      }
      /**
       * <pre>
       * Ledger sequence number
       * </pre>
       *
       * <code>int32 last_ledger_sequence = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastLedgerSequence() {
        copyOnWrite();
        instance.clearLastLedgerSequence();
        return this;
      }

      /**
       * <pre>
       * Source account
       * </pre>
       *
       * <code>string account = 5;</code>
       * @return The account.
       */
      @java.lang.Override
      public java.lang.String getAccount() {
        return instance.getAccount();
      }
      /**
       * <pre>
       * Source account
       * </pre>
       *
       * <code>string account = 5;</code>
       * @return The bytes for account.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAccountBytes() {
        return instance.getAccountBytes();
      }
      /**
       * <pre>
       * Source account
       * </pre>
       *
       * <code>string account = 5;</code>
       * @param value The account to set.
       * @return This builder for chaining.
       */
      public Builder setAccount(
          java.lang.String value) {
        copyOnWrite();
        instance.setAccount(value);
        return this;
      }
      /**
       * <pre>
       * Source account
       * </pre>
       *
       * <code>string account = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccount() {
        copyOnWrite();
        instance.clearAccount();
        return this;
      }
      /**
       * <pre>
       * Source account
       * </pre>
       *
       * <code>string account = 5;</code>
       * @param value The bytes for account to set.
       * @return This builder for chaining.
       */
      public Builder setAccountBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAccountBytes(value);
        return this;
      }

      /**
       * <pre>
       * Target account
       * </pre>
       *
       * <code>string destination = 6;</code>
       * @return The destination.
       */
      @java.lang.Override
      public java.lang.String getDestination() {
        return instance.getDestination();
      }
      /**
       * <pre>
       * Target account
       * </pre>
       *
       * <code>string destination = 6;</code>
       * @return The bytes for destination.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDestinationBytes() {
        return instance.getDestinationBytes();
      }
      /**
       * <pre>
       * Target account
       * </pre>
       *
       * <code>string destination = 6;</code>
       * @param value The destination to set.
       * @return This builder for chaining.
       */
      public Builder setDestination(
          java.lang.String value) {
        copyOnWrite();
        instance.setDestination(value);
        return this;
      }
      /**
       * <pre>
       * Target account
       * </pre>
       *
       * <code>string destination = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestination() {
        copyOnWrite();
        instance.clearDestination();
        return this;
      }
      /**
       * <pre>
       * Target account
       * </pre>
       *
       * <code>string destination = 6;</code>
       * @param value The bytes for destination to set.
       * @return This builder for chaining.
       */
      public Builder setDestinationBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDestinationBytes(value);
        return this;
      }

      /**
       * <pre>
       * A Destination Tag
       * </pre>
       *
       * <code>int64 destination_tag = 7;</code>
       * @return The destinationTag.
       */
      @java.lang.Override
      public long getDestinationTag() {
        return instance.getDestinationTag();
      }
      /**
       * <pre>
       * A Destination Tag
       * </pre>
       *
       * <code>int64 destination_tag = 7;</code>
       * @param value The destinationTag to set.
       * @return This builder for chaining.
       */
      public Builder setDestinationTag(long value) {
        copyOnWrite();
        instance.setDestinationTag(value);
        return this;
      }
      /**
       * <pre>
       * A Destination Tag
       * </pre>
       *
       * <code>int64 destination_tag = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestinationTag() {
        copyOnWrite();
        instance.clearDestinationTag();
        return this;
      }

      /**
       * <pre>
       * Transaction flags, optional
       * </pre>
       *
       * <code>int64 flags = 8;</code>
       * @return The flags.
       */
      @java.lang.Override
      public long getFlags() {
        return instance.getFlags();
      }
      /**
       * <pre>
       * Transaction flags, optional
       * </pre>
       *
       * <code>int64 flags = 8;</code>
       * @param value The flags to set.
       * @return This builder for chaining.
       */
      public Builder setFlags(long value) {
        copyOnWrite();
        instance.setFlags(value);
        return this;
      }
      /**
       * <pre>
       * Transaction flags, optional
       * </pre>
       *
       * <code>int64 flags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlags() {
        copyOnWrite();
        instance.clearFlags();
        return this;
      }

      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       * The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ripple.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ripple.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "amount_",
              "fee_",
              "sequence_",
              "lastLedgerSequence_",
              "account_",
              "destination_",
              "destinationTag_",
              "flags_",
              "privateKey_",
            };
            java.lang.String info =
                "\u0000\t\u0000\u0000\u0001\t\t\u0000\u0000\u0000\u0001\u0002\u0002\u0002\u0003\u0004" +
                "\u0004\u0004\u0005\u0208\u0006\u0208\u0007\u0002\b\u0002\t\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ripple.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ripple.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ripple.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ripple.Proto.SigningInput)
    private static final wallet.core.jni.proto.Ripple.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ripple.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Ripple.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Encoded transaction
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The enum numeric value on the wire for error.
     */
    int getErrorValue();
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The error.
     */
    wallet.core.jni.proto.Common.SigningError getError();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Ripple.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.Ripple.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Encoded transaction
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Encoded transaction
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Encoded transaction
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int ERROR_FIELD_NUMBER = 2;
    private int error_;
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The enum numeric value on the wire for error.
     */
    @java.lang.Override
    public int getErrorValue() {
      return error_;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @return The error.
     */
    @java.lang.Override
    public wallet.core.jni.proto.Common.SigningError getError() {
      wallet.core.jni.proto.Common.SigningError result = wallet.core.jni.proto.Common.SigningError.forNumber(error_);
      return result == null ? wallet.core.jni.proto.Common.SigningError.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @param value The enum numeric value on the wire for error to set.
     */
    private void setErrorValue(int value) {
        error_ = value;
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     * @param value The error to set.
     */
    private void setError(wallet.core.jni.proto.Common.SigningError value) {
      error_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Optional error
     * </pre>
     *
     * <code>.TW.Common.Proto.SigningError error = 2;</code>
     */
    private void clearError() {
      
      error_ = 0;
    }

    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.Ripple.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Ripple.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Ripple.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.Ripple.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Ripple.Proto.SigningOutput)
        wallet.core.jni.proto.Ripple.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.Ripple.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Encoded transaction
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Encoded transaction
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Encoded transaction
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return The enum numeric value on the wire for error.
       */
      @java.lang.Override
      public int getErrorValue() {
        return instance.getErrorValue();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorValue(int value) {
        copyOnWrite();
        instance.setErrorValue(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return The error.
       */
      @java.lang.Override
      public wallet.core.jni.proto.Common.SigningError getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @param value The enum numeric value on the wire for error to set.
       * @return This builder for chaining.
       */
      public Builder setError(wallet.core.jni.proto.Common.SigningError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <pre>
       * Optional error
       * </pre>
       *
       * <code>.TW.Common.Proto.SigningError error = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.Ripple.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.Ripple.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "error_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.Ripple.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.Ripple.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.Ripple.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.Ripple.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Ripple.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.Ripple.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
