// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: THORChainSwap.proto

package wallet.core.jni.proto;

public final class THORChainSwap {
  private THORChainSwap() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * Supported blockchains
   * </pre>
   *
   * Protobuf enum {@code TW.THORChainSwap.Proto.Chain}
   */
  public enum Chain
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>THOR = 0;</code>
     */
    THOR(0),
    /**
     * <code>BTC = 1;</code>
     */
    BTC(1),
    /**
     * <code>ETH = 2;</code>
     */
    ETH(2),
    /**
     * <code>BNB = 3;</code>
     */
    BNB(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>THOR = 0;</code>
     */
    public static final int THOR_VALUE = 0;
    /**
     * <code>BTC = 1;</code>
     */
    public static final int BTC_VALUE = 1;
    /**
     * <code>ETH = 2;</code>
     */
    public static final int ETH_VALUE = 2;
    /**
     * <code>BNB = 3;</code>
     */
    public static final int BNB_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Chain valueOf(int value) {
      return forNumber(value);
    }

    public static Chain forNumber(int value) {
      switch (value) {
        case 0: return THOR;
        case 1: return BTC;
        case 2: return ETH;
        case 3: return BNB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Chain>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Chain> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Chain>() {
            @java.lang.Override
            public Chain findValueByNumber(int number) {
              return Chain.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ChainVerifier.INSTANCE;
    }

    private static final class ChainVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ChainVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Chain.forNumber(number) != null;
            }
          };

    private final int value;

    private Chain(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TW.THORChainSwap.Proto.Chain)
  }

  /**
   * <pre>
   * Predefined error codes
   * </pre>
   *
   * Protobuf enum {@code TW.THORChainSwap.Proto.ErrorCode}
   */
  public enum ErrorCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * OK
     * </pre>
     *
     * <code>OK = 0;</code>
     */
    OK(0),
    /**
     * <code>Error_general = 1;</code>
     */
    Error_general(1),
    /**
     * <code>Error_Input_proto_deserialization = 2;</code>
     */
    Error_Input_proto_deserialization(2),
    /**
     * <code>Error_Unsupported_from_chain = 13;</code>
     */
    Error_Unsupported_from_chain(13),
    /**
     * <code>Error_Unsupported_to_chain = 14;</code>
     */
    Error_Unsupported_to_chain(14),
    /**
     * <code>Error_Invalid_from_address = 15;</code>
     */
    Error_Invalid_from_address(15),
    /**
     * <code>Error_Invalid_to_address = 16;</code>
     */
    Error_Invalid_to_address(16),
    /**
     * <code>Error_Invalid_vault_address = 21;</code>
     */
    Error_Invalid_vault_address(21),
    /**
     * <code>Error_Invalid_router_address = 22;</code>
     */
    Error_Invalid_router_address(22),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * OK
     * </pre>
     *
     * <code>OK = 0;</code>
     */
    public static final int OK_VALUE = 0;
    /**
     * <code>Error_general = 1;</code>
     */
    public static final int Error_general_VALUE = 1;
    /**
     * <code>Error_Input_proto_deserialization = 2;</code>
     */
    public static final int Error_Input_proto_deserialization_VALUE = 2;
    /**
     * <code>Error_Unsupported_from_chain = 13;</code>
     */
    public static final int Error_Unsupported_from_chain_VALUE = 13;
    /**
     * <code>Error_Unsupported_to_chain = 14;</code>
     */
    public static final int Error_Unsupported_to_chain_VALUE = 14;
    /**
     * <code>Error_Invalid_from_address = 15;</code>
     */
    public static final int Error_Invalid_from_address_VALUE = 15;
    /**
     * <code>Error_Invalid_to_address = 16;</code>
     */
    public static final int Error_Invalid_to_address_VALUE = 16;
    /**
     * <code>Error_Invalid_vault_address = 21;</code>
     */
    public static final int Error_Invalid_vault_address_VALUE = 21;
    /**
     * <code>Error_Invalid_router_address = 22;</code>
     */
    public static final int Error_Invalid_router_address_VALUE = 22;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorCode valueOf(int value) {
      return forNumber(value);
    }

    public static ErrorCode forNumber(int value) {
      switch (value) {
        case 0: return OK;
        case 1: return Error_general;
        case 2: return Error_Input_proto_deserialization;
        case 13: return Error_Unsupported_from_chain;
        case 14: return Error_Unsupported_to_chain;
        case 15: return Error_Invalid_from_address;
        case 16: return Error_Invalid_to_address;
        case 21: return Error_Invalid_vault_address;
        case 22: return Error_Invalid_router_address;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
            @java.lang.Override
            public ErrorCode findValueByNumber(int number) {
              return ErrorCode.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ErrorCodeVerifier.INSTANCE;
    }

    private static final class ErrorCodeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ErrorCodeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ErrorCode.forNumber(number) != null;
            }
          };

    private final int value;

    private ErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TW.THORChainSwap.Proto.ErrorCode)
  }

  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.THORChainSwap.Proto.Error)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    int getCodeValue();
    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     * @return The code.
     */
    wallet.core.jni.proto.THORChainSwap.ErrorCode getCode();

    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * An error code + a free text
   * </pre>
   *
   * Protobuf type {@code TW.THORChainSwap.Proto.Error}
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessageLite<
          Error, Error.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.THORChainSwap.Proto.Error)
      ErrorOrBuilder {
    private Error() {
      message_ = "";
    }
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override
    public int getCodeValue() {
      return code_;
    }
    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.ErrorCode getCode() {
      wallet.core.jni.proto.THORChainSwap.ErrorCode result = wallet.core.jni.proto.THORChainSwap.ErrorCode.forNumber(code_);
      return result == null ? wallet.core.jni.proto.THORChainSwap.ErrorCode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     * @param value The enum numeric value on the wire for code to set.
     */
    private void setCodeValue(int value) {
        code_ = value;
    }
    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     * @param value The code to set.
     */
    private void setCode(wallet.core.jni.proto.THORChainSwap.ErrorCode value) {
      code_ = value.getNumber();
      
    }
    /**
     * <pre>
     * code of the error
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
     */
    private void clearCode() {
      
      code_ = 0;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.String message_;
    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return message_;
    }
    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(message_);
    }
    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     * @param value The message to set.
     */
    private void setMessage(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      message_ = value;
    }
    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    private void clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
    }
    /**
     * <pre>
     * optional error message
     * </pre>
     *
     * <code>string message = 2;</code>
     * @param value The bytes for message to set.
     */
    private void setMessageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      message_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.THORChainSwap.Error prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * An error code + a free text
     * </pre>
     *
     * Protobuf type {@code TW.THORChainSwap.Proto.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.THORChainSwap.Error, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.THORChainSwap.Proto.Error)
        wallet.core.jni.proto.THORChainSwap.ErrorOrBuilder {
      // Construct using wallet.core.jni.proto.THORChainSwap.Error.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * code of the error
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
       * @return The enum numeric value on the wire for code.
       */
      @java.lang.Override
      public int getCodeValue() {
        return instance.getCodeValue();
      }
      /**
       * <pre>
       * code of the error
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeValue(int value) {
        copyOnWrite();
        instance.setCodeValue(value);
        return this;
      }
      /**
       * <pre>
       * code of the error
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.ErrorCode getCode() {
        return instance.getCode();
      }
      /**
       * <pre>
       * code of the error
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
       * @param value The enum numeric value on the wire for code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(wallet.core.jni.proto.THORChainSwap.ErrorCode value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <pre>
       * code of the error
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.ErrorCode code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <pre>
       * optional error message
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return The message.
       */
      @java.lang.Override
      public java.lang.String getMessage() {
        return instance.getMessage();
      }
      /**
       * <pre>
       * optional error message
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageBytes() {
        return instance.getMessageBytes();
      }
      /**
       * <pre>
       * optional error message
       * </pre>
       *
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setMessage(value);
        return this;
      }
      /**
       * <pre>
       * optional error message
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        copyOnWrite();
        instance.clearMessage();
        return this;
      }
      /**
       * <pre>
       * optional error message
       * </pre>
       *
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.THORChainSwap.Proto.Error)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.THORChainSwap.Error();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "code_",
              "message_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.THORChainSwap.Error> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.THORChainSwap.Error.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.THORChainSwap.Error>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.THORChainSwap.Proto.Error)
    private static final wallet.core.jni.proto.THORChainSwap.Error DEFAULT_INSTANCE;
    static {
      Error defaultInstance = new Error();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Error.class, defaultInstance);
    }

    public static wallet.core.jni.proto.THORChainSwap.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Error> PARSER;

    public static com.google.protobuf.Parser<Error> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AssetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.THORChainSwap.Proto.Asset)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     * @return The enum numeric value on the wire for chain.
     */
    int getChainValue();
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     * @return The chain.
     */
    wallet.core.jni.proto.THORChainSwap.Chain getChain();

    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     * @return The tokenId.
     */
    java.lang.String getTokenId();
    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     * @return The bytes for tokenId.
     */
    com.google.protobuf.ByteString
        getTokenIdBytes();
  }
  /**
   * <pre>
   * Represents an asset.  Examples: BNB.BNB, RUNE.RUNE, BNB.RUNE-67C
   * </pre>
   *
   * Protobuf type {@code TW.THORChainSwap.Proto.Asset}
   */
  public  static final class Asset extends
      com.google.protobuf.GeneratedMessageLite<
          Asset, Asset.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.THORChainSwap.Proto.Asset)
      AssetOrBuilder {
    private Asset() {
      symbol_ = "";
      tokenId_ = "";
    }
    public static final int CHAIN_FIELD_NUMBER = 1;
    private int chain_;
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     * @return The enum numeric value on the wire for chain.
     */
    @java.lang.Override
    public int getChainValue() {
      return chain_;
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     * @return The chain.
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.Chain getChain() {
      wallet.core.jni.proto.THORChainSwap.Chain result = wallet.core.jni.proto.THORChainSwap.Chain.forNumber(chain_);
      return result == null ? wallet.core.jni.proto.THORChainSwap.Chain.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     * @param value The enum numeric value on the wire for chain to set.
     */
    private void setChainValue(int value) {
        chain_ = value;
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     * @param value The chain to set.
     */
    private void setChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
      chain_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Chain ID
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
     */
    private void clearChain() {
      
      chain_ = 0;
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The symbol to set.
     */
    private void setSymbol(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      symbol_ = value;
    }
    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * Symbol
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @param value The bytes for symbol to set.
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      symbol_ = value.toStringUtf8();
      
    }

    public static final int TOKEN_ID_FIELD_NUMBER = 3;
    private java.lang.String tokenId_;
    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     * @return The tokenId.
     */
    @java.lang.Override
    public java.lang.String getTokenId() {
      return tokenId_;
    }
    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     * @return The bytes for tokenId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(tokenId_);
    }
    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     * @param value The tokenId to set.
     */
    private void setTokenId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      tokenId_ = value;
    }
    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     */
    private void clearTokenId() {
      
      tokenId_ = getDefaultInstance().getTokenId();
    }
    /**
     * <pre>
     * The ID of the token (blockchain-specific format)
     * </pre>
     *
     * <code>string token_id = 3;</code>
     * @param value The bytes for tokenId to set.
     */
    private void setTokenIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      tokenId_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.Asset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.THORChainSwap.Asset prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Represents an asset.  Examples: BNB.BNB, RUNE.RUNE, BNB.RUNE-67C
     * </pre>
     *
     * Protobuf type {@code TW.THORChainSwap.Proto.Asset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.THORChainSwap.Asset, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.THORChainSwap.Proto.Asset)
        wallet.core.jni.proto.THORChainSwap.AssetOrBuilder {
      // Construct using wallet.core.jni.proto.THORChainSwap.Asset.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
       * @return The enum numeric value on the wire for chain.
       */
      @java.lang.Override
      public int getChainValue() {
        return instance.getChainValue();
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
       * @param value The chain to set.
       * @return This builder for chaining.
       */
      public Builder setChainValue(int value) {
        copyOnWrite();
        instance.setChainValue(value);
        return this;
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
       * @return The chain.
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.Chain getChain() {
        return instance.getChain();
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
       * @param value The enum numeric value on the wire for chain to set.
       * @return This builder for chaining.
       */
      public Builder setChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
        copyOnWrite();
        instance.setChain(value);
        return this;
      }
      /**
       * <pre>
       * Chain ID
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain chain = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChain() {
        copyOnWrite();
        instance.clearChain();
        return this;
      }

      /**
       * <pre>
       * Symbol
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      @java.lang.Override
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * Symbol
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * Symbol
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * Symbol
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * Symbol
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * The ID of the token (blockchain-specific format)
       * </pre>
       *
       * <code>string token_id = 3;</code>
       * @return The tokenId.
       */
      @java.lang.Override
      public java.lang.String getTokenId() {
        return instance.getTokenId();
      }
      /**
       * <pre>
       * The ID of the token (blockchain-specific format)
       * </pre>
       *
       * <code>string token_id = 3;</code>
       * @return The bytes for tokenId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenIdBytes() {
        return instance.getTokenIdBytes();
      }
      /**
       * <pre>
       * The ID of the token (blockchain-specific format)
       * </pre>
       *
       * <code>string token_id = 3;</code>
       * @param value The tokenId to set.
       * @return This builder for chaining.
       */
      public Builder setTokenId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTokenId(value);
        return this;
      }
      /**
       * <pre>
       * The ID of the token (blockchain-specific format)
       * </pre>
       *
       * <code>string token_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenId() {
        copyOnWrite();
        instance.clearTokenId();
        return this;
      }
      /**
       * <pre>
       * The ID of the token (blockchain-specific format)
       * </pre>
       *
       * <code>string token_id = 3;</code>
       * @param value The bytes for tokenId to set.
       * @return This builder for chaining.
       */
      public Builder setTokenIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.THORChainSwap.Proto.Asset)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.THORChainSwap.Asset();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "chain_",
              "symbol_",
              "tokenId_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "\u0003\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.THORChainSwap.Asset> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.THORChainSwap.Asset.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.THORChainSwap.Asset>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.THORChainSwap.Proto.Asset)
    private static final wallet.core.jni.proto.THORChainSwap.Asset DEFAULT_INSTANCE;
    static {
      Asset defaultInstance = new Asset();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Asset.class, defaultInstance);
    }

    public static wallet.core.jni.proto.THORChainSwap.Asset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Asset> PARSER;

    public static com.google.protobuf.Parser<Asset> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SwapInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.THORChainSwap.Proto.SwapInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The enum numeric value on the wire for fromChain.
     */
    int getFromChainValue();
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The fromChain.
     */
    wallet.core.jni.proto.THORChainSwap.Chain getFromChain();

    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     * @return The fromAddress.
     */
    java.lang.String getFromAddress();
    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     * @return The bytes for fromAddress.
     */
    com.google.protobuf.ByteString
        getFromAddressBytes();

    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     * @return Whether the toAsset field is set.
     */
    boolean hasToAsset();
    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     * @return The toAsset.
     */
    wallet.core.jni.proto.THORChainSwap.Asset getToAsset();

    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The toAddress.
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The bytes for toAddress.
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     * @return The vaultAddress.
     */
    java.lang.String getVaultAddress();
    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     * @return The bytes for vaultAddress.
     */
    com.google.protobuf.ByteString
        getVaultAddressBytes();

    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     * @return The routerAddress.
     */
    java.lang.String getRouterAddress();
    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     * @return The bytes for routerAddress.
     */
    com.google.protobuf.ByteString
        getRouterAddressBytes();

    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     * @return The fromAmount.
     */
    java.lang.String getFromAmount();
    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     * @return The bytes for fromAmount.
     */
    com.google.protobuf.ByteString
        getFromAmountBytes();

    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     * @return The toAmountLimit.
     */
    java.lang.String getToAmountLimit();
    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     * @return The bytes for toAmountLimit.
     */
    com.google.protobuf.ByteString
        getToAmountLimitBytes();
  }
  /**
   * <pre>
   * Input for a swap between source and destination chains; for creating a TX on the source chain.
   * </pre>
   *
   * Protobuf type {@code TW.THORChainSwap.Proto.SwapInput}
   */
  public  static final class SwapInput extends
      com.google.protobuf.GeneratedMessageLite<
          SwapInput, SwapInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.THORChainSwap.Proto.SwapInput)
      SwapInputOrBuilder {
    private SwapInput() {
      fromAddress_ = "";
      toAddress_ = "";
      vaultAddress_ = "";
      routerAddress_ = "";
      fromAmount_ = "";
      toAmountLimit_ = "";
    }
    public static final int FROM_CHAIN_FIELD_NUMBER = 1;
    private int fromChain_;
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The enum numeric value on the wire for fromChain.
     */
    @java.lang.Override
    public int getFromChainValue() {
      return fromChain_;
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The fromChain.
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.Chain getFromChain() {
      wallet.core.jni.proto.THORChainSwap.Chain result = wallet.core.jni.proto.THORChainSwap.Chain.forNumber(fromChain_);
      return result == null ? wallet.core.jni.proto.THORChainSwap.Chain.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @param value The enum numeric value on the wire for fromChain to set.
     */
    private void setFromChainValue(int value) {
        fromChain_ = value;
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @param value The fromChain to set.
     */
    private void setFromChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
      fromChain_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     */
    private void clearFromChain() {
      
      fromChain_ = 0;
    }

    public static final int FROM_ADDRESS_FIELD_NUMBER = 2;
    private java.lang.String fromAddress_;
    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     * @return The fromAddress.
     */
    @java.lang.Override
    public java.lang.String getFromAddress() {
      return fromAddress_;
    }
    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     * @return The bytes for fromAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFromAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fromAddress_);
    }
    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     * @param value The fromAddress to set.
     */
    private void setFromAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      fromAddress_ = value;
    }
    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     */
    private void clearFromAddress() {
      
      fromAddress_ = getDefaultInstance().getFromAddress();
    }
    /**
     * <pre>
     * Source address, on source chain
     * </pre>
     *
     * <code>string from_address = 2;</code>
     * @param value The bytes for fromAddress to set.
     */
    private void setFromAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      fromAddress_ = value.toStringUtf8();
      
    }

    public static final int TO_ASSET_FIELD_NUMBER = 3;
    private wallet.core.jni.proto.THORChainSwap.Asset toAsset_;
    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     */
    @java.lang.Override
    public boolean hasToAsset() {
      return toAsset_ != null;
    }
    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.Asset getToAsset() {
      return toAsset_ == null ? wallet.core.jni.proto.THORChainSwap.Asset.getDefaultInstance() : toAsset_;
    }
    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     */
    private void setToAsset(wallet.core.jni.proto.THORChainSwap.Asset value) {
      value.getClass();
  toAsset_ = value;
      
      }
    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeToAsset(wallet.core.jni.proto.THORChainSwap.Asset value) {
      value.getClass();
  if (toAsset_ != null &&
          toAsset_ != wallet.core.jni.proto.THORChainSwap.Asset.getDefaultInstance()) {
        toAsset_ =
          wallet.core.jni.proto.THORChainSwap.Asset.newBuilder(toAsset_).mergeFrom(value).buildPartial();
      } else {
        toAsset_ = value;
      }
      
    }
    /**
     * <pre>
     * Destination chain+asset, on destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
     */
    private void clearToAsset() {  toAsset_ = null;
      
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.String toAddress_;
    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The toAddress.
     */
    @java.lang.Override
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @return The bytes for toAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @param value The toAddress to set.
     */
    private void setToAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAddress_ = value;
    }
    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <pre>
     * Destination address, on destination chain
     * </pre>
     *
     * <code>string to_address = 4;</code>
     * @param value The bytes for toAddress to set.
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAddress_ = value.toStringUtf8();
      
    }

    public static final int VAULT_ADDRESS_FIELD_NUMBER = 5;
    private java.lang.String vaultAddress_;
    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     * @return The vaultAddress.
     */
    @java.lang.Override
    public java.lang.String getVaultAddress() {
      return vaultAddress_;
    }
    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     * @return The bytes for vaultAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVaultAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(vaultAddress_);
    }
    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     * @param value The vaultAddress to set.
     */
    private void setVaultAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      vaultAddress_ = value;
    }
    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     */
    private void clearVaultAddress() {
      
      vaultAddress_ = getDefaultInstance().getVaultAddress();
    }
    /**
     * <pre>
     * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
     * </pre>
     *
     * <code>string vault_address = 5;</code>
     * @param value The bytes for vaultAddress to set.
     */
    private void setVaultAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      vaultAddress_ = value.toStringUtf8();
      
    }

    public static final int ROUTER_ADDRESS_FIELD_NUMBER = 6;
    private java.lang.String routerAddress_;
    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     * @return The routerAddress.
     */
    @java.lang.Override
    public java.lang.String getRouterAddress() {
      return routerAddress_;
    }
    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     * @return The bytes for routerAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRouterAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(routerAddress_);
    }
    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     * @param value The routerAddress to set.
     */
    private void setRouterAddress(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      routerAddress_ = value;
    }
    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     */
    private void clearRouterAddress() {
      
      routerAddress_ = getDefaultInstance().getRouterAddress();
    }
    /**
     * <pre>
     * ThorChain router, only in case of Ethereum source network
     * </pre>
     *
     * <code>string router_address = 6;</code>
     * @param value The bytes for routerAddress to set.
     */
    private void setRouterAddressBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      routerAddress_ = value.toStringUtf8();
      
    }

    public static final int FROM_AMOUNT_FIELD_NUMBER = 7;
    private java.lang.String fromAmount_;
    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     * @return The fromAmount.
     */
    @java.lang.Override
    public java.lang.String getFromAmount() {
      return fromAmount_;
    }
    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     * @return The bytes for fromAmount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFromAmountBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fromAmount_);
    }
    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     * @param value The fromAmount to set.
     */
    private void setFromAmount(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      fromAmount_ = value;
    }
    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     */
    private void clearFromAmount() {
      
      fromAmount_ = getDefaultInstance().getFromAmount();
    }
    /**
     * <pre>
     * The source amount, integer as string, in the smallest native unit of the chain
     * </pre>
     *
     * <code>string from_amount = 7;</code>
     * @param value The bytes for fromAmount to set.
     */
    private void setFromAmountBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      fromAmount_ = value.toStringUtf8();
      
    }

    public static final int TO_AMOUNT_LIMIT_FIELD_NUMBER = 8;
    private java.lang.String toAmountLimit_;
    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     * @return The toAmountLimit.
     */
    @java.lang.Override
    public java.lang.String getToAmountLimit() {
      return toAmountLimit_;
    }
    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     * @return The bytes for toAmountLimit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToAmountLimitBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAmountLimit_);
    }
    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     * @param value The toAmountLimit to set.
     */
    private void setToAmountLimit(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      toAmountLimit_ = value;
    }
    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     */
    private void clearToAmountLimit() {
      
      toAmountLimit_ = getDefaultInstance().getToAmountLimit();
    }
    /**
     * <pre>
     * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
     * </pre>
     *
     * <code>string to_amount_limit = 8;</code>
     * @param value The bytes for toAmountLimit to set.
     */
    private void setToAmountLimitBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      toAmountLimit_ = value.toStringUtf8();
      
    }

    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.THORChainSwap.SwapInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input for a swap between source and destination chains; for creating a TX on the source chain.
     * </pre>
     *
     * Protobuf type {@code TW.THORChainSwap.Proto.SwapInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.THORChainSwap.SwapInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.THORChainSwap.Proto.SwapInput)
        wallet.core.jni.proto.THORChainSwap.SwapInputOrBuilder {
      // Construct using wallet.core.jni.proto.THORChainSwap.SwapInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @return The enum numeric value on the wire for fromChain.
       */
      @java.lang.Override
      public int getFromChainValue() {
        return instance.getFromChainValue();
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @param value The fromChain to set.
       * @return This builder for chaining.
       */
      public Builder setFromChainValue(int value) {
        copyOnWrite();
        instance.setFromChainValue(value);
        return this;
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @return The fromChain.
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.Chain getFromChain() {
        return instance.getFromChain();
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @param value The enum numeric value on the wire for fromChain to set.
       * @return This builder for chaining.
       */
      public Builder setFromChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
        copyOnWrite();
        instance.setFromChain(value);
        return this;
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromChain() {
        copyOnWrite();
        instance.clearFromChain();
        return this;
      }

      /**
       * <pre>
       * Source address, on source chain
       * </pre>
       *
       * <code>string from_address = 2;</code>
       * @return The fromAddress.
       */
      @java.lang.Override
      public java.lang.String getFromAddress() {
        return instance.getFromAddress();
      }
      /**
       * <pre>
       * Source address, on source chain
       * </pre>
       *
       * <code>string from_address = 2;</code>
       * @return The bytes for fromAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFromAddressBytes() {
        return instance.getFromAddressBytes();
      }
      /**
       * <pre>
       * Source address, on source chain
       * </pre>
       *
       * <code>string from_address = 2;</code>
       * @param value The fromAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFromAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setFromAddress(value);
        return this;
      }
      /**
       * <pre>
       * Source address, on source chain
       * </pre>
       *
       * <code>string from_address = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromAddress() {
        copyOnWrite();
        instance.clearFromAddress();
        return this;
      }
      /**
       * <pre>
       * Source address, on source chain
       * </pre>
       *
       * <code>string from_address = 2;</code>
       * @param value The bytes for fromAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFromAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFromAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * Destination chain+asset, on destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
       */
      @java.lang.Override
      public boolean hasToAsset() {
        return instance.hasToAsset();
      }
      /**
       * <pre>
       * Destination chain+asset, on destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.Asset getToAsset() {
        return instance.getToAsset();
      }
      /**
       * <pre>
       * Destination chain+asset, on destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
       */
      public Builder setToAsset(wallet.core.jni.proto.THORChainSwap.Asset value) {
        copyOnWrite();
        instance.setToAsset(value);
        return this;
        }
      /**
       * <pre>
       * Destination chain+asset, on destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
       */
      public Builder setToAsset(
          wallet.core.jni.proto.THORChainSwap.Asset.Builder builderForValue) {
        copyOnWrite();
        instance.setToAsset(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Destination chain+asset, on destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
       */
      public Builder mergeToAsset(wallet.core.jni.proto.THORChainSwap.Asset value) {
        copyOnWrite();
        instance.mergeToAsset(value);
        return this;
      }
      /**
       * <pre>
       * Destination chain+asset, on destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Asset to_asset = 3;</code>
       */
      public Builder clearToAsset() {  copyOnWrite();
        instance.clearToAsset();
        return this;
      }

      /**
       * <pre>
       * Destination address, on destination chain
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @return The toAddress.
       */
      @java.lang.Override
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <pre>
       * Destination address, on destination chain
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @return The bytes for toAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <pre>
       * Destination address, on destination chain
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @param value The toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <pre>
       * Destination address, on destination chain
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <pre>
       * Destination address, on destination chain
       * </pre>
       *
       * <code>string to_address = 4;</code>
       * @param value The bytes for toAddress to set.
       * @return This builder for chaining.
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
       * </pre>
       *
       * <code>string vault_address = 5;</code>
       * @return The vaultAddress.
       */
      @java.lang.Override
      public java.lang.String getVaultAddress() {
        return instance.getVaultAddress();
      }
      /**
       * <pre>
       * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
       * </pre>
       *
       * <code>string vault_address = 5;</code>
       * @return The bytes for vaultAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVaultAddressBytes() {
        return instance.getVaultAddressBytes();
      }
      /**
       * <pre>
       * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
       * </pre>
       *
       * <code>string vault_address = 5;</code>
       * @param value The vaultAddress to set.
       * @return This builder for chaining.
       */
      public Builder setVaultAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setVaultAddress(value);
        return this;
      }
      /**
       * <pre>
       * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
       * </pre>
       *
       * <code>string vault_address = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVaultAddress() {
        copyOnWrite();
        instance.clearVaultAddress();
        return this;
      }
      /**
       * <pre>
       * ThorChainSwap vault, on the source chain. Should be queried afresh, as it may change
       * </pre>
       *
       * <code>string vault_address = 5;</code>
       * @param value The bytes for vaultAddress to set.
       * @return This builder for chaining.
       */
      public Builder setVaultAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVaultAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * ThorChain router, only in case of Ethereum source network
       * </pre>
       *
       * <code>string router_address = 6;</code>
       * @return The routerAddress.
       */
      @java.lang.Override
      public java.lang.String getRouterAddress() {
        return instance.getRouterAddress();
      }
      /**
       * <pre>
       * ThorChain router, only in case of Ethereum source network
       * </pre>
       *
       * <code>string router_address = 6;</code>
       * @return The bytes for routerAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRouterAddressBytes() {
        return instance.getRouterAddressBytes();
      }
      /**
       * <pre>
       * ThorChain router, only in case of Ethereum source network
       * </pre>
       *
       * <code>string router_address = 6;</code>
       * @param value The routerAddress to set.
       * @return This builder for chaining.
       */
      public Builder setRouterAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setRouterAddress(value);
        return this;
      }
      /**
       * <pre>
       * ThorChain router, only in case of Ethereum source network
       * </pre>
       *
       * <code>string router_address = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRouterAddress() {
        copyOnWrite();
        instance.clearRouterAddress();
        return this;
      }
      /**
       * <pre>
       * ThorChain router, only in case of Ethereum source network
       * </pre>
       *
       * <code>string router_address = 6;</code>
       * @param value The bytes for routerAddress to set.
       * @return This builder for chaining.
       */
      public Builder setRouterAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRouterAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       * The source amount, integer as string, in the smallest native unit of the chain
       * </pre>
       *
       * <code>string from_amount = 7;</code>
       * @return The fromAmount.
       */
      @java.lang.Override
      public java.lang.String getFromAmount() {
        return instance.getFromAmount();
      }
      /**
       * <pre>
       * The source amount, integer as string, in the smallest native unit of the chain
       * </pre>
       *
       * <code>string from_amount = 7;</code>
       * @return The bytes for fromAmount.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFromAmountBytes() {
        return instance.getFromAmountBytes();
      }
      /**
       * <pre>
       * The source amount, integer as string, in the smallest native unit of the chain
       * </pre>
       *
       * <code>string from_amount = 7;</code>
       * @param value The fromAmount to set.
       * @return This builder for chaining.
       */
      public Builder setFromAmount(
          java.lang.String value) {
        copyOnWrite();
        instance.setFromAmount(value);
        return this;
      }
      /**
       * <pre>
       * The source amount, integer as string, in the smallest native unit of the chain
       * </pre>
       *
       * <code>string from_amount = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromAmount() {
        copyOnWrite();
        instance.clearFromAmount();
        return this;
      }
      /**
       * <pre>
       * The source amount, integer as string, in the smallest native unit of the chain
       * </pre>
       *
       * <code>string from_amount = 7;</code>
       * @param value The bytes for fromAmount to set.
       * @return This builder for chaining.
       */
      public Builder setFromAmountBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFromAmountBytes(value);
        return this;
      }

      /**
       * <pre>
       * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
       * </pre>
       *
       * <code>string to_amount_limit = 8;</code>
       * @return The toAmountLimit.
       */
      @java.lang.Override
      public java.lang.String getToAmountLimit() {
        return instance.getToAmountLimit();
      }
      /**
       * <pre>
       * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
       * </pre>
       *
       * <code>string to_amount_limit = 8;</code>
       * @return The bytes for toAmountLimit.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToAmountLimitBytes() {
        return instance.getToAmountLimitBytes();
      }
      /**
       * <pre>
       * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
       * </pre>
       *
       * <code>string to_amount_limit = 8;</code>
       * @param value The toAmountLimit to set.
       * @return This builder for chaining.
       */
      public Builder setToAmountLimit(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAmountLimit(value);
        return this;
      }
      /**
       * <pre>
       * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
       * </pre>
       *
       * <code>string to_amount_limit = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearToAmountLimit() {
        copyOnWrite();
        instance.clearToAmountLimit();
        return this;
      }
      /**
       * <pre>
       * The minimum accepted destination amount.  Actual destination amount will depend on current rates, limit amount can be used to prevent using very unfavorable rates.
       * </pre>
       *
       * <code>string to_amount_limit = 8;</code>
       * @param value The bytes for toAmountLimit to set.
       * @return This builder for chaining.
       */
      public Builder setToAmountLimitBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAmountLimitBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.THORChainSwap.Proto.SwapInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.THORChainSwap.SwapInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "fromChain_",
              "fromAddress_",
              "toAsset_",
              "toAddress_",
              "vaultAddress_",
              "routerAddress_",
              "fromAmount_",
              "toAmountLimit_",
            };
            java.lang.String info =
                "\u0000\b\u0000\u0000\u0001\b\b\u0000\u0000\u0000\u0001\f\u0002\u0208\u0003\t\u0004" +
                "\u0208\u0005\u0208\u0006\u0208\u0007\u0208\b\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.THORChainSwap.SwapInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.THORChainSwap.SwapInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.THORChainSwap.SwapInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.THORChainSwap.Proto.SwapInput)
    private static final wallet.core.jni.proto.THORChainSwap.SwapInput DEFAULT_INSTANCE;
    static {
      SwapInput defaultInstance = new SwapInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SwapInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.THORChainSwap.SwapInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SwapInput> PARSER;

    public static com.google.protobuf.Parser<SwapInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SwapOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.THORChainSwap.Proto.SwapOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The enum numeric value on the wire for fromChain.
     */
    int getFromChainValue();
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The fromChain.
     */
    wallet.core.jni.proto.THORChainSwap.Chain getFromChain();

    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     * @return The enum numeric value on the wire for toChain.
     */
    int getToChainValue();
    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     * @return The toChain.
     */
    wallet.core.jni.proto.THORChainSwap.Chain getToChain();

    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     * @return Whether the error field is set.
     */
    boolean hasError();
    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     * @return The error.
     */
    wallet.core.jni.proto.THORChainSwap.Error getError();

    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     * @return Whether the bitcoin field is set.
     */
    boolean hasBitcoin();
    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     * @return The bitcoin.
     */
    wallet.core.jni.proto.Bitcoin.SigningInput getBitcoin();

    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     * @return Whether the ethereum field is set.
     */
    boolean hasEthereum();
    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     * @return The ethereum.
     */
    wallet.core.jni.proto.Ethereum.SigningInput getEthereum();

    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     * @return Whether the binance field is set.
     */
    boolean hasBinance();
    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     * @return The binance.
     */
    wallet.core.jni.proto.Binance.SigningInput getBinance();

    public wallet.core.jni.proto.THORChainSwap.SwapOutput.SigningInputOneofCase getSigningInputOneofCase();
  }
  /**
   * <pre>
   * Result of the swap, a SigningInput struct for the specific chain
   * </pre>
   *
   * Protobuf type {@code TW.THORChainSwap.Proto.SwapOutput}
   */
  public  static final class SwapOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SwapOutput, SwapOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.THORChainSwap.Proto.SwapOutput)
      SwapOutputOrBuilder {
    private SwapOutput() {
    }
    private int signingInputOneofCase_ = 0;
    private java.lang.Object signingInputOneof_;
    public enum SigningInputOneofCase {
      BITCOIN(4),
      ETHEREUM(5),
      BINANCE(6),
      SIGNINGINPUTONEOF_NOT_SET(0);
      private final int value;
      private SigningInputOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SigningInputOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static SigningInputOneofCase forNumber(int value) {
        switch (value) {
          case 4: return BITCOIN;
          case 5: return ETHEREUM;
          case 6: return BINANCE;
          case 0: return SIGNINGINPUTONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public SigningInputOneofCase
    getSigningInputOneofCase() {
      return SigningInputOneofCase.forNumber(
          signingInputOneofCase_);
    }

    private void clearSigningInputOneof() {
      signingInputOneofCase_ = 0;
      signingInputOneof_ = null;
    }

    public static final int FROM_CHAIN_FIELD_NUMBER = 1;
    private int fromChain_;
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The enum numeric value on the wire for fromChain.
     */
    @java.lang.Override
    public int getFromChainValue() {
      return fromChain_;
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @return The fromChain.
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.Chain getFromChain() {
      wallet.core.jni.proto.THORChainSwap.Chain result = wallet.core.jni.proto.THORChainSwap.Chain.forNumber(fromChain_);
      return result == null ? wallet.core.jni.proto.THORChainSwap.Chain.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @param value The enum numeric value on the wire for fromChain to set.
     */
    private void setFromChainValue(int value) {
        fromChain_ = value;
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     * @param value The fromChain to set.
     */
    private void setFromChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
      fromChain_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Source chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
     */
    private void clearFromChain() {
      
      fromChain_ = 0;
    }

    public static final int TO_CHAIN_FIELD_NUMBER = 2;
    private int toChain_;
    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     * @return The enum numeric value on the wire for toChain.
     */
    @java.lang.Override
    public int getToChainValue() {
      return toChain_;
    }
    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     * @return The toChain.
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.Chain getToChain() {
      wallet.core.jni.proto.THORChainSwap.Chain result = wallet.core.jni.proto.THORChainSwap.Chain.forNumber(toChain_);
      return result == null ? wallet.core.jni.proto.THORChainSwap.Chain.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     * @param value The enum numeric value on the wire for toChain to set.
     */
    private void setToChainValue(int value) {
        toChain_ = value;
    }
    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     * @param value The toChain to set.
     */
    private void setToChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
      toChain_ = value.getNumber();
      
    }
    /**
     * <pre>
     * Destination chain
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
     */
    private void clearToChain() {
      
      toChain_ = 0;
    }

    public static final int ERROR_FIELD_NUMBER = 3;
    private wallet.core.jni.proto.THORChainSwap.Error error_;
    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     */
    @java.lang.Override
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.THORChainSwap.Error getError() {
      return error_ == null ? wallet.core.jni.proto.THORChainSwap.Error.getDefaultInstance() : error_;
    }
    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     */
    private void setError(wallet.core.jni.proto.THORChainSwap.Error value) {
      value.getClass();
  error_ = value;
      
      }
    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeError(wallet.core.jni.proto.THORChainSwap.Error value) {
      value.getClass();
  if (error_ != null &&
          error_ != wallet.core.jni.proto.THORChainSwap.Error.getDefaultInstance()) {
        error_ =
          wallet.core.jni.proto.THORChainSwap.Error.newBuilder(error_).mergeFrom(value).buildPartial();
      } else {
        error_ = value;
      }
      
    }
    /**
     * <pre>
     * Error code, filled in case of error, OK/empty on success
     * </pre>
     *
     * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
     */
    private void clearError() {  error_ = null;
      
    }

    public static final int BITCOIN_FIELD_NUMBER = 4;
    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     */
    @java.lang.Override
    public boolean hasBitcoin() {
      return signingInputOneofCase_ == 4;
    }
    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.SigningInput getBitcoin() {
      if (signingInputOneofCase_ == 4) {
         return (wallet.core.jni.proto.Bitcoin.SigningInput) signingInputOneof_;
      }
      return wallet.core.jni.proto.Bitcoin.SigningInput.getDefaultInstance();
    }
    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     */
    private void setBitcoin(wallet.core.jni.proto.Bitcoin.SigningInput value) {
      value.getClass();
  signingInputOneof_ = value;
      signingInputOneofCase_ = 4;
    }
    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     */
    private void mergeBitcoin(wallet.core.jni.proto.Bitcoin.SigningInput value) {
      value.getClass();
  if (signingInputOneofCase_ == 4 &&
          signingInputOneof_ != wallet.core.jni.proto.Bitcoin.SigningInput.getDefaultInstance()) {
        signingInputOneof_ = wallet.core.jni.proto.Bitcoin.SigningInput.newBuilder((wallet.core.jni.proto.Bitcoin.SigningInput) signingInputOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        signingInputOneof_ = value;
      }
      signingInputOneofCase_ = 4;
    }
    /**
     * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
     */
    private void clearBitcoin() {
      if (signingInputOneofCase_ == 4) {
        signingInputOneofCase_ = 0;
        signingInputOneof_ = null;
      }
    }

    public static final int ETHEREUM_FIELD_NUMBER = 5;
    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     */
    @java.lang.Override
    public boolean hasEthereum() {
      return signingInputOneofCase_ == 5;
    }
    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Ethereum.SigningInput getEthereum() {
      if (signingInputOneofCase_ == 5) {
         return (wallet.core.jni.proto.Ethereum.SigningInput) signingInputOneof_;
      }
      return wallet.core.jni.proto.Ethereum.SigningInput.getDefaultInstance();
    }
    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     */
    private void setEthereum(wallet.core.jni.proto.Ethereum.SigningInput value) {
      value.getClass();
  signingInputOneof_ = value;
      signingInputOneofCase_ = 5;
    }
    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     */
    private void mergeEthereum(wallet.core.jni.proto.Ethereum.SigningInput value) {
      value.getClass();
  if (signingInputOneofCase_ == 5 &&
          signingInputOneof_ != wallet.core.jni.proto.Ethereum.SigningInput.getDefaultInstance()) {
        signingInputOneof_ = wallet.core.jni.proto.Ethereum.SigningInput.newBuilder((wallet.core.jni.proto.Ethereum.SigningInput) signingInputOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        signingInputOneof_ = value;
      }
      signingInputOneofCase_ = 5;
    }
    /**
     * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
     */
    private void clearEthereum() {
      if (signingInputOneofCase_ == 5) {
        signingInputOneofCase_ = 0;
        signingInputOneof_ = null;
      }
    }

    public static final int BINANCE_FIELD_NUMBER = 6;
    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     */
    @java.lang.Override
    public boolean hasBinance() {
      return signingInputOneofCase_ == 6;
    }
    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.Binance.SigningInput getBinance() {
      if (signingInputOneofCase_ == 6) {
         return (wallet.core.jni.proto.Binance.SigningInput) signingInputOneof_;
      }
      return wallet.core.jni.proto.Binance.SigningInput.getDefaultInstance();
    }
    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     */
    private void setBinance(wallet.core.jni.proto.Binance.SigningInput value) {
      value.getClass();
  signingInputOneof_ = value;
      signingInputOneofCase_ = 6;
    }
    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     */
    private void mergeBinance(wallet.core.jni.proto.Binance.SigningInput value) {
      value.getClass();
  if (signingInputOneofCase_ == 6 &&
          signingInputOneof_ != wallet.core.jni.proto.Binance.SigningInput.getDefaultInstance()) {
        signingInputOneof_ = wallet.core.jni.proto.Binance.SigningInput.newBuilder((wallet.core.jni.proto.Binance.SigningInput) signingInputOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        signingInputOneof_ = value;
      }
      signingInputOneofCase_ = 6;
    }
    /**
     * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
     */
    private void clearBinance() {
      if (signingInputOneofCase_ == 6) {
        signingInputOneofCase_ = 0;
        signingInputOneof_ = null;
      }
    }

    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.THORChainSwap.SwapOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.THORChainSwap.SwapOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result of the swap, a SigningInput struct for the specific chain
     * </pre>
     *
     * Protobuf type {@code TW.THORChainSwap.Proto.SwapOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.THORChainSwap.SwapOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.THORChainSwap.Proto.SwapOutput)
        wallet.core.jni.proto.THORChainSwap.SwapOutputOrBuilder {
      // Construct using wallet.core.jni.proto.THORChainSwap.SwapOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public SigningInputOneofCase
          getSigningInputOneofCase() {
        return instance.getSigningInputOneofCase();
      }

      public Builder clearSigningInputOneof() {
        copyOnWrite();
        instance.clearSigningInputOneof();
        return this;
      }


      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @return The enum numeric value on the wire for fromChain.
       */
      @java.lang.Override
      public int getFromChainValue() {
        return instance.getFromChainValue();
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @param value The fromChain to set.
       * @return This builder for chaining.
       */
      public Builder setFromChainValue(int value) {
        copyOnWrite();
        instance.setFromChainValue(value);
        return this;
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @return The fromChain.
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.Chain getFromChain() {
        return instance.getFromChain();
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @param value The enum numeric value on the wire for fromChain to set.
       * @return This builder for chaining.
       */
      public Builder setFromChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
        copyOnWrite();
        instance.setFromChain(value);
        return this;
      }
      /**
       * <pre>
       * Source chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain from_chain = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromChain() {
        copyOnWrite();
        instance.clearFromChain();
        return this;
      }

      /**
       * <pre>
       * Destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
       * @return The enum numeric value on the wire for toChain.
       */
      @java.lang.Override
      public int getToChainValue() {
        return instance.getToChainValue();
      }
      /**
       * <pre>
       * Destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
       * @param value The toChain to set.
       * @return This builder for chaining.
       */
      public Builder setToChainValue(int value) {
        copyOnWrite();
        instance.setToChainValue(value);
        return this;
      }
      /**
       * <pre>
       * Destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
       * @return The toChain.
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.Chain getToChain() {
        return instance.getToChain();
      }
      /**
       * <pre>
       * Destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
       * @param value The enum numeric value on the wire for toChain to set.
       * @return This builder for chaining.
       */
      public Builder setToChain(wallet.core.jni.proto.THORChainSwap.Chain value) {
        copyOnWrite();
        instance.setToChain(value);
        return this;
      }
      /**
       * <pre>
       * Destination chain
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Chain to_chain = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearToChain() {
        copyOnWrite();
        instance.clearToChain();
        return this;
      }

      /**
       * <pre>
       * Error code, filled in case of error, OK/empty on success
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
       */
      @java.lang.Override
      public boolean hasError() {
        return instance.hasError();
      }
      /**
       * <pre>
       * Error code, filled in case of error, OK/empty on success
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.THORChainSwap.Error getError() {
        return instance.getError();
      }
      /**
       * <pre>
       * Error code, filled in case of error, OK/empty on success
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
       */
      public Builder setError(wallet.core.jni.proto.THORChainSwap.Error value) {
        copyOnWrite();
        instance.setError(value);
        return this;
        }
      /**
       * <pre>
       * Error code, filled in case of error, OK/empty on success
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
       */
      public Builder setError(
          wallet.core.jni.proto.THORChainSwap.Error.Builder builderForValue) {
        copyOnWrite();
        instance.setError(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Error code, filled in case of error, OK/empty on success
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
       */
      public Builder mergeError(wallet.core.jni.proto.THORChainSwap.Error value) {
        copyOnWrite();
        instance.mergeError(value);
        return this;
      }
      /**
       * <pre>
       * Error code, filled in case of error, OK/empty on success
       * </pre>
       *
       * <code>.TW.THORChainSwap.Proto.Error error = 3;</code>
       */
      public Builder clearError() {  copyOnWrite();
        instance.clearError();
        return this;
      }

      /**
       * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
       */
      @java.lang.Override
      public boolean hasBitcoin() {
        return instance.hasBitcoin();
      }
      /**
       * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningInput getBitcoin() {
        return instance.getBitcoin();
      }
      /**
       * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
       */
      public Builder setBitcoin(wallet.core.jni.proto.Bitcoin.SigningInput value) {
        copyOnWrite();
        instance.setBitcoin(value);
        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
       */
      public Builder setBitcoin(
          wallet.core.jni.proto.Bitcoin.SigningInput.Builder builderForValue) {
        copyOnWrite();
        instance.setBitcoin(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
       */
      public Builder mergeBitcoin(wallet.core.jni.proto.Bitcoin.SigningInput value) {
        copyOnWrite();
        instance.mergeBitcoin(value);
        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.SigningInput bitcoin = 4;</code>
       */
      public Builder clearBitcoin() {
        copyOnWrite();
        instance.clearBitcoin();
        return this;
      }

      /**
       * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
       */
      @java.lang.Override
      public boolean hasEthereum() {
        return instance.hasEthereum();
      }
      /**
       * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Ethereum.SigningInput getEthereum() {
        return instance.getEthereum();
      }
      /**
       * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
       */
      public Builder setEthereum(wallet.core.jni.proto.Ethereum.SigningInput value) {
        copyOnWrite();
        instance.setEthereum(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
       */
      public Builder setEthereum(
          wallet.core.jni.proto.Ethereum.SigningInput.Builder builderForValue) {
        copyOnWrite();
        instance.setEthereum(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
       */
      public Builder mergeEthereum(wallet.core.jni.proto.Ethereum.SigningInput value) {
        copyOnWrite();
        instance.mergeEthereum(value);
        return this;
      }
      /**
       * <code>.TW.Ethereum.Proto.SigningInput ethereum = 5;</code>
       */
      public Builder clearEthereum() {
        copyOnWrite();
        instance.clearEthereum();
        return this;
      }

      /**
       * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
       */
      @java.lang.Override
      public boolean hasBinance() {
        return instance.hasBinance();
      }
      /**
       * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.Binance.SigningInput getBinance() {
        return instance.getBinance();
      }
      /**
       * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
       */
      public Builder setBinance(wallet.core.jni.proto.Binance.SigningInput value) {
        copyOnWrite();
        instance.setBinance(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
       */
      public Builder setBinance(
          wallet.core.jni.proto.Binance.SigningInput.Builder builderForValue) {
        copyOnWrite();
        instance.setBinance(builderForValue.build());
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
       */
      public Builder mergeBinance(wallet.core.jni.proto.Binance.SigningInput value) {
        copyOnWrite();
        instance.mergeBinance(value);
        return this;
      }
      /**
       * <code>.TW.Binance.Proto.SigningInput binance = 6;</code>
       */
      public Builder clearBinance() {
        copyOnWrite();
        instance.clearBinance();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.THORChainSwap.Proto.SwapOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.THORChainSwap.SwapOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "signingInputOneof_",
              "signingInputOneofCase_",
              "fromChain_",
              "toChain_",
              "error_",
              wallet.core.jni.proto.Bitcoin.SigningInput.class,
              wallet.core.jni.proto.Ethereum.SigningInput.class,
              wallet.core.jni.proto.Binance.SigningInput.class,
            };
            java.lang.String info =
                "\u0000\u0006\u0001\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\f\u0002\f\u0003" +
                "\t\u0004<\u0000\u0005<\u0000\u0006<\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.THORChainSwap.SwapOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.THORChainSwap.SwapOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.THORChainSwap.SwapOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.THORChainSwap.Proto.SwapOutput)
    private static final wallet.core.jni.proto.THORChainSwap.SwapOutput DEFAULT_INSTANCE;
    static {
      SwapOutput defaultInstance = new SwapOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SwapOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.THORChainSwap.SwapOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SwapOutput> PARSER;

    public static com.google.protobuf.Parser<SwapOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
