// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VeChain.proto

package wallet.core.jni.proto;

public final class VeChain {
  private VeChain() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ClauseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.VeChain.Proto.Clause)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     * @return The to.
     */
    java.lang.String getTo();
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     * @return The bytes for to.
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <pre>
     *&#47; Transaction amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes value = 2;</code>
     * @return The value.
     */
    com.google.protobuf.ByteString getValue();

    /**
     * <pre>
     *&#47; Payload data.
     * </pre>
     *
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * A clause, between a sender and destination
   * </pre>
   *
   * Protobuf type {@code TW.VeChain.Proto.Clause}
   */
  public  static final class Clause extends
      com.google.protobuf.GeneratedMessageLite<
          Clause, Clause.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.VeChain.Proto.Clause)
      ClauseOrBuilder {
    private Clause() {
      to_ = "";
      value_ = com.google.protobuf.ByteString.EMPTY;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int TO_FIELD_NUMBER = 1;
    private java.lang.String to_;
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     * @return The to.
     */
    @java.lang.Override
    public java.lang.String getTo() {
      return to_;
    }
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     * @return The bytes for to.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(to_);
    }
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     * @param value The to to set.
     */
    private void setTo(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      to_ = value;
    }
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     */
    private void clearTo() {
      
      to_ = getDefaultInstance().getTo();
    }
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     * @param value The bytes for to to set.
     */
    private void setToBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      to_ = value.toStringUtf8();
      
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString value_;
    /**
     * <pre>
     *&#47; Transaction amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }
    /**
     * <pre>
     *&#47; Transaction amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes value = 2;</code>
     * @param value The value to set.
     */
    private void setValue(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      value_ = value;
    }
    /**
     * <pre>
     *&#47; Transaction amount (uint256, serialized little endian)
     * </pre>
     *
     * <code>bytes value = 2;</code>
     */
    private void clearValue() {
      
      value_ = getDefaultInstance().getValue();
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     *&#47; Payload data.
     * </pre>
     *
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     *&#47; Payload data.
     * </pre>
     *
     * <code>bytes data = 3;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      data_ = value;
    }
    /**
     * <pre>
     *&#47; Payload data.
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.VeChain.Clause prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A clause, between a sender and destination
     * </pre>
     *
     * Protobuf type {@code TW.VeChain.Proto.Clause}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.VeChain.Clause, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.VeChain.Proto.Clause)
        wallet.core.jni.proto.VeChain.ClauseOrBuilder {
      // Construct using wallet.core.jni.proto.VeChain.Clause.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return The to.
       */
      @java.lang.Override
      public java.lang.String getTo() {
        return instance.getTo();
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return The bytes for to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToBytes() {
        return instance.getToBytes();
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(
          java.lang.String value) {
        copyOnWrite();
        instance.setTo(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        copyOnWrite();
        instance.clearTo();
        return this;
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       * @param value The bytes for to to set.
       * @return This builder for chaining.
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToBytes(value);
        return this;
      }

      /**
       * <pre>
       *&#47; Transaction amount (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return instance.getValue();
      }
      /**
       * <pre>
       *&#47; Transaction amount (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Transaction amount (uint256, serialized little endian)
       * </pre>
       *
       * <code>bytes value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }

      /**
       * <pre>
       *&#47; Payload data.
       * </pre>
       *
       * <code>bytes data = 3;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       *&#47; Payload data.
       * </pre>
       *
       * <code>bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Payload data.
       * </pre>
       *
       * <code>bytes data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.VeChain.Proto.Clause)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.VeChain.Clause();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "to_",
              "value_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\n" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.VeChain.Clause> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.VeChain.Clause.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.VeChain.Clause>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.VeChain.Proto.Clause)
    private static final wallet.core.jni.proto.VeChain.Clause DEFAULT_INSTANCE;
    static {
      Clause defaultInstance = new Clause();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Clause.class, defaultInstance);
    }

    public static wallet.core.jni.proto.VeChain.Clause getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Clause> PARSER;

    public static com.google.protobuf.Parser<Clause> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.VeChain.Proto.SigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
     * </pre>
     *
     * <code>uint32 chain_tag = 1;</code>
     * @return The chainTag.
     */
    int getChainTag();

    /**
     * <pre>
     *&#47; Reference to a specific block.
     * </pre>
     *
     * <code>uint64 block_ref = 2;</code>
     * @return The blockRef.
     */
    long getBlockRef();

    /**
     * <pre>
     *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
     * </pre>
     *
     * <code>uint32 expiration = 3;</code>
     * @return The expiration.
     */
    int getExpiration();

    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    java.util.List<wallet.core.jni.proto.VeChain.Clause> 
        getClausesList();
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    wallet.core.jni.proto.VeChain.Clause getClauses(int index);
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    int getClausesCount();

    /**
     * <pre>
     *&#47; Coefficient used to calculate the gas price for the transaction.
     * </pre>
     *
     * <code>uint32 gas_price_coef = 5;</code>
     * @return The gasPriceCoef.
     */
    int getGasPriceCoef();

    /**
     * <pre>
     *&#47; Maximum amount of gas allowed to pay for the transaction.
     * </pre>
     *
     * <code>uint64 gas = 6;</code>
     * @return The gas.
     */
    long getGas();

    /**
     * <pre>
     *&#47; ID of the transaction on which the current transaction depends.
     * </pre>
     *
     * <code>bytes depends_on = 7;</code>
     * @return The dependsOn.
     */
    com.google.protobuf.ByteString getDependsOn();

    /**
     * <pre>
     *&#47; Number set by user.
     * </pre>
     *
     * <code>uint64 nonce = 8;</code>
     * @return The nonce.
     */
    long getNonce();

    /**
     * <pre>
     *&#47; The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @return The privateKey.
     */
    com.google.protobuf.ByteString getPrivateKey();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.VeChain.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningInput, SigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.VeChain.Proto.SigningInput)
      SigningInputOrBuilder {
    private SigningInput() {
      clauses_ = emptyProtobufList();
      dependsOn_ = com.google.protobuf.ByteString.EMPTY;
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int CHAIN_TAG_FIELD_NUMBER = 1;
    private int chainTag_;
    /**
     * <pre>
     *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
     * </pre>
     *
     * <code>uint32 chain_tag = 1;</code>
     * @return The chainTag.
     */
    @java.lang.Override
    public int getChainTag() {
      return chainTag_;
    }
    /**
     * <pre>
     *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
     * </pre>
     *
     * <code>uint32 chain_tag = 1;</code>
     * @param value The chainTag to set.
     */
    private void setChainTag(int value) {
      
      chainTag_ = value;
    }
    /**
     * <pre>
     *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
     * </pre>
     *
     * <code>uint32 chain_tag = 1;</code>
     */
    private void clearChainTag() {
      
      chainTag_ = 0;
    }

    public static final int BLOCK_REF_FIELD_NUMBER = 2;
    private long blockRef_;
    /**
     * <pre>
     *&#47; Reference to a specific block.
     * </pre>
     *
     * <code>uint64 block_ref = 2;</code>
     * @return The blockRef.
     */
    @java.lang.Override
    public long getBlockRef() {
      return blockRef_;
    }
    /**
     * <pre>
     *&#47; Reference to a specific block.
     * </pre>
     *
     * <code>uint64 block_ref = 2;</code>
     * @param value The blockRef to set.
     */
    private void setBlockRef(long value) {
      
      blockRef_ = value;
    }
    /**
     * <pre>
     *&#47; Reference to a specific block.
     * </pre>
     *
     * <code>uint64 block_ref = 2;</code>
     */
    private void clearBlockRef() {
      
      blockRef_ = 0L;
    }

    public static final int EXPIRATION_FIELD_NUMBER = 3;
    private int expiration_;
    /**
     * <pre>
     *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
     * </pre>
     *
     * <code>uint32 expiration = 3;</code>
     * @return The expiration.
     */
    @java.lang.Override
    public int getExpiration() {
      return expiration_;
    }
    /**
     * <pre>
     *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
     * </pre>
     *
     * <code>uint32 expiration = 3;</code>
     * @param value The expiration to set.
     */
    private void setExpiration(int value) {
      
      expiration_ = value;
    }
    /**
     * <pre>
     *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
     * </pre>
     *
     * <code>uint32 expiration = 3;</code>
     */
    private void clearExpiration() {
      
      expiration_ = 0;
    }

    public static final int CLAUSES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.VeChain.Clause> clauses_;
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    @java.lang.Override
    public java.util.List<wallet.core.jni.proto.VeChain.Clause> getClausesList() {
      return clauses_;
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.VeChain.ClauseOrBuilder> 
        getClausesOrBuilderList() {
      return clauses_;
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    @java.lang.Override
    public int getClausesCount() {
      return clauses_.size();
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    @java.lang.Override
    public wallet.core.jni.proto.VeChain.Clause getClauses(int index) {
      return clauses_.get(index);
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public wallet.core.jni.proto.VeChain.ClauseOrBuilder getClausesOrBuilder(
        int index) {
      return clauses_.get(index);
    }
    private void ensureClausesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<wallet.core.jni.proto.VeChain.Clause> tmp = clauses_;
      if (!tmp.isModifiable()) {
        clauses_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    private void setClauses(
        int index, wallet.core.jni.proto.VeChain.Clause value) {
      value.getClass();
  ensureClausesIsMutable();
      clauses_.set(index, value);
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    private void addClauses(wallet.core.jni.proto.VeChain.Clause value) {
      value.getClass();
  ensureClausesIsMutable();
      clauses_.add(value);
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    private void addClauses(
        int index, wallet.core.jni.proto.VeChain.Clause value) {
      value.getClass();
  ensureClausesIsMutable();
      clauses_.add(index, value);
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    private void addAllClauses(
        java.lang.Iterable<? extends wallet.core.jni.proto.VeChain.Clause> values) {
      ensureClausesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, clauses_);
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    private void clearClauses() {
      clauses_ = emptyProtobufList();
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    private void removeClauses(int index) {
      ensureClausesIsMutable();
      clauses_.remove(index);
    }

    public static final int GAS_PRICE_COEF_FIELD_NUMBER = 5;
    private int gasPriceCoef_;
    /**
     * <pre>
     *&#47; Coefficient used to calculate the gas price for the transaction.
     * </pre>
     *
     * <code>uint32 gas_price_coef = 5;</code>
     * @return The gasPriceCoef.
     */
    @java.lang.Override
    public int getGasPriceCoef() {
      return gasPriceCoef_;
    }
    /**
     * <pre>
     *&#47; Coefficient used to calculate the gas price for the transaction.
     * </pre>
     *
     * <code>uint32 gas_price_coef = 5;</code>
     * @param value The gasPriceCoef to set.
     */
    private void setGasPriceCoef(int value) {
      
      gasPriceCoef_ = value;
    }
    /**
     * <pre>
     *&#47; Coefficient used to calculate the gas price for the transaction.
     * </pre>
     *
     * <code>uint32 gas_price_coef = 5;</code>
     */
    private void clearGasPriceCoef() {
      
      gasPriceCoef_ = 0;
    }

    public static final int GAS_FIELD_NUMBER = 6;
    private long gas_;
    /**
     * <pre>
     *&#47; Maximum amount of gas allowed to pay for the transaction.
     * </pre>
     *
     * <code>uint64 gas = 6;</code>
     * @return The gas.
     */
    @java.lang.Override
    public long getGas() {
      return gas_;
    }
    /**
     * <pre>
     *&#47; Maximum amount of gas allowed to pay for the transaction.
     * </pre>
     *
     * <code>uint64 gas = 6;</code>
     * @param value The gas to set.
     */
    private void setGas(long value) {
      
      gas_ = value;
    }
    /**
     * <pre>
     *&#47; Maximum amount of gas allowed to pay for the transaction.
     * </pre>
     *
     * <code>uint64 gas = 6;</code>
     */
    private void clearGas() {
      
      gas_ = 0L;
    }

    public static final int DEPENDS_ON_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString dependsOn_;
    /**
     * <pre>
     *&#47; ID of the transaction on which the current transaction depends.
     * </pre>
     *
     * <code>bytes depends_on = 7;</code>
     * @return The dependsOn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDependsOn() {
      return dependsOn_;
    }
    /**
     * <pre>
     *&#47; ID of the transaction on which the current transaction depends.
     * </pre>
     *
     * <code>bytes depends_on = 7;</code>
     * @param value The dependsOn to set.
     */
    private void setDependsOn(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      dependsOn_ = value;
    }
    /**
     * <pre>
     *&#47; ID of the transaction on which the current transaction depends.
     * </pre>
     *
     * <code>bytes depends_on = 7;</code>
     */
    private void clearDependsOn() {
      
      dependsOn_ = getDefaultInstance().getDependsOn();
    }

    public static final int NONCE_FIELD_NUMBER = 8;
    private long nonce_;
    /**
     * <pre>
     *&#47; Number set by user.
     * </pre>
     *
     * <code>uint64 nonce = 8;</code>
     * @return The nonce.
     */
    @java.lang.Override
    public long getNonce() {
      return nonce_;
    }
    /**
     * <pre>
     *&#47; Number set by user.
     * </pre>
     *
     * <code>uint64 nonce = 8;</code>
     * @param value The nonce to set.
     */
    private void setNonce(long value) {
      
      nonce_ = value;
    }
    /**
     * <pre>
     *&#47; Number set by user.
     * </pre>
     *
     * <code>uint64 nonce = 8;</code>
     */
    private void clearNonce() {
      
      nonce_ = 0L;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     *&#47; The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <pre>
     *&#47; The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     * @param value The privateKey to set.
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      privateKey_ = value;
    }
    /**
     * <pre>
     *&#47; The secret private key used for signing (32 bytes).
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.VeChain.SigningInput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.VeChain.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.VeChain.SigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.VeChain.Proto.SigningInput)
        wallet.core.jni.proto.VeChain.SigningInputOrBuilder {
      // Construct using wallet.core.jni.proto.VeChain.SigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
       * </pre>
       *
       * <code>uint32 chain_tag = 1;</code>
       * @return The chainTag.
       */
      @java.lang.Override
      public int getChainTag() {
        return instance.getChainTag();
      }
      /**
       * <pre>
       *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
       * </pre>
       *
       * <code>uint32 chain_tag = 1;</code>
       * @param value The chainTag to set.
       * @return This builder for chaining.
       */
      public Builder setChainTag(int value) {
        copyOnWrite();
        instance.setChainTag(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
       * </pre>
       *
       * <code>uint32 chain_tag = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainTag() {
        copyOnWrite();
        instance.clearChainTag();
        return this;
      }

      /**
       * <pre>
       *&#47; Reference to a specific block.
       * </pre>
       *
       * <code>uint64 block_ref = 2;</code>
       * @return The blockRef.
       */
      @java.lang.Override
      public long getBlockRef() {
        return instance.getBlockRef();
      }
      /**
       * <pre>
       *&#47; Reference to a specific block.
       * </pre>
       *
       * <code>uint64 block_ref = 2;</code>
       * @param value The blockRef to set.
       * @return This builder for chaining.
       */
      public Builder setBlockRef(long value) {
        copyOnWrite();
        instance.setBlockRef(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Reference to a specific block.
       * </pre>
       *
       * <code>uint64 block_ref = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockRef() {
        copyOnWrite();
        instance.clearBlockRef();
        return this;
      }

      /**
       * <pre>
       *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
       * </pre>
       *
       * <code>uint32 expiration = 3;</code>
       * @return The expiration.
       */
      @java.lang.Override
      public int getExpiration() {
        return instance.getExpiration();
      }
      /**
       * <pre>
       *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
       * </pre>
       *
       * <code>uint32 expiration = 3;</code>
       * @param value The expiration to set.
       * @return This builder for chaining.
       */
      public Builder setExpiration(int value) {
        copyOnWrite();
        instance.setExpiration(value);
        return this;
      }
      /**
       * <pre>
       *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
       * </pre>
       *
       * <code>uint32 expiration = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpiration() {
        copyOnWrite();
        instance.clearExpiration();
        return this;
      }

      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      @java.lang.Override
      public java.util.List<wallet.core.jni.proto.VeChain.Clause> getClausesList() {
        return java.util.Collections.unmodifiableList(
            instance.getClausesList());
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      @java.lang.Override
      public int getClausesCount() {
        return instance.getClausesCount();
      }/**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      @java.lang.Override
      public wallet.core.jni.proto.VeChain.Clause getClauses(int index) {
        return instance.getClauses(index);
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder setClauses(
          int index, wallet.core.jni.proto.VeChain.Clause value) {
        copyOnWrite();
        instance.setClauses(index, value);
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder setClauses(
          int index, wallet.core.jni.proto.VeChain.Clause.Builder builderForValue) {
        copyOnWrite();
        instance.setClauses(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(wallet.core.jni.proto.VeChain.Clause value) {
        copyOnWrite();
        instance.addClauses(value);
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(
          int index, wallet.core.jni.proto.VeChain.Clause value) {
        copyOnWrite();
        instance.addClauses(index, value);
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(
          wallet.core.jni.proto.VeChain.Clause.Builder builderForValue) {
        copyOnWrite();
        instance.addClauses(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(
          int index, wallet.core.jni.proto.VeChain.Clause.Builder builderForValue) {
        copyOnWrite();
        instance.addClauses(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addAllClauses(
          java.lang.Iterable<? extends wallet.core.jni.proto.VeChain.Clause> values) {
        copyOnWrite();
        instance.addAllClauses(values);
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder clearClauses() {
        copyOnWrite();
        instance.clearClauses();
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder removeClauses(int index) {
        copyOnWrite();
        instance.removeClauses(index);
        return this;
      }

      /**
       * <pre>
       *&#47; Coefficient used to calculate the gas price for the transaction.
       * </pre>
       *
       * <code>uint32 gas_price_coef = 5;</code>
       * @return The gasPriceCoef.
       */
      @java.lang.Override
      public int getGasPriceCoef() {
        return instance.getGasPriceCoef();
      }
      /**
       * <pre>
       *&#47; Coefficient used to calculate the gas price for the transaction.
       * </pre>
       *
       * <code>uint32 gas_price_coef = 5;</code>
       * @param value The gasPriceCoef to set.
       * @return This builder for chaining.
       */
      public Builder setGasPriceCoef(int value) {
        copyOnWrite();
        instance.setGasPriceCoef(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Coefficient used to calculate the gas price for the transaction.
       * </pre>
       *
       * <code>uint32 gas_price_coef = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasPriceCoef() {
        copyOnWrite();
        instance.clearGasPriceCoef();
        return this;
      }

      /**
       * <pre>
       *&#47; Maximum amount of gas allowed to pay for the transaction.
       * </pre>
       *
       * <code>uint64 gas = 6;</code>
       * @return The gas.
       */
      @java.lang.Override
      public long getGas() {
        return instance.getGas();
      }
      /**
       * <pre>
       *&#47; Maximum amount of gas allowed to pay for the transaction.
       * </pre>
       *
       * <code>uint64 gas = 6;</code>
       * @param value The gas to set.
       * @return This builder for chaining.
       */
      public Builder setGas(long value) {
        copyOnWrite();
        instance.setGas(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Maximum amount of gas allowed to pay for the transaction.
       * </pre>
       *
       * <code>uint64 gas = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGas() {
        copyOnWrite();
        instance.clearGas();
        return this;
      }

      /**
       * <pre>
       *&#47; ID of the transaction on which the current transaction depends.
       * </pre>
       *
       * <code>bytes depends_on = 7;</code>
       * @return The dependsOn.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDependsOn() {
        return instance.getDependsOn();
      }
      /**
       * <pre>
       *&#47; ID of the transaction on which the current transaction depends.
       * </pre>
       *
       * <code>bytes depends_on = 7;</code>
       * @param value The dependsOn to set.
       * @return This builder for chaining.
       */
      public Builder setDependsOn(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDependsOn(value);
        return this;
      }
      /**
       * <pre>
       *&#47; ID of the transaction on which the current transaction depends.
       * </pre>
       *
       * <code>bytes depends_on = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDependsOn() {
        copyOnWrite();
        instance.clearDependsOn();
        return this;
      }

      /**
       * <pre>
       *&#47; Number set by user.
       * </pre>
       *
       * <code>uint64 nonce = 8;</code>
       * @return The nonce.
       */
      @java.lang.Override
      public long getNonce() {
        return instance.getNonce();
      }
      /**
       * <pre>
       *&#47; Number set by user.
       * </pre>
       *
       * <code>uint64 nonce = 8;</code>
       * @param value The nonce to set.
       * @return This builder for chaining.
       */
      public Builder setNonce(long value) {
        copyOnWrite();
        instance.setNonce(value);
        return this;
      }
      /**
       * <pre>
       *&#47; Number set by user.
       * </pre>
       *
       * <code>uint64 nonce = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearNonce() {
        copyOnWrite();
        instance.clearNonce();
        return this;
      }

      /**
       * <pre>
       *&#47; The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @return The privateKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <pre>
       *&#47; The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <pre>
       *&#47; The secret private key used for signing (32 bytes).
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.VeChain.Proto.SigningInput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.VeChain.SigningInput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "chainTag_",
              "blockRef_",
              "expiration_",
              "clauses_",
              wallet.core.jni.proto.VeChain.Clause.class,
              "gasPriceCoef_",
              "gas_",
              "dependsOn_",
              "nonce_",
              "privateKey_",
            };
            java.lang.String info =
                "\u0000\t\u0000\u0000\u0001\t\t\u0000\u0001\u0000\u0001\u000b\u0002\u0003\u0003\u000b" +
                "\u0004\u001b\u0005\u000b\u0006\u0003\u0007\n\b\u0003\t\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.VeChain.SigningInput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.VeChain.SigningInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.VeChain.SigningInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.VeChain.Proto.SigningInput)
    private static final wallet.core.jni.proto.VeChain.SigningInput DEFAULT_INSTANCE;
    static {
      SigningInput defaultInstance = new SigningInput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningInput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.VeChain.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningInput> PARSER;

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.VeChain.Proto.SigningOutput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * Signature.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * Result containing the signed and encoded transaction.
   * </pre>
   *
   * Protobuf type {@code TW.VeChain.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageLite<
          SigningOutput, SigningOutput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.VeChain.Proto.SigningOutput)
      SigningOutputOrBuilder {
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @return The encoded.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     * @param value The encoded to set.
     */
    private void setEncoded(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      encoded_ = value;
    }
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    private void clearEncoded() {
      
      encoded_ = getDefaultInstance().getEncoded();
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * Signature.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }
    /**
     * <pre>
     * Signature.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @param value The signature to set.
     */
    private void setSignature(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      signature_ = value;
    }
    /**
     * <pre>
     * Signature.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     */
    private void clearSignature() {
      
      signature_ = getDefaultInstance().getSignature();
    }

    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.VeChain.SigningOutput prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result containing the signed and encoded transaction.
     * </pre>
     *
     * Protobuf type {@code TW.VeChain.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          wallet.core.jni.proto.VeChain.SigningOutput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.VeChain.Proto.SigningOutput)
        wallet.core.jni.proto.VeChain.SigningOutputOrBuilder {
      // Construct using wallet.core.jni.proto.VeChain.SigningOutput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return The encoded.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncoded() {
        return instance.getEncoded();
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @param value The encoded to set.
       * @return This builder for chaining.
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncoded(value);
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoded() {
        copyOnWrite();
        instance.clearEncoded();
        return this;
      }

      /**
       * <pre>
       * Signature.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return instance.getSignature();
      }
      /**
       * <pre>
       * Signature.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignature(value);
        return this;
      }
      /**
       * <pre>
       * Signature.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        copyOnWrite();
        instance.clearSignature();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.VeChain.Proto.SigningOutput)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new wallet.core.jni.proto.VeChain.SigningOutput();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "encoded_",
              "signature_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<wallet.core.jni.proto.VeChain.SigningOutput> parser = PARSER;
          if (parser == null) {
            synchronized (wallet.core.jni.proto.VeChain.SigningOutput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<wallet.core.jni.proto.VeChain.SigningOutput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.VeChain.Proto.SigningOutput)
    private static final wallet.core.jni.proto.VeChain.SigningOutput DEFAULT_INSTANCE;
    static {
      SigningOutput defaultInstance = new SigningOutput();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SigningOutput.class, defaultInstance);
    }

    public static wallet.core.jni.proto.VeChain.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SigningOutput> PARSER;

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
