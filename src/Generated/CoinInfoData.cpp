// Copyright Â© 2017-2022 Trust Wallet.
//
// This file is part of Trust. The full Trust copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.
//
// This is a GENERATED FILE, changes made here WILL BE LOST.
//

#include "Coin.h"
#include <TrustWalletCore/TWCoinTypeConfiguration.h>

#include <vector>
#include <cassert>

using namespace TW;

static const CoinInfo defaultsForMissing = {
    "?",
    "?",
    TWBlockchainBitcoin,
    TWPurposeBIP44,
    TWCurveNone,
    {Derivation()},
    TWPublicKeyTypeSECP256k1,
    0,
    0,
    0,
    TWHRPUnknown,
    "",
    Hash::HasherSha256ripemd,
    Hash::HasherSha256d,
    Hash::HasherSha256ripemd,
    "?",
    2,
    "",
    "",
    0,
    "",
};

/// Get coin from map, if missing returns defaults (not to have contains-check in each accessor method)
const CoinInfo getCoinInfo(TWCoinType coin) {
    // switch is preferred instead of a data structure, due to initialization issues
    switch (coin) {
        case TWCoinTypeBitcoin:
            return CoinInfo {
                "bitcoin",
                "Bitcoin",
                TWBlockchainBitcoin,
                TWPurposeBIP84,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationBitcoinSegwit,
                        "m/84'/0'/0'/0/0",
                        "segwit",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                {
                        TWDerivationBitcoinLegacy,
                        "m/44'/0'/0'/0/0",
                        "legacy",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                {
                        TWDerivationBitcoinTestnet,
                        "m/84'/1'/0'/0/0",
                        "testnet",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                5,
                TWHRPBitcoin,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BTC",
                8,
                "https://blockchair.com/bitcoin/transaction/",
                "https://blockchair.com/bitcoin/address/",
                0,
                "Bitcoin",
            };
        case TWCoinTypeLitecoin:
            return CoinInfo {
                "litecoin",
                "Litecoin",
                TWBlockchainBitcoin,
                TWPurposeBIP84,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/84'/2'/0'/0/0",
                        "",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                {
                        TWDerivationLitecoinLegacy,
                        "m/44'/2'/0'/0/0",
                        "legacy",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                48,
                50,
                TWHRPLitecoin,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "LTC",
                8,
                "https://blockchair.com/litecoin/transaction/",
                "https://blockchair.com/litecoin/address/",
                2,
                "Litecoin",
            };
        case TWCoinTypeDogecoin:
            return CoinInfo {
                "doge",
                "Dogecoin",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/3'/0'/0/0",
                        "",
                        TWHDVersionDGUB,
                        TWHDVersionDGPV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                30,
                22,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "DOGE",
                8,
                "https://blockchair.com/dogecoin/transaction/",
                "https://blockchair.com/dogecoin/address/",
                3,
                "Dogecoin",
            };
        case TWCoinTypeDash:
            return CoinInfo {
                "dash",
                "Dash",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/5'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                76,
                16,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "DASH",
                8,
                "https://blockchair.com/dash/transaction/",
                "https://blockchair.com/dash/address/",
                5,
                "Dash",
            };
        case TWCoinTypeViacoin:
            return CoinInfo {
                "viacoin",
                "Viacoin",
                TWBlockchainBitcoin,
                TWPurposeBIP84,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/84'/14'/0'/0/0",
                        "",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                71,
                33,
                TWHRPViacoin,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "VIA",
                8,
                "https://explorer.viacoin.org/tx/",
                "https://explorer.viacoin.org/address/",
                14,
                "",
            };
        case TWCoinTypeGroestlcoin:
            return CoinInfo {
                "groestlcoin",
                "Groestlcoin",
                TWBlockchainGroestlcoin,
                TWPurposeBIP84,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/84'/17'/0'/0/0",
                        "",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                36,
                5,
                TWHRPGroestlcoin,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherGroestl512d,
                Hash::HasherSha256ripemd,
                "GRS",
                8,
                "https://blockchair.com/groestlcoin/transaction/",
                "https://blockchair.com/groestlcoin/address/",
                17,
                "",
            };
        case TWCoinTypeDigiByte:
            return CoinInfo {
                "digibyte",
                "DigiByte",
                TWBlockchainBitcoin,
                TWPurposeBIP84,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/84'/20'/0'/0/0",
                        "",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                30,
                63,
                TWHRPDigiByte,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "DGB",
                8,
                "https://digiexplorer.info/tx/",
                "https://digiexplorer.info/address/",
                20,
                "DigiByte",
            };
        case TWCoinTypeMonacoin:
            return CoinInfo {
                "monacoin",
                "Monacoin",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/22'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                50,
                55,
                TWHRPMonacoin,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "MONA",
                8,
                "https://blockbook.electrum-mona.org/tx/",
                "https://blockbook.electrum-mona.org/address/",
                22,
                "",
            };
        case TWCoinTypeDecred:
            return CoinInfo {
                "decred",
                "Decred",
                TWBlockchainDecred,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/42'/0'/0/0",
                        "",
                        TWHDVersionDPUB,
                        TWHDVersionDPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                7,
                63,
                26,
                TWHRPUnknown,
                "",
                Hash::HasherBlake256ripemd,
                Hash::HasherBlake256d,
                Hash::HasherSha256ripemd,
                "DCR",
                8,
                "https://dcrdata.decred.org/tx/",
                "https://dcrdata.decred.org/address/",
                42,
                "Decred",
            };
        case TWCoinTypeSyscoin:
            return CoinInfo {
                "syscoin",
                "Syscoin",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/57'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                63,
                5,
                TWHRPSyscoin,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "SYS",
                8,
                "https://sys1.bcfn.ca//tx/",
                "https://sys1.bcfn.ca//address/",
                57,
                "Syscoin",
            };
        case TWCoinTypeEthereum:
            return CoinInfo {
                "ethereum",
                "Ethereum",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "ETH",
                18,
                "https://etherscan.io/tx/",
                "https://etherscan.io/address/",
                60,
                "Ethereum",
            };
        case TWCoinTypeEthereumClassic:
            return CoinInfo {
                "classic",
                "Ethereum Classic",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/61'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "61",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "ETC",
                18,
                "https://blockscout.com/etc/mainnet/tx/",
                "https://blockscout.com/etc/mainnet/address/",
                61,
                "Ethereum Classic",
            };
        case TWCoinTypeICON:
            return CoinInfo {
                "icon",
                "ICON",
                TWBlockchainIcon,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/74'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ICX",
                18,
                "https://tracker.icon.foundation/transaction/",
                "https://tracker.icon.foundation/address/",
                74,
                "ICON",
            };
        case TWCoinTypeCosmos:
            return CoinInfo {
                "cosmos",
                "Cosmos",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/118'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPCosmos,
                "cosmoshub-4",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ATOM",
                6,
                "https://mintscan.io/cosmos/txs/",
                "https://mintscan.io/cosmos/account/",
                118,
                "Cosmos",
            };
        case TWCoinTypeHorizen:
            return CoinInfo {
                "horizen",
                "Horizen",
                TWBlockchainHorizen,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/121'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                32,
                137,
                150,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ZEN",
                8,
                "https://explorer.zensystem.io//tx/",
                "https://explorer.zensystem.io//address/",
                121,
                "Horizen",
            };
        case TWCoinTypeZcash:
            return CoinInfo {
                "zcash",
                "Zcash",
                TWBlockchainZcash,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/133'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                28,
                184,
                189,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ZEC",
                8,
                "https://blockchair.com/zcash/transaction/",
                "https://blockchair.com/zcash/address/",
                133,
                "Zcash",
            };
        case TWCoinTypeFiro:
            return CoinInfo {
                "firo",
                "Firo",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/136'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                82,
                7,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "FIRO",
                8,
                "https://explorer.firo.org/tx/",
                "https://explorer.firo.org/address/",
                136,
                "",
            };
        case TWCoinTypeLBRYCredits:
            return CoinInfo {
                "lbry",
                "LBRY Credits",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/140'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                85,
                122,
                TWHRPLBRYCredits,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "LBC",
                8,
                "https://explorer.lbry.com/tx/",
                "https://explorer.lbry.com/address/",
                140,
                "LBRY Credits",
            };
        case TWCoinTypeXRP:
            return CoinInfo {
                "ripple",
                "Ripple",
                TWBlockchainRipple,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/144'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "XRP",
                6,
                "https://bithomp.com/explorer/",
                "https://bithomp.com/explorer/",
                144,
                "Ripple",
            };
        case TWCoinTypeBitcoinCash:
            return CoinInfo {
                "bitcoincash",
                "Bitcoin Cash",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/145'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                5,
                TWHRPBitcoinCash,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BCH",
                8,
                "https://blockchair.com/bitcoin-cash/transaction/",
                "https://blockchair.com/bitcoin-cash/address/",
                145,
                "Bitcoin Cash",
            };
        case TWCoinTypeStellar:
            return CoinInfo {
                "stellar",
                "Stellar",
                TWBlockchainStellar,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/148'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "XLM",
                7,
                "https://blockchair.com/stellar/transaction/",
                "https://blockchair.com/stellar/account/",
                148,
                "Stellar",
            };
        case TWCoinTypeBitcoinGold:
            return CoinInfo {
                "bitcoingold",
                "Bitcoin Gold",
                TWBlockchainBitcoin,
                TWPurposeBIP84,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/84'/156'/0'/0/0",
                        "",
                        TWHDVersionZPUB,
                        TWHDVersionZPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                38,
                23,
                TWHRPBitcoinGold,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BTG",
                8,
                "https://explorer.bitcoingold.org/insight/tx/",
                "https://explorer.bitcoingold.org/insight/address/",
                156,
                "",
            };
        case TWCoinTypeNano:
            return CoinInfo {
                "nano",
                "Nano",
                TWBlockchainNano,
                TWPurposeBIP44,
                TWCurveED25519Blake2bNano,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/165'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519Blake2b,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "XNO",
                30,
                "https://nanocrawler.cc/explorer/block/",
                "https://nanocrawler.cc/explorer/account/",
                165,
                "",
            };
        case TWCoinTypeRavencoin:
            return CoinInfo {
                "ravencoin",
                "Ravencoin",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/175'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                60,
                122,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "RVN",
                8,
                "https://ravencoin.network/tx/",
                "https://ravencoin.network/address/",
                175,
                "Ravencoin",
            };
        case TWCoinTypePOANetwork:
            return CoinInfo {
                "poa",
                "POA Network",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/178'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "99",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "POA",
                18,
                "https://blockscout.com/poa/core/tx/",
                "https://blockscout.com/poa/core/address/",
                178,
                "",
            };
        case TWCoinTypeEOS:
            return CoinInfo {
                "eos",
                "EOS",
                TWBlockchainEOS,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/194'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "EOS",
                4,
                "https://bloks.io/transaction/",
                "https://bloks.io/account/",
                194,
                "",
            };
        case TWCoinTypeTron:
            return CoinInfo {
                "tron",
                "Tron",
                TWBlockchainTron,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/195'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "TRX",
                6,
                "https://tronscan.org/#/transaction/",
                "https://tronscan.org/#/address/",
                195,
                "Tron",
            };
        case TWCoinTypeFIO:
            return CoinInfo {
                "fio",
                "FIO",
                TWBlockchainFIO,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/235'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "FIO",
                9,
                "https://explorer.fioprotocol.io/transaction/",
                "https://explorer.fioprotocol.io/account/",
                235,
                "",
            };
        case TWCoinTypeBitcoinSV:
            return CoinInfo {
                "bitcoinsv",
                "Bitcoin SV",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/236'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                5,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BSV",
                8,
                "https://explorer.viawallet.com/bsv/tx/",
                "https://explorer.viawallet.com/bsv/address/",
                236,
                "Bitcoin SV",
            };
        case TWCoinTypeNimiq:
            return CoinInfo {
                "nimiq",
                "Nimiq",
                TWBlockchainNimiq,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/242'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "NIM",
                5,
                "https://nimiq.watch/#",
                "https://nimiq.watch/#",
                242,
                "",
            };
        case TWCoinTypeAlgorand:
            return CoinInfo {
                "algorand",
                "Algorand",
                TWBlockchainAlgorand,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/283'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ALGO",
                6,
                "https://algoexplorer.io/tx/",
                "https://algoexplorer.io/address/",
                283,
                "Algorand",
            };
        case TWCoinTypeIoTeX:
            return CoinInfo {
                "iotex",
                "IoTeX",
                TWBlockchainIoTeX,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/304'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPIoTeX,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "IOTX",
                18,
                "https://iotexscan.io/action/",
                "https://iotexscan.io/address/",
                304,
                "",
            };
        case TWCoinTypeNervosCKB:
            return CoinInfo {
                "nervosckb",
                "Nervos",
                TWBlockchainNervos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/309'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPNervosCKB,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "CKB",
                8,
                "https://explorer.nervos.org/transaction/",
                "https://explorer.nervos.org/address/",
                309,
                "Nervos",
            };
        case TWCoinTypeZilliqa:
            return CoinInfo {
                "zilliqa",
                "Zilliqa",
                TWBlockchainZilliqa,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/313'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPZilliqa,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ZIL",
                12,
                "https://viewblock.io/zilliqa/tx/",
                "https://viewblock.io/zilliqa/address/",
                313,
                "Zilliqa",
            };
        case TWCoinTypePolkadot:
            return CoinInfo {
                "polkadot",
                "Polkadot",
                TWBlockchainPolkadot,
                TWPurposeBIP44,
                TWCurveSR25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/354'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSR25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "DOT",
                10,
                "https://polkadot.subscan.io/extrinsic/",
                "https://polkadot.subscan.io/account/",
                354,
                "Polkadot",
            };
        case TWCoinTypeCryptoOrg:
            return CoinInfo {
                "cryptoorg",
                "Crypto.org",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/394'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPCryptoOrg,
                "crypto-org-chain-mainnet-1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "CRO",
                8,
                "https://crypto.org/explorer/tx/",
                "https://crypto.org/explorer/account/",
                394,
                "",
            };
        case TWCoinTypeEverscale:
            return CoinInfo {
                "everscale",
                "Everscale",
                TWBlockchainEverscale,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/396'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "EVER",
                9,
                "https://everscan.io/transactions/",
                "https://everscan.io/accounts/",
                396,
                "",
            };
        case TWCoinTypeNEAR:
            return CoinInfo {
                "near",
                "NEAR Protocol",
                TWBlockchainNEAR,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/397'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "NEAR",
                24,
                "https://explorer.near.org/transactions/",
                "https://explorer.near.org/accounts/",
                397,
                "NEAR Protocol",
            };
        case TWCoinTypeAion:
            return CoinInfo {
                "aion",
                "Aion",
                TWBlockchainAion,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/425'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "AION",
                18,
                "https://mainnet.aion.network/#/transaction/",
                "https://mainnet.aion.network/#/account/",
                425,
                "",
            };
        case TWCoinTypeErgo:
            return CoinInfo {
                "ergo",
                "Ergo",
                TWBlockchainErgo,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/429'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ERG",
                9,
                "https://explorer.ergoplatform.com/en//transactions",
                "https://explorer.ergoplatform.com/en//addresses/",
                429,
                "Ergo",
            };
        case TWCoinTypeKusama:
            return CoinInfo {
                "kusama",
                "Kusama",
                TWBlockchainKusama,
                TWPurposeBIP44,
                TWCurveSR25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/434'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSR25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "KSM",
                12,
                "https://kusama.subscan.io/extrinsic/",
                "https://kusama.subscan.io/account/",
                434,
                "Kusama",
            };
        case TWCoinTypeAeternity:
            return CoinInfo {
                "aeternity",
                "Aeternity",
                TWBlockchainAeternity,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/457'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "AE",
                18,
                "https://explorer.aepps.com/transactions/",
                "https://explorer.aepps.com/account/transactions/",
                457,
                "",
            };
        case TWCoinTypeKava:
            return CoinInfo {
                "kava",
                "Kava",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/459'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPKava,
                "kava_2222-10",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "KAVA",
                6,
                "https://mintscan.io/kava/txs/",
                "https://mintscan.io/kava/account/",
                459,
                "Kava",
            };
        case TWCoinTypeFilecoin:
            return CoinInfo {
                "filecoin",
                "Filecoin",
                TWBlockchainFilecoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/461'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "FIL",
                18,
                "https://filfox.info/en/message/",
                "https://filfox.info/en/address/",
                461,
                "",
            };
        case TWCoinTypeOasis:
            return CoinInfo {
                "oasis",
                "Oasis Network",
                TWBlockchainOasisNetwork,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/474'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPOasis,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ROSE",
                9,
                "https://oasisscan.com/transactions/",
                "https://oasisscan.com/accounts/detail/",
                474,
                "Oasis Network",
            };
        case TWCoinTypeBluzelle:
            return CoinInfo {
                "bluzelle",
                "Bluzelle",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/483'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPBluzelle,
                "bluzelle",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BLZ",
                6,
                "https://bigdipper.net.bluzelle.com/transactions/",
                "https://bigdipper.net.bluzelle.com/account/",
                483,
                "",
            };
        case TWCoinTypeFreecash:
            return CoinInfo {
                "freecash",
                "Freecash",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/485'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                35,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "FCH",
                8,
                "https://explorer.viawallet.com/fch/tx/",
                "https://explorer.viawallet.com/fch/address/",
                485,
                "Freecash",
            };
        case TWCoinTypeBandChain:
            return CoinInfo {
                "band",
                "BandChain",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/494'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPBandChain,
                "laozi-mainnet",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BAND",
                6,
                "https://scan-wenchang-testnet2.bandchain.org//tx/",
                "https://scan-wenchang-testnet2.bandchain.org//account/",
                494,
                "",
            };
        case TWCoinTypeTheta:
            return CoinInfo {
                "theta",
                "Theta",
                TWBlockchainTheta,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/500'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "THETA",
                18,
                "https://explorer.thetatoken.org/txs/",
                "https://explorer.thetatoken.org/account/",
                500,
                "",
            };
        case TWCoinTypeSolana:
            return CoinInfo {
                "solana",
                "Solana",
                TWBlockchainSolana,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/501'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                {
                        TWDerivationSolanaSolana,
                        "m/44'/501'/0'/0'",
                        "solana",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "SOL",
                9,
                "https://solscan.io/tx/",
                "https://solscan.io/account/",
                501,
                "",
            };
        case TWCoinTypeConfluxNetwork:
            return CoinInfo {
                "conflux",
                "Conflux",
                TWBlockchainConflux,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/503'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "CFX",
                18,
                "https://www.confluxscan.io/transaction/",
                "https://www.confluxscan.io/address/",
                503,
                "Conflux",
            };
        case TWCoinTypeElrond:
            return CoinInfo {
                "elrond",
                "Elrond",
                TWBlockchainElrondNetwork,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/508'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPElrond,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "eGLD",
                18,
                "https://explorer.elrond.com/transactions/",
                "https://explorer.elrond.com/address/",
                508,
                "",
            };
        case TWCoinTypeKadena:
            return CoinInfo {
                "kadena",
                "Kadena",
                TWBlockchainKadena,
                TWPurposeBIP44,
                TWCurveED25519ExtendedKDA,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/626'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeKadena,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "KDA",
                12,
                "https://explorer.chainweb.com/mainnet/tx/",
                "https://explorer.chainweb.com/mainnet",
                626,
                "Kadena",
            };
        case TWCoinTypeAptos:
            return CoinInfo {
                "aptos",
                "Aptos",
                TWBlockchainAptos,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/637'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "APT",
                8,
                "https://explorer.aptoslabs.com/txn/",
                "https://explorer.aptoslabs.com/account/",
                637,
                "",
            };
        case TWCoinTypeBinance:
            return CoinInfo {
                "binance",
                "BNB Beacon Chain",
                TWBlockchainBinance,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/714'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPBinance,
                "Binance-Chain-Tigris",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "BNB",
                8,
                "https://explorer.binance.org/tx/",
                "https://explorer.binance.org/address/",
                714,
                "",
            };
        case TWCoinTypeVeChain:
            return CoinInfo {
                "vechain",
                "VeChain",
                TWBlockchainVechain,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/818'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "74",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "VET",
                18,
                "https://explore.vechain.org/transactions/",
                "https://explore.vechain.org/accounts/",
                818,
                "VeChain",
            };
        case TWCoinTypeCallisto:
            return CoinInfo {
                "callisto",
                "Callisto",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/820'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "820",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "CLO",
                18,
                "https://explorer.callisto.network/tx/",
                "https://explorer.callisto.network/addr/",
                820,
                "",
            };
        case TWCoinTypeNEO:
            return CoinInfo {
                "neo",
                "NEO",
                TWBlockchainNEO,
                TWPurposeBIP44,
                TWCurveNIST256p1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/888'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeNIST256p1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "NEO",
                8,
                "https://neoscan.io/transaction/",
                "https://neoscan.io/address/",
                888,
                "",
            };
        case TWCoinTypeTomoChain:
            return CoinInfo {
                "tomochain",
                "TomoChain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/889'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "88",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "TOMO",
                18,
                "https://tomoscan.io/tx/",
                "https://tomoscan.io/address/",
                889,
                "",
            };
        case TWCoinTypeTHORChain:
            return CoinInfo {
                "thorchain",
                "THORChain",
                TWBlockchainThorchain,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/931'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPTHORChain,
                "thorchain-mainnet-v1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "RUNE",
                8,
                "https://viewblock.io/thorchain/tx/",
                "https://viewblock.io/thorchain/address/",
                931,
                "",
            };
        case TWCoinTypePolygon:
            return CoinInfo {
                "polygon",
                "Polygon",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "137",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "MATIC",
                18,
                "https://polygonscan.com/tx/",
                "https://polygonscan.com/address/",
                60,
                "Polygon",
            };
        case TWCoinTypeOKXChain:
            return CoinInfo {
                "okc",
                "OKX Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "66",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "OKT",
                18,
                "https://www.oklink.com/en/okc/tx/",
                "https://www.oklink.com/en/okc/address/",
                60,
                "",
            };
        case TWCoinTypeThunderToken:
            return CoinInfo {
                "thundertoken",
                "Thunder Token",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/1001'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "108",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "TT",
                18,
                "https://scan.thundercore.com/transactions/",
                "https://scan.thundercore.com/address/",
                1001,
                "",
            };
        case TWCoinTypeECOChain:
            return CoinInfo {
                "heco",
                "Huobi ECO Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "128",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "HT",
                18,
                "https://hecoinfo.com/tx/",
                "https://hecoinfo.com/address/",
                60,
                "Huobi Token",
            };
        case TWCoinTypeHarmony:
            return CoinInfo {
                "harmony",
                "Harmony",
                TWBlockchainHarmony,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/1023'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPHarmony,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ONE",
                18,
                "https://explorer.harmony.one/#/tx/",
                "https://explorer.harmony.one/#/address/",
                1023,
                "",
            };
        case TWCoinTypeOntology:
            return CoinInfo {
                "ontology",
                "Ontology",
                TWBlockchainOntology,
                TWPurposeBIP44,
                TWCurveNIST256p1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/1024'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeNIST256p1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ONT",
                0,
                "https://explorer.ont.io/transaction/",
                "https://explorer.ont.io/address/",
                1024,
                "Ontology",
            };
        case TWCoinTypeTezos:
            return CoinInfo {
                "tezos",
                "Tezos",
                TWBlockchainTezos,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/1729'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "XTZ",
                6,
                "https://tzstats.com/",
                "https://tzstats.com/",
                1729,
                "Tezos",
            };
        case TWCoinTypeCardano:
            return CoinInfo {
                "cardano",
                "Cardano",
                TWBlockchainCardano,
                TWPurposeBIP1852,
                TWCurveED25519ExtendedCardano,
                {
                    {
                        TWDerivationDefault,
                        "m/1852'/1815'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519Cardano,
                0,
                0,
                0,
                TWHRPCardano,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "ADA",
                6,
                "https://cardanoscan.io/transaction/",
                "https://cardanoscan.io/address/",
                1815,
                "Cardano",
            };
        case TWCoinTypeKin:
            return CoinInfo {
                "kin",
                "Kin",
                TWBlockchainStellar,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/2017'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeED25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "KIN",
                5,
                "https://www.kin.org/blockchainInfoPage/?&dataType=public&header=Transaction&id=",
                "https://www.kin.org/blockchainAccount/?&dataType=public&header=accountID&id=",
                2017,
                "",
            };
        case TWCoinTypeQtum:
            return CoinInfo {
                "qtum",
                "Qtum",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/2301'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                58,
                50,
                TWHRPQtum,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "QTUM",
                8,
                "https://qtum.info/tx/",
                "https://qtum.info/address/",
                2301,
                "",
            };
        case TWCoinTypeNebulas:
            return CoinInfo {
                "nebulas",
                "Nebulas",
                TWBlockchainNebulas,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/2718'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "NAS",
                18,
                "https://explorer.nebulas.io/#/tx/",
                "https://explorer.nebulas.io/#/address/",
                2718,
                "",
            };
        case TWCoinTypeHandshake:
            return CoinInfo {
                "handshake",
                "Handshake",
                TWBlockchainHandshake,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/5353'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPHandshake,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "HNS",
                6,
                "https://hnscan.com/tx/",
                "https://hnscan.com/address/",
                5353,
                "Handshake",
            };
        case TWCoinTypeGoChain:
            return CoinInfo {
                "gochain",
                "GoChain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/6060'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "60",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "GO",
                18,
                "https://explorer.gochain.io/tx/",
                "https://explorer.gochain.io/addr/",
                6060,
                "",
            };
        case TWCoinTypeBase:
            return CoinInfo {
                "base",
                "Base",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "8453",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "BASE",
                18,
                "https://basescan.org/tx/",
                "https://basescan.org/address/",
                60,
                "Ethereum(Base)",
            };
        case TWCoinTypeNULS:
            return CoinInfo {
                "nuls",
                "NULS",
                TWBlockchainNULS,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/8964'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "NULS",
                8,
                "https://nulscan.io/transaction/info?hash=",
                "https://nulscan.io/address/info?address=",
                8964,
                "",
            };
        case TWCoinTypeMina:
            return CoinInfo {
                "mina",
                "Mina",
                TWBlockchainMina,
                TWPurposeBIP44,
                TWCurveSECP256k1Mina,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/12586'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeMina,
                0,
                0,
                5,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "MINA",
                9,
                "https://minaexplorer.com/transaction/",
                "https://minaexplorer.com/wallet/",
                12586,
                "Mina",
            };
        case TWCoinTypeMeter:
            return CoinInfo {
                "meter",
                "Meter",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "82",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "MTR",
                18,
                "https://scan.meter.io/tx/",
                "https://scan.meter.io/address/",
                60,
                "",
            };
        case TWCoinTypeZelcash:
            return CoinInfo {
                "zelcash",
                "Flux",
                TWBlockchainZcash,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/19167'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                28,
                184,
                189,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "FLUX",
                8,
                "https://explorer.runonflux.io/tx/",
                "https://explorer.runonflux.io/address/",
                19167,
                "",
            };
        case TWCoinTypeCelo:
            return CoinInfo {
                "celo",
                "Celo",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "42220",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "CELO",
                18,
                "https://explorer.celo.org/tx/",
                "https://explorer.celo.org/address/",
                60,
                "",
            };
        case TWCoinTypeKaspa:
            return CoinInfo {
                "kaspa",
                "Kaspa",
                TWBlockchainKaspa,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/111111'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPKaspa,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "KAS",
                8,
                "https://explorer.kaspa.org//txs/",
                "https://explorer.kaspa.org//address/",
                111111,
                "Kaspa",
            };
        case TWCoinTypeCoinExSmartChain:
            return CoinInfo {
                "coinexsmartchain",
                "CoinEx Smart Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "52",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "CET",
                18,
                "https://www.coinex.net//tx/",
                "https://www.coinex.net//address/",
                60,
                "CoinEx Token",
            };
        case TWCoinTypeWanchain:
            return CoinInfo {
                "wanchain",
                "Wanchain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/5718350'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "888",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "WAN",
                18,
                "https://www.wanscan.org/tx/",
                "https://www.wanscan.org/address/",
                5718350,
                "",
            };
        case TWCoinTypeWaves:
            return CoinInfo {
                "waves",
                "Waves",
                TWBlockchainWaves,
                TWPurposeBIP44,
                TWCurveED25519,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/5741564'/0'/0'/0'",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeCURVE25519,
                0,
                0,
                0,
                TWHRPUnknown,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "WAVES",
                8,
                "https://wavesexplorer.com/tx/",
                "https://wavesexplorer.com/address/",
                5741564,
                "",
            };
        case TWCoinTypeCronosChain:
            return CoinInfo {
                "cronos",
                "Cronos Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "25",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "CRO",
                18,
                "https://cronoscan.com/tx/",
                "https://cronoscan.com/address/",
                60,
                "",
            };
        case TWCoinTypeOptimism:
            return CoinInfo {
                "optimism",
                "Optimistic",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "10",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "OP",
                18,
                "https://optimistic.etherscan.io/tx/",
                "https://optimistic.etherscan.io/address/",
                60,
                "Ethereum(OP)",
            };
        case TWCoinTypeXDai:
            return CoinInfo {
                "xdai",
                "Gnosis Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "100",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "xDAI",
                18,
                "https://blockscout.com/xdai/mainnet/tx/",
                "https://blockscout.com/xdai/mainnet/address/",
                60,
                "",
            };
        case TWCoinTypeIRISnet:
            return CoinInfo {
                "iris",
                "IRISnet",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/118'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPIRISnet,
                "irishub-1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "IRIS",
                6,
                "https://www.irisplorer.io/#/tx?txHash=",
                "https://www.irisplorer.io/#/address/",
                118,
                "IRISnet",
            };
        case TWCoinTypeSmartBitcoinCash:
            return CoinInfo {
                "smartbch",
                "Smart Bitcoin Cash",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "10000",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "BCH",
                18,
                "https://www.smartscan.cash/tx/",
                "https://www.smartscan.cash/address/",
                60,
                "",
            };
        case TWCoinTypeFantom:
            return CoinInfo {
                "fantom",
                "Fantom",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "250",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "FTM",
                18,
                "https://ftmscan.com/tx/",
                "https://ftmscan.com/address/",
                60,
                "Fantom",
            };
        case TWCoinTypeZksync:
            return CoinInfo {
                "zksync",
                "zkSync v2",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "280",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "ETH",
                18,
                "https://zksync2-testnet.zkscan.io/tx/",
                "https://zksync2-testnet.zkscan.io/address/",
                60,
                "",
            };
        case TWCoinTypeBoba:
            return CoinInfo {
                "boba",
                "Boba",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "288",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "BOBAETH",
                18,
                "https://blockexplorer.boba.network/tx/",
                "https://blockexplorer.boba.network/address/",
                60,
                "",
            };
        case TWCoinTypeKuCoinCommunityChain:
            return CoinInfo {
                "kcc",
                "KuCoin Community Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "321",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "KCS",
                18,
                "https://explorer.kcc.io/en/tx/",
                "https://explorer.kcc.io/en/address/",
                60,
                "",
            };
        case TWCoinTypeTerraClassic:
            return CoinInfo {
                "terraclassic",
                "Terra Classic",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/330'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPTerraClassic,
                "columbus-5",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "LUNC",
                6,
                "https://finder.terra.money/tx/tx/",
                "https://finder.terra.money/tx/address/",
                330,
                "Terra Classic",
            };
        case TWCoinTypeSmartChainLegacy:
            return CoinInfo {
                "bsc",
                "Smart Chain Legacy",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/714'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "56",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "BNB",
                18,
                "https://bscscan.com/tx/",
                "https://bscscan.com/address/",
                714,
                "",
            };
        case TWCoinTypeMetis:
            return CoinInfo {
                "metis",
                "Metis",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "1088",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "METIS",
                18,
                "https://andromeda-explorer.metis.io/tx/",
                "https://andromeda-explorer.metis.io/address/",
                60,
                "",
            };
        case TWCoinTypeMoonbeam:
            return CoinInfo {
                "moonbeam",
                "Moonbeam",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "1284",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "GLMR",
                18,
                "https://moonscan.io/tx/",
                "https://moonscan.io/address/",
                60,
                "",
            };
        case TWCoinTypeMoonriver:
            return CoinInfo {
                "moonriver",
                "Moonriver",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "1285",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "MOVR",
                18,
                "https://moonriver.moonscan.io/tx/",
                "https://moonriver.moonscan.io/address/",
                60,
                "",
            };
        case TWCoinTypeRonin:
            return CoinInfo {
                "ronin",
                "Ronin",
                TWBlockchainRonin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "2020",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "RON",
                18,
                "https://explorer.roninchain.com/tx/",
                "https://explorer.roninchain.com/address/",
                60,
                "",
            };
        case TWCoinTypeKavaEvm:
            return CoinInfo {
                "kavaevm",
                "KavaEvm",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "2222",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "KAVA",
                18,
                "https://explorer.kava.io/tx/",
                "https://explorer.kava.io/address/",
                60,
                "",
            };
        case TWCoinTypeKlaytn:
            return CoinInfo {
                "klaytn",
                "Klaytn",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "8217",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "KLAY",
                18,
                "https://scope.klaytn.com/tx/",
                "https://scope.klaytn.com/account/",
                60,
                "",
            };
        case TWCoinTypeAvalancheCChain:
            return CoinInfo {
                "avalanchec",
                "Avalanche C-Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "43114",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "AVAX",
                18,
                "https://snowtrace.io/tx/",
                "https://snowtrace.io/address/",
                60,
                "Avalanche",
            };
        case TWCoinTypeEvmos:
            return CoinInfo {
                "evmos",
                "Evmos",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "9001",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "EVMOS",
                18,
                "https://evm.evmos.org/tx/",
                "https://evm.evmos.org/address/",
                60,
                "",
            };
        case TWCoinTypeArbitrum:
            return CoinInfo {
                "arbitrum",
                "Arbitrum",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "42161",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "ARB",
                18,
                "https://arbiscan.io/tx/",
                "https://arbiscan.io/address/",
                60,
                "Ethereum(ARB)",
            };
        case TWCoinTypeOsmosis:
            return CoinInfo {
                "osmosis",
                "Osmosis",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/118'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPOsmosis,
                "osmosis-1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "OSMO",
                6,
                "https://mintscan.io/osmosis/txs/",
                "https://mintscan.io/osmosis/account/",
                118,
                "",
            };
        case TWCoinTypeECash:
            return CoinInfo {
                "ecash",
                "eCash",
                TWBlockchainBitcoin,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/145'/0'/0/0",
                        "",
                        TWHDVersionXPUB,
                        TWHDVersionXPRV,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                5,
                TWHRPECash,
                "",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "XEC",
                2,
                "https://explorer.bitcoinabc.org/tx/",
                "https://explorer.bitcoinabc.org/address/",
                145,
                "eCash",
            };
        case TWCoinTypeTerra:
            return CoinInfo {
                "terra",
                "Terra Classic",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/330'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1,
                0,
                0,
                0,
                TWHRPTerra,
                "phoenix-1",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherSha256ripemd,
                "LUNA",
                6,
                "https://finder.terra.money/tx/tx/",
                "https://finder.terra.money/tx/address/",
                330,
                "Terra Classic",
            };
        case TWCoinTypeSmartChain:
            return CoinInfo {
                "smartchain",
                "Binance Smart Chain",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "56",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "BNB",
                18,
                "https://bscscan.com/tx/",
                "https://bscscan.com/address/",
                60,
                "Binance Coin",
            };
        case TWCoinTypeNativeEvmos:
            return CoinInfo {
                "nativeevmos",
                "Native Evmos",
                TWBlockchainCosmos,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPNativeEvmos,
                "evmos_9001-2",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "EVMOS",
                18,
                "https://mintscan.io/evmos/txs/",
                "https://mintscan.io/evmos/account/",
                60,
                "",
            };
        case TWCoinTypeAurora:
            return CoinInfo {
                "aurora",
                "Aurora",
                TWBlockchainEthereum,
                TWPurposeBIP44,
                TWCurveSECP256k1,
                {
                    {
                        TWDerivationDefault,
                        "m/44'/60'/0'/0/0",
                        "",
                        TWHDVersionNone,
                        TWHDVersionNone,
                    },
                },
                TWPublicKeyTypeSECP256k1Extended,
                0,
                0,
                0,
                TWHRPUnknown,
                "1313161554",
                Hash::HasherSha256ripemd,
                Hash::HasherSha256d,
                Hash::HasherKeccak256,
                "ETH",
                18,
                "https://aurorascan.dev/tx/",
                "https://aurorascan.dev/address/",
                60,
                "",
            };
        default:
            return defaultsForMissing;
    }
}

std::vector<TWCoinType> TW::getCoinTypes() {
    return std::vector<TWCoinType>({
            TWCoinTypeBitcoin,
            TWCoinTypeLitecoin,
            TWCoinTypeDogecoin,
            TWCoinTypeDash,
            TWCoinTypeViacoin,
            TWCoinTypeGroestlcoin,
            TWCoinTypeDigiByte,
            TWCoinTypeMonacoin,
            TWCoinTypeDecred,
            TWCoinTypeSyscoin,
            TWCoinTypeEthereum,
            TWCoinTypeEthereumClassic,
            TWCoinTypeICON,
            TWCoinTypeCosmos,
            TWCoinTypeHorizen,
            TWCoinTypeZcash,
            TWCoinTypeFiro,
            TWCoinTypeLBRYCredits,
            TWCoinTypeXRP,
            TWCoinTypeBitcoinCash,
            TWCoinTypeStellar,
            TWCoinTypeBitcoinGold,
            TWCoinTypeNano,
            TWCoinTypeRavencoin,
            TWCoinTypePOANetwork,
            TWCoinTypeEOS,
            TWCoinTypeTron,
            TWCoinTypeFIO,
            TWCoinTypeBitcoinSV,
            TWCoinTypeNimiq,
            TWCoinTypeAlgorand,
            TWCoinTypeIoTeX,
            TWCoinTypeNervosCKB,
            TWCoinTypeZilliqa,
            TWCoinTypePolkadot,
            TWCoinTypeCryptoOrg,
            TWCoinTypeEverscale,
            TWCoinTypeNEAR,
            TWCoinTypeAion,
            TWCoinTypeErgo,
            TWCoinTypeKusama,
            TWCoinTypeAeternity,
            TWCoinTypeKava,
            TWCoinTypeFilecoin,
            TWCoinTypeOasis,
            TWCoinTypeBluzelle,
            TWCoinTypeFreecash,
            TWCoinTypeBandChain,
            TWCoinTypeTheta,
            TWCoinTypeSolana,
            TWCoinTypeConfluxNetwork,
            TWCoinTypeElrond,
            TWCoinTypeKadena,
            TWCoinTypeAptos,
            TWCoinTypeBinance,
            TWCoinTypeVeChain,
            TWCoinTypeCallisto,
            TWCoinTypeNEO,
            TWCoinTypeTomoChain,
            TWCoinTypeTHORChain,
            TWCoinTypePolygon,
            TWCoinTypeOKXChain,
            TWCoinTypeThunderToken,
            TWCoinTypeECOChain,
            TWCoinTypeHarmony,
            TWCoinTypeOntology,
            TWCoinTypeTezos,
            TWCoinTypeCardano,
            TWCoinTypeKin,
            TWCoinTypeQtum,
            TWCoinTypeNebulas,
            TWCoinTypeHandshake,
            TWCoinTypeGoChain,
            TWCoinTypeBase,
            TWCoinTypeNULS,
            TWCoinTypeMina,
            TWCoinTypeMeter,
            TWCoinTypeZelcash,
            TWCoinTypeCelo,
            TWCoinTypeKaspa,
            TWCoinTypeCoinExSmartChain,
            TWCoinTypeWanchain,
            TWCoinTypeWaves,
            TWCoinTypeCronosChain,
            TWCoinTypeOptimism,
            TWCoinTypeXDai,
            TWCoinTypeIRISnet,
            TWCoinTypeSmartBitcoinCash,
            TWCoinTypeFantom,
            TWCoinTypeZksync,
            TWCoinTypeBoba,
            TWCoinTypeKuCoinCommunityChain,
            TWCoinTypeTerraClassic,
            TWCoinTypeSmartChainLegacy,
            TWCoinTypeMetis,
            TWCoinTypeMoonbeam,
            TWCoinTypeMoonriver,
            TWCoinTypeRonin,
            TWCoinTypeKavaEvm,
            TWCoinTypeKlaytn,
            TWCoinTypeAvalancheCChain,
            TWCoinTypeEvmos,
            TWCoinTypeArbitrum,
            TWCoinTypeOsmosis,
            TWCoinTypeECash,
            TWCoinTypeTerra,
            TWCoinTypeSmartChain,
            TWCoinTypeNativeEvmos,
            TWCoinTypeAurora,
        });
}
