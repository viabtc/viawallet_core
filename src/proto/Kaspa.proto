// Copyright Â© 2017-2022 Trust Wallet.
//
// This file is part of Trust. The full Trust copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

package TW.Kaspa.Proto;
option java_package = "wallet.core.jni.proto";

enum TransferError {
    NONE = 0;
    InsufficientBalance = 1;
    InvalidUTXOAmount = 2;
    TransferAmountLessThanMinCapacity = 3;
}

message TransferMessage {
    repeated bytes private_key = 1;
    int64 amount = 2;
    int64 fee = 3;
    string to = 4;
    repeated BitcoinUnspentOutput unspentOutput = 5;
    string changeAddress = 6;
    bool useMaxAmount = 7;
    int64 byteFee = 8;
}

message SigningInput {
    oneof message_oneof {
        TransferMessage transfer = 1;
    }
}

// Transaction signing output.
message SigningOutput {
    // Signed and encoded transaction bytes.
    string json = 1;
}

message BitcoinUnspentOutput {
    string transactionHash = 1;
    int32 outputIndex = 2;
    int64 amount = 3;
    string outputScript = 4;
    string address = 5;
}

message TransferPlan {
    int64 amount = 1;
    int64 availableAmount = 2;
    int64 fee = 3;
    int64 change = 4;
    TransferError error = 5;
};

message TransactionPlan {
    oneof message_oneof {
        TransferPlan transfer = 1;
    }
};