// Copyright Â© 2017-2020 Trust Wallet.
//
// This file is part of Trust. The full Trust copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

package TW.NervosCKB.Proto;
option java_package = "wallet.core.jni.proto";

enum TransferError {
    NONE = 0;
    TransferAmountLessThanMinCapacity = 1;
    ChangeAmountLessThanMinCapacity = 2;
    InsufficientBalance = 3;
}

message OutPoint {
    bytes txHash = 1;
    uint32 index = 2;
}

message CellInput {
    OutPoint previous_output = 1;
    int64 since = 2;
    int64 capacity = 3;
}

message TransferMessage {
    bytes private_key = 1;
    int64 amount = 2;
    int64 fee_rate = 3;
    string to = 4;
    // If sending max amount.
    bool use_max_amount = 5;
    repeated CellInput cells = 6;

}

message TransferPlan {

    int64 amount = 1;

    int64 available_amount = 2;

    int64 fee = 3;

    int64 change = 4;

    TransferError error = 5;

    repeated CellInput cells = 6;
};

message TransactionPlan {
    oneof message_oneof {
        TransferPlan transfer = 1;
    }
};

message SigningInput {

    oneof message_oneof {
        TransferMessage transfer = 1;
    }
}

// Transaction signing output.
message SigningOutput {
    // Signed transaction in JSON.
    string json = 1;
}
